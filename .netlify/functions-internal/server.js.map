{
  "version": 3,
  "sources": ["<define:process.env.REMIX_DEV_HTTP_ORIGIN>", "../../node_modules/.pnpm/fault@2.0.1/node_modules/fault/index.js", "../../node_modules/.pnpm/@babel+runtime@7.22.5/node_modules/@babel/runtime/helpers/interopRequireDefault.js", "../../node_modules/.pnpm/remark-mdx-frontmatter@1.1.1/node_modules/remark-mdx-frontmatter/dist/index.js", "../../node_modules/.pnpm/mdx-bundler@9.2.1_esbuild@0.18.11/node_modules/mdx-bundler/dist/dirname-messed-up.cjs", "../../node_modules/.pnpm/micromark-util-character@1.2.0/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/.pnpm/micromark-util-character@1.2.0/node_modules/micromark-util-character/index.js", "../../node_modules/.pnpm/micromark-extension-frontmatter@1.1.1/node_modules/micromark-extension-frontmatter/matters.js", "../../node_modules/.pnpm/micromark-extension-frontmatter@1.1.1/node_modules/micromark-extension-frontmatter/lib/syntax.js", "../../node_modules/.pnpm/micromark-extension-frontmatter@1.1.1/node_modules/micromark-extension-frontmatter/index.js", "../../node_modules/.pnpm/mdast-util-frontmatter@1.0.1/node_modules/mdast-util-frontmatter/lib/index.js", "../../node_modules/.pnpm/mdast-util-frontmatter@1.0.1/node_modules/mdast-util-frontmatter/index.js", "../../node_modules/.pnpm/remark-frontmatter@4.0.1/node_modules/remark-frontmatter/index.js", "../../node_modules/.pnpm/mdx-bundler@9.2.1_esbuild@0.18.11/node_modules/mdx-bundler/dist/index.js", "../../node_modules/.pnpm/mdx-bundler@9.2.1_esbuild@0.18.11/node_modules/mdx-bundler/dist/client.js", "../../node_modules/.pnpm/mdx-bundler@9.2.1_esbuild@0.18.11/node_modules/mdx-bundler/client/index.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/components/index.ts", "../../app/components/Footer.tsx", "../../app/components/Title.tsx", "../../app/components/Nav/index.ts", "../../app/components/Nav/Nav.tsx", "../../app/assets/images/index.ts", "../../app/components/Nav/DesktopNavLink.tsx", "../../app/components/Nav/MobileNav.tsx", "../../app/components/Page.tsx", "../../app/routes/blog.$slug.tsx", "../../app/utils/mdx.server.ts", "../../node_modules/.pnpm/rehype-highlight@6.0.0/node_modules/rehype-highlight/index.js", "../../node_modules/.pnpm/rehype-highlight@6.0.0/node_modules/rehype-highlight/lib/index.js", "../../node_modules/.pnpm/lowlight@2.9.0/node_modules/lowlight/index.js", "../../node_modules/.pnpm/lowlight@2.9.0/node_modules/lowlight/lib/common.js", "../../node_modules/.pnpm/lowlight@2.9.0/node_modules/lowlight/lib/core.js", "../../node_modules/.pnpm/hast-util-to-text@3.1.2/node_modules/hast-util-to-text/index.js", "../../node_modules/.pnpm/hast-util-to-text@3.1.2/node_modules/hast-util-to-text/lib/index.js", "../../node_modules/.pnpm/hast-util-is-element@2.1.3/node_modules/hast-util-is-element/index.js", "../../node_modules/.pnpm/unist-util-find-after@4.0.1/node_modules/unist-util-find-after/index.js", "../../node_modules/.pnpm/unist-util-find-after@4.0.1/node_modules/unist-util-find-after/lib/index.js", "../../node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/index.js", "../../node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/lib/index.js", "../../node_modules/.pnpm/unist-util-visit@4.1.2/node_modules/unist-util-visit/index.js", "../../node_modules/.pnpm/unist-util-visit@4.1.2/node_modules/unist-util-visit/lib/index.js", "../../node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/index.js", "../../node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/index.js", "../../node_modules/.pnpm/unist-util-visit-parents@5.1.3/node_modules/unist-util-visit-parents/lib/color.js", "../../node_modules/.pnpm/remark-mdx-images@2.0.0/node_modules/remark-mdx-images/index.js", "../../app/routes/articles/route.tsx", "../../app/routes/speaking.tsx", "../../app/routes/courses.tsx", "../../app/components/Button.tsx", "../../app/routes/_index/route.tsx", "../../app/utils/blog.server.ts", "../../app/routes/_index/components/About.tsx", "../../app/routes/_index/components/Experience.tsx", "../../app/routes/_index/components/Section.tsx", "../../app/routes/_index/components/Hero.tsx", "../../app/routes/_index/components/LatestArticle.tsx", "../../app/utils/dateFormats.ts", "../../app/routes/_index/components/Passions.tsx", "../../app/routes/about.tsx", "../../app/routes/blog.tsx", "../../app/routes/uses.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["", "// @ts-expect-error\nimport formatter from 'format'\n\nexport const fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n", "function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remarkMdxFrontmatter = void 0;\nconst estree_util_is_identifier_name_1 = require(\"estree-util-is-identifier-name\");\nconst estree_util_value_to_estree_1 = require(\"estree-util-value-to-estree\");\nconst js_yaml_1 = require(\"js-yaml\");\nconst toml_1 = require(\"toml\");\n/**\n * A remark plugin to expose frontmatter data as named exports.\n *\n * @param options - Optional options to configure the output.\n * @returns A unified transformer.\n */\nconst remarkMdxFrontmatter = ({ name } = {}) => (ast) => {\n    const mdast = ast;\n    const imports = [];\n    if (name && !(0, estree_util_is_identifier_name_1.name)(name)) {\n        throw new Error(`If name is specified, this should be a valid identifier name, got: ${JSON.stringify(name)}`);\n    }\n    for (const node of mdast.children) {\n        let data;\n        const { value } = node;\n        if (node.type === 'yaml') {\n            data = (0, js_yaml_1.load)(value);\n            // @ts-expect-error A custom node type may be registered for TOML frontmatter data.\n        }\n        else if (node.type === 'toml') {\n            data = (0, toml_1.parse)(value);\n        }\n        if (data == null) {\n            continue;\n        }\n        if (!name && typeof data !== 'object') {\n            throw new Error(`Expected frontmatter data to be an object, got:\\n${value}`);\n        }\n        imports.push({\n            type: 'mdxjsEsm',\n            value: '',\n            data: {\n                estree: {\n                    type: 'Program',\n                    sourceType: 'module',\n                    body: [\n                        {\n                            type: 'ExportNamedDeclaration',\n                            source: null,\n                            specifiers: [],\n                            declaration: {\n                                type: 'VariableDeclaration',\n                                kind: 'const',\n                                declarations: Object.entries(name ? { [name]: data } : data).map(([identifier, val]) => {\n                                    if (!(0, estree_util_is_identifier_name_1.name)(identifier)) {\n                                        throw new Error(`Frontmatter keys should be valid identifiers, got: ${JSON.stringify(identifier)}`);\n                                    }\n                                    return {\n                                        type: 'VariableDeclarator',\n                                        id: { type: 'Identifier', name: identifier },\n                                        init: (0, estree_util_value_to_estree_1.valueToEstree)(val),\n                                    };\n                                }),\n                            },\n                        },\n                    ],\n                },\n            },\n        });\n    }\n    mdast.children.unshift(...imports);\n};\nexports.remarkMdxFrontmatter = remarkMdxFrontmatter;\n", "\"use strict\";\n\n// __dirname isn't supported in ESM files\n// we could use import.meta, but that may not be supported by whatever bundler\n// folks may be using, so we'll just go with this...\nmodule.exports = !__dirname.includes('mdx-bundler');", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "/**\n * @typedef {'toml' | 'yaml'} Preset\n *   Known name of a frontmatter style.\n *\n * @typedef Info\n *   Sequence.\n *\n *   Depending on how this structure is used, it reflects a marker or a fence.\n * @property {string} open\n *   Opening.\n * @property {string} close\n *   Closing.\n *\n * @typedef MatterProps\n *   Fields describing a kind of matter.\n * @property {string} type\n *   Node type to tokenize as.\n * @property {boolean | null | undefined} [anywhere=false]\n *   Whether matter can be found anywhere in the document, normally, only matter\n *   at the start of the document is recognized.\n *\n *   > \uD83D\uDC49 **Note**: using this is a terrible idea.\n *   > It\u2019s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n * @typedef MarkerProps\n *   Marker configuration.\n * @property {Info | string} marker\n *   Character repeated 3 times, used as complete fences.\n *\n *   For example the character `'-'` will result in `'---'` being used as the\n *   fence\n *   Pass `open` and `close` to specify different characters for opening and\n *   closing fences.\n * @property {never} [fence]\n *   If `marker` is set, `fence` must not be set.\n *\n * @typedef FenceProps\n *   Fence configuration.\n * @property {Info | string} fence\n *   Complete fences.\n *\n *   This can be used when fences contain different characters or lengths\n *   other than 3.\n *   Pass `open` and `close` to interface to specify different characters for opening and\n *   closing fences.\n * @property {never} [marker]\n *   If `fence` is set, `marker` must not be set.\n *\n * @typedef {(MatterProps & FenceProps) | (MatterProps & MarkerProps)} Matter\n *   Fields describing a kind of matter.\n *\n *   > \uD83D\uDC49 **Note**: using `anywhere` is a terrible idea.\n *   > It\u2019s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n *   > \uD83D\uDC49 **Note**: `marker` and `fence` are mutually exclusive.\n *   > If `marker` is set, `fence` must not be set, and vice versa.\n *\n * @typedef {Matter | Preset | Array<Matter | Preset>} Options\n *   Configuration.\n */\n\nimport {fault} from 'fault'\nconst own = {}.hasOwnProperty\nconst markers = {\n  yaml: '-',\n  toml: '+'\n}\n\n/**\n * Simplify one or more options.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration.\n * @returns {Array<Matter>}\n *   List of matters.\n */\nexport function matters(options) {\n  /** @type {Array<Matter>} */\n  const result = []\n  let index = -1\n\n  /** @type {Array<Matter | Preset>} */\n  const presetsOrMatters = Array.isArray(options)\n    ? options\n    : options\n    ? [options]\n    : ['yaml']\n  while (++index < presetsOrMatters.length) {\n    result[index] = matter(presetsOrMatters[index])\n  }\n  return result\n}\n\n/**\n * Simplify an option.\n *\n * @param {Matter | Preset} option\n *   Configuration.\n * @returns {Matter}\n *   Matters.\n */\nfunction matter(option) {\n  let result = option\n  if (typeof result === 'string') {\n    if (!own.call(markers, result)) {\n      throw fault('Missing matter definition for `%s`', result)\n    }\n    result = {\n      type: result,\n      marker: markers[result]\n    }\n  } else if (typeof result !== 'object') {\n    throw fault('Expected matter to be an object, not `%j`', result)\n  }\n  if (!own.call(result, 'type')) {\n    throw fault('Missing `type` in matter `%j`', result)\n  }\n  if (!own.call(result, 'fence') && !own.call(result, 'marker')) {\n    throw fault('Missing `marker` or `fence` in matter `%j`', result)\n  }\n  return result\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef {import('../matters.js').Info} Info\n * @typedef {import('../matters.js').Matter} Matter\n * @typedef {import('../matters.js').Options} Options\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {matters} from '../matters.js'\n\n/**\n * Create an extension for `micromark` to enable frontmatter syntax.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable frontmatter syntax.\n */\nexport function frontmatter(options) {\n  const listOfMatters = matters(options)\n  /** @type {ConstructRecord} */\n  const flow = {}\n  let index = -1\n  while (++index < listOfMatters.length) {\n    const matter = listOfMatters[index]\n    const code = fence(matter, 'open').charCodeAt(0)\n    const construct = createConstruct(matter)\n    const existing = flow[code]\n    if (Array.isArray(existing)) {\n      existing.push(construct)\n    } else {\n      // Never a single object, always an array.\n      flow[code] = [construct]\n    }\n  }\n  return {\n    flow\n  }\n}\n\n/**\n * @param {Matter} matter\n * @returns {Construct}\n */\nfunction createConstruct(matter) {\n  const anywhere = matter.anywhere\n  const frontmatterType = /** @type {TokenType} */ matter.type\n  const fenceType = /** @type {TokenType} */ frontmatterType + 'Fence'\n  const sequenceType = /** @type {TokenType} */ fenceType + 'Sequence'\n  const valueType = /** @type {TokenType} */ frontmatterType + 'Value'\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n\n  /**\n   * Fence to look for.\n   *\n   * @type {string}\n   */\n  let buffer\n  let bufferIndex = 0\n  return {\n    tokenize: tokenizeFrontmatter,\n    concrete: true\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFrontmatter(effects, ok, nok) {\n    const self = this\n    return start\n\n    /**\n     * Start of frontmatter.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      const position = self.now()\n      if (\n        // Indent not allowed.\n        position.column === 1 &&\n        // Normally, only allowed in first line.\n        (position.line === 1 || anywhere)\n      ) {\n        buffer = fence(matter, 'open')\n        bufferIndex = 0\n        if (code === buffer.charCodeAt(bufferIndex)) {\n          effects.enter(frontmatterType)\n          effects.enter(fenceType)\n          effects.enter(sequenceType)\n          return openSequence(code)\n        }\n      }\n      return nok(code)\n    }\n\n    /**\n     * In open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n        if (markdownSpace(code)) {\n          effects.enter('whitespace')\n          return openSequenceWhitespace(code)\n        }\n        return openAfter(code)\n      }\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return openSequence\n      }\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after open sequence.\n     *\n     * ```markdown\n     * > | ---\u2420\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return openSequenceWhitespace\n      }\n      effects.exit('whitespace')\n      return openAfter(code)\n    }\n\n    /**\n     * After open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openAfter(code) {\n      if (markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        // Get ready for closing fence.\n        buffer = fence(matter, 'close')\n        bufferIndex = 0\n        return effects.attempt(closingFenceConstruct, after, contentStart)\n      }\n\n      // EOF is not okay.\n      return nok(code)\n    }\n\n    /**\n     * Start of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentStart(code) {\n      if (code === null || markdownLineEnding(code)) {\n        return contentEnd(code)\n      }\n      effects.enter(valueType)\n      return contentInside(code)\n    }\n\n    /**\n     * In content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentInside(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(valueType)\n        return contentEnd(code)\n      }\n      effects.consume(code)\n      return contentInside\n    }\n\n    /**\n     * End of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *                   ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentEnd(code) {\n      // Require a closing fence.\n      if (code === null) {\n        return nok(code)\n      }\n\n      // Can only be an eol.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(closingFenceConstruct, after, contentStart)\n    }\n\n    /**\n     * After frontmatter.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      // `code` must be eol/eof.\n      effects.exit(frontmatterType)\n      return ok(code)\n    }\n  }\n\n  /** @type {Tokenizer} */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let bufferIndex = 0\n    return closeStart\n\n    /**\n     * Start of close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeStart(code) {\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.enter(fenceType)\n        effects.enter(sequenceType)\n        return closeSequence(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n        if (markdownSpace(code)) {\n          effects.enter('whitespace')\n          return closeSequenceWhitespace(code)\n        }\n        return closeAfter(code)\n      }\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return closeSequence\n      }\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after close sequence.\n     *\n     * ```markdown\n     * > | ---\n     *   | title: \"Venus\"\n     *   | ---\u2420\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return closeSequenceWhitespace\n      }\n      effects.exit('whitespace')\n      return closeAfter(code)\n    }\n\n    /**\n     * After close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @param {Matter} matter\n * @param {'open' | 'close'} prop\n * @returns {string}\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They\u2019re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * @param {Info | string} schema\n * @param {'open' | 'close'} prop\n * @returns {string}\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n", "/**\n * @typedef {import('./matters.js').Info} Info\n * @typedef {import('./matters.js').Matter} Matter\n * @typedef {import('./matters.js').Options} Options\n * @typedef {import('./matters.js').Preset} Preset\n */\n\nexport {frontmatter} from './lib/syntax.js'\nexport {frontmatterHtml} from './lib/html.js'\n\n// Note: we don\u2019t have an `index.d.ts` in this extension because all token\n// types are dynamic in JS\n", "/**\n * @typedef {import('mdast').Literal} Literal\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n * @typedef {import('micromark-extension-frontmatter/matters.js').Matter} Matter\n * @typedef {import('micromark-extension-frontmatter/matters.js').Info} Info\n */\n\nimport {matters} from 'micromark-extension-frontmatter/matters.js'\n\n/**\n * Create an extension for `mdast-util-from-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function frontmatterFromMarkdown(options) {\n  // @ts-expect-error: `micromark-extension-frontmatter` should fix types to\n  // accept `null` as options.\n  const settings = matters(options)\n  /** @type {FromMarkdownExtension['enter']} */\n  const enter = {}\n  /** @type {FromMarkdownExtension['exit']} */\n  const exit = {}\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n    enter[matter.type] = opener(matter)\n    exit[matter.type] = close\n    exit[matter.type + 'Value'] = value\n  }\n\n  return {enter, exit}\n}\n\n/**\n * @param {Matter} matter\n * @returns {FromMarkdownHandle} enter\n */\nfunction opener(matter) {\n  return open\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function open(token) {\n    // @ts-expect-error: custom.\n    this.enter({type: matter.type, value: ''}, token)\n    this.buffer()\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction close(token) {\n  const data = this.resume()\n  const node = /** @type {Literal} */ (this.exit(token))\n  // Remove the initial and final eol.\n  node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction value(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function frontmatterToMarkdown(options) {\n  // To do: use an extension object with `satisfies` later.\n  /** @type {ToMarkdownExtension['unsafe']} */\n  const unsafe = []\n  /** @type {ToMarkdownExtension['handlers']} */\n  const handlers = {}\n  // @ts-expect-error: `micromark-extension-frontmatter` should fix types to\n  // accept `null` as options.\n  const settings = matters(options)\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n\n    // @ts-expect-error: this can add custom frontmatter nodes.\n    // Typing those is the responsibility of the end user.\n    handlers[matter.type] = handler(matter)\n\n    // To do: idea: perhaps make this smarter, with an `after` of the second char?\n    unsafe.push({atBreak: true, character: fence(matter, 'open').charAt(0)})\n  }\n\n  return {unsafe, handlers}\n}\n\n/**\n * Create a handle that can serialize a frontmatter node as markdown.\n *\n * @param {Matter} matter\n *   Structure.\n * @returns {(node: Literal) => string} enter\n *   Handler.\n */\nfunction handler(matter) {\n  const open = fence(matter, 'open')\n  const close = fence(matter, 'close')\n\n  return handle\n\n  /**\n   * Serialize a frontmatter node as markdown.\n   *\n   * @param {Literal} node\n   *   Node to serialize.\n   * @returns {string}\n   *   Serialized node.\n   */\n  function handle(node) {\n    return open + (node.value ? '\\n' + node.value : '') + '\\n' + close\n  }\n}\n\n/**\n * Get an `open` or `close` fence.\n *\n * @param {Matter} matter\n *   Structure.\n * @param {'open' | 'close'} prop\n *   Field to get.\n * @returns {string}\n *   Fence.\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They\u2019re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * Take `open` or `close` fields when schema is an info object, or use the\n * given value when it is a string.\n *\n * @param {Info | string} schema\n *   Info object or value.\n * @param {'open' | 'close'} prop\n *   Field to get.\n * @returns {string}\n *   Thing to use for the opening or closing.\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Matter} Matter\n * @typedef {import('./lib/index.js').Info} Info\n */\n\nexport {frontmatterFromMarkdown, frontmatterToMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\nimport {frontmatter} from 'micromark-extension-frontmatter'\nimport {\n  frontmatterFromMarkdown,\n  frontmatterToMarkdown\n} from 'mdast-util-frontmatter'\n\n/**\n * Plugin to add support for frontmatter.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkFrontmatter(options = 'yaml') {\n  const data = this.data()\n\n  add('micromarkExtensions', frontmatter(options))\n  add('fromMarkdownExtensions', frontmatterFromMarkdown(options))\n  add('toMarkdownExtensions', frontmatterToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bundleMDX = bundleMDX;\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _string_decoder = require(\"string_decoder\");\nvar _remarkMdxFrontmatter = require(\"remark-mdx-frontmatter\");\nvar _grayMatter = _interopRequireDefault(require(\"gray-matter\"));\nvar esbuild = _interopRequireWildcard(require(\"esbuild\"));\nvar _nodeResolve = require(\"@esbuild-plugins/node-resolve\");\nvar _esbuildPluginGlobalExternals = require(\"@fal-works/esbuild-plugin-global-externals\");\nvar _uuid = require(\"uuid\");\nvar _dirnameMessedUp = _interopRequireDefault(require(\"./dirname-messed-up.cjs\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst {\n  readFile,\n  unlink\n} = _fs.default.promises;\n\n/**\n * @template {{[key: string]: any}} Frontmatter\n * @param {import('./types').BundleMDX<Frontmatter>} options\n * @returns\n */\nasync function bundleMDX({\n  file,\n  source,\n  files = {},\n  mdxOptions = options => options,\n  esbuildOptions = options => options,\n  globals = {},\n  cwd = _path.default.join(process.cwd(), `__mdx_bundler_fake_dir__`),\n  grayMatterOptions = options => options,\n  bundleDirectory,\n  bundlePath\n}) {\n  /* c8 ignore start */\n  if (_dirnameMessedUp.default && !process.env.ESBUILD_BINARY_PATH) {\n    console.warn(`mdx-bundler warning: esbuild maybe unable to find its binary, if your build fails you'll need to set ESBUILD_BINARY_PATH. Learn more: https://github.com/kentcdodds/mdx-bundler/blob/main/README.md#nextjs-esbuild-enoent`);\n  }\n  /* c8 ignore stop */\n\n  // @mdx-js/esbuild is a native ESM, and we're running in a CJS context. This is the\n  // only way to import ESM within CJS\n  const [{\n    default: mdxESBuild\n  }, {\n    default: remarkFrontmatter\n  }] = await Promise.all([import('@mdx-js/esbuild'), import('remark-frontmatter')]);\n  let /** @type string */code, /** @type string */entryPath, /** @type Omit<grayMatter.GrayMatterFile<string>, \"data\"> & {data: Frontmatter} */matter;\n\n  /** @type Record<string, string> */\n  const absoluteFiles = {};\n  const isWriting = typeof bundleDirectory === 'string';\n  if (typeof bundleDirectory !== typeof bundlePath) {\n    throw new Error('When using `bundleDirectory` or `bundlePath` the other must be set.');\n  }\n\n  /** @type {(vfile: unknown) => vfile is import('vfile').VFile} */\n  function isVFile(vfile) {\n    return typeof vfile === 'object' && vfile !== null && 'value' in vfile;\n  }\n  if (typeof source === 'string') {\n    // The user has supplied MDX source.\n    /** @type any */ // Slight type hack to get the graymatter front matter typed correctly.\n    const gMatter = (0, _grayMatter.default)(source, grayMatterOptions({}));\n    matter = gMatter;\n    entryPath = _path.default.join(cwd, `./_mdx_bundler_entry_point-${(0, _uuid.v4)()}.mdx`);\n    absoluteFiles[entryPath] = source;\n  } else if (isVFile(source)) {\n    const value = String(source.value);\n    /** @type any */ // Slight type hack to get the graymatter front matter typed correctly.\n    const gMatter = (0, _grayMatter.default)(value, grayMatterOptions({}));\n    matter = gMatter;\n    entryPath = source.path ? _path.default.isAbsolute(source.path) ? source.path : _path.default.join(source.cwd, source.path) : _path.default.join(cwd, `./_mdx_bundler_entry_point-${(0, _uuid.v4)()}.mdx`);\n    absoluteFiles[entryPath] = value;\n  } else if (typeof file === 'string') {\n    // The user has supplied a file.\n    /** @type any */ // Slight type hack to get the graymatter front matter typed correctly.\n    const gMatter = _grayMatter.default.read(file, grayMatterOptions({}));\n    matter = gMatter;\n    entryPath = file;\n    /* c8 ignore start */\n  } else {\n    // The user supplied neither file or source.\n    // The typings should prevent reaching this point.\n    // It is ignored from coverage as the tests wouldn't run in a way that can get here.\n    throw new Error('`source` or `file` must be defined');\n  }\n  /* c8 ignore end*/\n\n  for (const [filepath, fileCode] of Object.entries(files)) {\n    absoluteFiles[_path.default.join(cwd, filepath)] = fileCode;\n  }\n\n  /** @type import('esbuild').Plugin */\n  const inMemoryPlugin = {\n    name: 'inMemory',\n    setup(build) {\n      build.onResolve({\n        filter: /.*/\n      }, ({\n        path: filePath,\n        importer\n      }) => {\n        if (filePath === entryPath) {\n          return {\n            path: filePath,\n            pluginData: {\n              inMemory: true,\n              contents: absoluteFiles[filePath]\n            }\n          };\n        }\n        const modulePath = _path.default.resolve(_path.default.dirname(importer), filePath);\n        if (modulePath in absoluteFiles) {\n          return {\n            path: modulePath,\n            pluginData: {\n              inMemory: true,\n              contents: absoluteFiles[modulePath]\n            }\n          };\n        }\n        for (const ext of ['.js', '.ts', '.jsx', '.tsx', '.json', '.mdx']) {\n          const fullModulePath = `${modulePath}${ext}`;\n          if (fullModulePath in absoluteFiles) {\n            return {\n              path: fullModulePath,\n              pluginData: {\n                inMemory: true,\n                contents: absoluteFiles[fullModulePath]\n              }\n            };\n          }\n        }\n\n        // Return an empty object so that esbuild will handle resolving the file itself.\n        return {};\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async ({\n        path: filePath,\n        pluginData\n      }) => {\n        if (pluginData === undefined || !pluginData.inMemory) {\n          // Return an empty object so that esbuild will load & parse the file contents itself.\n          return null;\n        }\n\n        // the || .js allows people to exclude a file extension\n        const fileType = (_path.default.extname(filePath) || '.jsx').slice(1);\n        const contents = absoluteFiles[filePath];\n        if (fileType === 'mdx') return null;\n\n        /** @type import('esbuild').Loader */\n        let loader;\n        if (build.initialOptions.loader && build.initialOptions.loader[`.${fileType}`]) {\n          loader = build.initialOptions.loader[`.${fileType}`];\n        } else {\n          loader = /** @type import('esbuild').Loader */fileType;\n        }\n        return {\n          contents,\n          loader\n        };\n      });\n    }\n  };\n  const buildOptions = esbuildOptions({\n    entryPoints: [entryPath],\n    write: isWriting,\n    outdir: isWriting ? bundleDirectory : undefined,\n    publicPath: isWriting ? bundlePath : undefined,\n    absWorkingDir: cwd,\n    define: {\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV)\n    },\n    plugins: [(0, _esbuildPluginGlobalExternals.globalExternals)({\n      ...globals,\n      react: {\n        varName: 'React',\n        type: 'cjs'\n      },\n      'react-dom': {\n        varName: 'ReactDOM',\n        type: 'cjs'\n      },\n      'react/jsx-runtime': {\n        varName: '_jsx_runtime',\n        type: 'cjs'\n      }\n    }),\n    // eslint-disable-next-line @babel/new-cap\n    (0, _nodeResolve.NodeResolvePlugin)({\n      extensions: ['.js', '.ts', '.jsx', '.tsx'],\n      resolveOptions: {\n        basedir: cwd\n      }\n    }), inMemoryPlugin, mdxESBuild(mdxOptions({\n      remarkPlugins: [remarkFrontmatter, [_remarkMdxFrontmatter.remarkMdxFrontmatter, {\n        name: 'frontmatter'\n      }]]\n    }, matter.data))],\n    bundle: true,\n    format: 'iife',\n    globalName: 'Component',\n    minify: true\n  }, matter.data);\n  const bundled = await esbuild.build(buildOptions);\n  if (bundled.outputFiles) {\n    const decoder = new _string_decoder.StringDecoder('utf8');\n    code = decoder.write(Buffer.from(bundled.outputFiles[0].contents));\n  } else if (buildOptions.outdir && buildOptions.write) {\n    // We know that this has to be an array of entry point strings, with a single entry\n    const entryFile = /** @type {{entryPoints: string[]}} */buildOptions.entryPoints[0];\n    const fileName = _path.default.basename(entryFile).replace(/\\.[^/.]+$/, '.js');\n    code = (await readFile(_path.default.join(buildOptions.outdir, fileName))).toString();\n    await unlink(_path.default.join(buildOptions.outdir, fileName));\n  } else {\n    throw new Error(\"You must either specify `write: false` or `write: true` and `outdir: '/path'` in your esbuild options\");\n  }\n  return {\n    code: `${code};return Component;`,\n    frontmatter: matter.data,\n    errors: bundled.errors,\n    matter\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMDXComponent = getMDXComponent;\nexports.getMDXExport = getMDXExport;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _jsx_runtime = _interopRequireWildcard(require(\"react/jsx-runtime\"));\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n/**\n * @typedef {import('./types').MDXContentProps} MDXContentProps\n */\n\n/**\n *\n * @param {string} code - The string of code you got from bundleMDX\n * @param {Record<string, unknown>} [globals] - Any variables your MDX needs to have accessible when it runs\n * @return {React.FunctionComponent<MDXContentProps>}\n */\nfunction getMDXComponent(code, globals) {\n  const mdxExport = getMDXExport(code, globals);\n  return mdxExport.default;\n}\n\n/**\n * @template ExportedObject\n * @template Frontmatter\n * @type {import('./types').MDXExportFunction<ExportedObject, Frontmatter>}\n * @param {string} code - The string of code you got from bundleMDX\n * @param {Record<string, unknown>} [globals] - Any variables your MDX needs to have accessible when it runs\n *\n */\nfunction getMDXExport(code, globals) {\n  const scope = {\n    React,\n    ReactDOM,\n    _jsx_runtime,\n    ...globals\n  };\n  // eslint-disable-next-line\n  const fn = new Function(...Object.keys(scope), code);\n  return fn(...Object.values(scope));\n}", "module.exports = require('../dist/client')\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"/Users/thitemple/src/templecoding-site/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/blog.$slug.tsx\";\nimport * as route2 from \"./routes/articles/route.tsx\";\nimport * as route3 from \"./routes/speaking.tsx\";\nimport * as route4 from \"./routes/courses.tsx\";\nimport * as route5 from \"./routes/_index/route.tsx\";\nimport * as route6 from \"./routes/about.tsx\";\nimport * as route7 from \"./routes/blog.tsx\";\nimport * as route8 from \"./routes/uses.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const dev = {\"port\":3001}\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/blog.$slug\": {\n      id: \"routes/blog.$slug\",\n      parentId: \"routes/blog\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/articles\": {\n      id: \"routes/articles\",\n      parentId: \"root\",\n      path: \"articles\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/speaking\": {\n      id: \"routes/speaking\",\n      parentId: \"root\",\n      path: \"speaking\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/courses\": {\n      id: \"routes/courses\",\n      parentId: \"root\",\n      path: \"courses\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/blog\": {\n      id: \"routes/blog\",\n      parentId: \"root\",\n      path: \"blog\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/uses\": {\n      id: \"routes/uses\",\n      parentId: \"root\",\n      path: \"uses\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    }\n  };", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport styles from \"~/assets/css/tailwind.css\";\nimport { Footer, Nav } from \"./components\";\n\nexport const links: LinksFunction = () => [{ rel: \"stylesheet\", href: styles }];\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n\t\t\t<head>\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n\t\t\t\t<Meta />\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body className=\"h-full\">\n\t\t\t\t<div className=\"bg-slate-100 dark:bg-violet-900\">\n\t\t\t\t\t<main className=\"mx-auto max-w-5xl bg-white py-6 dark:bg-violet-700\">\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t<Outlet />\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</main>\n\t\t\t\t\t<ScrollRestoration />\n\t\t\t\t\t<Scripts />\n\t\t\t\t\t<LiveReload />\n\t\t\t\t</div>\n\t\t\t</body>\n\t\t</html>);\n\n}", "export { Footer } from \"./Footer\";\nexport { Title } from './Title';\nexport { Nav } from \"./Nav\";\nexport { Page } from \"./Page\";", "import { NavLink } from \"@remix-run/react\";\nimport classNames from \"classnames\";\nfunction FooterLink({ to, label }: { to: string; label: string }) {\n\treturn (\n\t\t<li>\n\t\t\t<NavLink\n\t\t\t\tto={to}\n\t\t\t\tclassName={({ isActive }) => {\n\t\t\t\t\treturn classNames(\n\t\t\t\t\t\t\"text-slate-700 hover:text-violet-500 hover:underline dark:text-slate-200 dark:hover:text-pink-300\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"cursor-default text-slate-400 hover:text-slate-400 hover:no-underline\":\n\t\t\t\t\t\t\t\tisActive,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</NavLink>\n\t\t</li>\n\t);\n}\n\nexport function Footer() {\n\treturn (\n\t\t<div className=\"mt-6 flex flex-col items-center gap-6 bg-slate-200 py-6 dark:bg-violet-300\">\n\t\t\t<ul className=\"flex flex-wrap justify-center gap-6 px-6 \">\n\t\t\t\t<FooterLink to=\"/\" label=\"Home\" />\n\t\t\t\t<FooterLink to=\"/articles\" label=\"Articles\" />\n\t\t\t\t<FooterLink to=\"/courses\" label=\"Courses\" />\n\t\t\t\t{/* <FooterLink to=\"/speaking\" label=\"Speaking\" />\n\t\t\t\t<FooterLink to=\"/uses\" label=\"Uses\" /> */}\n\t\t\t\t<FooterLink to=\"/about\" label=\"About\" />\n\t\t\t</ul>\n\t\t\t<p className=\"text-slate-500 dark:text-slate-400\">\n\t\t\t\tThe Coding Temple \u00A9 2023\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n", "export function Title({ children }: { children: React.ReactNode }) {\n\treturn (\n\t\t<h1 className=\"w-full font-heading text-2xl text-slate-700 dark:text-slate-200\">\n\t\t\t{children}\n\t\t</h1>\n\t);\n}\n", "export { Nav } from \"./Nav\";\n", "import { Link } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport { Logo, LogoDarkMode, Temple, TempleDarkMode } from \"~/assets/images\";\nimport { DesktopNavLink } from \"./DesktopNavLink\";\nimport { MobileNav } from \"./MobileNav\";\n\nexport function Nav() {\n\tconst [mobileOpened, setMobileOpened] = useState(false);\n\treturn (\n\t\t<header className=\"mx-auto max-w-7xl\">\n\t\t\t<div className=\"relative flex gap-4 px-4 pb-4 pt-2 md:px-6 lg:px-8\">\n\t\t\t\t<div className=\"flex flex-1\">\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<img src={Temple} className=\"w-10 dark:hidden lg:hidden\" />\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={TempleDarkMode}\n\t\t\t\t\t\t\tclassName=\"hidden w-10 dark:block lg:hidden\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<img src={Logo} className=\"hidden w-40 lg:block dark:lg:hidden\" />\n\t\t\t\t\t\t<img src={LogoDarkMode} className=\"hidden w-40 dark:lg:block\" />\n\t\t\t\t\t</Link>\n\t\t\t\t\t<div className=\"hidden w-full justify-end lg:flex\">\n\t\t\t\t\t\t<nav className=\"flex items-center gap-4 rounded-xl border border-slate-300 bg-white px-4 py-2 text-slate-600 shadow-md ring-1 ring-slate-300 dark:border-slate-400 dark:bg-violet-500 dark:text-slate-200 dark:ring-slate-400\">\n\t\t\t\t\t\t\t<DesktopNavLink to=\"/articles\">Articles</DesktopNavLink>\n\t\t\t\t\t\t\t<DesktopNavLink to=\"/courses\">Courses</DesktopNavLink>\n\t\t\t\t\t\t\t{/* <DesktopNavLink to=\"/speaking\">Speaking</DesktopNavLink>\n\t\t\t\t\t\t\t<DesktopNavLink to=\"/uses\">Uses</DesktopNavLink> */}\n\t\t\t\t\t\t\t<DesktopNavLink to=\"/about\">About</DesktopNavLink>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex flex-1 justify-end lg:hidden\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttitle=\"Toggle mobile menu\"\n\t\t\t\t\t\tclassName=\"group flex items-center rounded-full bg-white px-4 py-2 text-sm font-medium text-slate-800 shadow-md shadow-slate-800/5 ring-1 ring-slate-900/5 backdrop-blur dark:bg-violet-500 dark:text-slate-200 dark:shadow-slate-700 dark:ring-slate-300\"\n\t\t\t\t\t\tonClick={() => setMobileOpened(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\tMenu\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tclassName=\"ml-3 h-auto w-4 stroke-slate-500 backdrop:backdrop-blur-sm group-hover:stroke-slate-700 dark:group-hover:stroke-slate-300\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t\t<MobileNav\n\t\t\t\t\t\topen={mobileOpened}\n\t\t\t\t\t\tonClose={() => setMobileOpened(false)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n", "export { default as LogoDarkMode } from \"./brand/logo-dark-mode.svg\";\nexport { default as Logo } from \"./brand/logo-transparent.svg\";\nexport { default as TempleDarkMode } from \"./brand/symbol-dark-mode.svg\";\nexport { default as Temple } from \"./brand/symbol-transparent.svg\";\n", "import { NavLink } from \"@remix-run/react\";\nimport classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\nexport function DesktopNavLink({\n\tto,\n\tchildren,\n}: {\n\tto: string;\n\tchildren: ReactNode;\n}) {\n\treturn (\n\t\t<div className=\"h-full\">\n\t\t\t<NavLink\n\t\t\t\tto={to}\n\t\t\t\tclassName={({ isActive }) => {\n\t\t\t\t\treturn classNames(\n\t\t\t\t\t\t\"transition-all duration-300 ease-in-out hover:text-violet-500 hover:underline dark:hover:text-pink-300\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"cursor-default text-slate-500 no-underline hover:text-slate-500 hover:no-underline dark:text-slate-400 dark:hover:text-slate-400\":\n\t\t\t\t\t\t\t\tisActive,\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</NavLink>\n\t\t</div>\n\t);\n}\n", "import { Link } from \"@remix-run/react\";\nimport { ReactNode, useEffect, useRef } from \"react\";\n\nfunction MobileNavItem({\n\tto,\n\tchildren,\n\tautoFocus,\n}: {\n\tto: string;\n\tautoFocus?: boolean;\n\tchildren: ReactNode;\n}) {\n\treturn (\n\t\t<li className=\"border-b border-slate-200 py-4 last:border-0\">\n\t\t\t<Link to={to} autoFocus={autoFocus}>\n\t\t\t\t{children}\n\t\t\t</Link>\n\t\t</li>\n\t);\n}\n\nexport function MobileNav({\n\topen = false,\n\tonClose,\n}: {\n\topen?: boolean;\n\tonClose: () => void;\n}) {\n\tconst ref = useRef<HTMLDialogElement>(null);\n\tuseEffect(() => {\n\t\tif (ref.current && open && !ref.current.open) {\n\t\t\tref.current.show();\n\t\t\tref.current.focus();\n\t\t}\n\t\tif (ref.current?.open && !open) {\n\t\t\tref.current.close();\n\t\t}\n\t}, [ref.current, open]);\n\n\tuseEffect(() => {\n\t\tfunction handleCancel() {\n\t\t\tonClose();\n\t\t}\n\t\tref.current?.addEventListener(\"cancel\", handleCancel);\n\t\treturn () => {\n\t\t\tref.current?.removeEventListener(\"cancel\", handleCancel);\n\t\t};\n\t}, []);\n\n\tfunction handleClick(e: React.MouseEvent<HTMLDialogElement, MouseEvent>) {\n\t\tif (e.target === e.currentTarget) {\n\t\t\tonClose();\n\t\t}\n\t}\n\n\treturn (\n\t\t<dialog\n\t\t\tclassName=\"z-50 w-5/6 rounded-2xl bg-white px-4 py-6 backdrop:bg-gray-900/50 backdrop:backdrop-blur-sm dark:bg-violet-500\"\n\t\t\tonClick={handleClick}\n\t\t\tref={ref}\n\t\t>\n\t\t\t<header className=\"flex justify-between text-slate-500 dark:text-slate-200\">\n\t\t\t\t<h2>Navigation</h2>\n\t\t\t\t<button onClick={onClose}>\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tclassName=\"h-6 w-6\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\td=\"M6 18L18 6M6 6l12 12\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</header>\n\t\t\t<ul className=\"mt-6 flex flex-col text-lg text-slate-600 dark:text-slate-200\">\n\t\t\t\t<MobileNavItem to=\"/\">Home</MobileNavItem>\n\t\t\t\t<MobileNavItem to=\"/articles\" autoFocus>\n\t\t\t\t\tArticles\n\t\t\t\t</MobileNavItem>\n\t\t\t\t<MobileNavItem to=\"/courses\">Courses</MobileNavItem>\n\t\t\t\t{/* <MobileNavItem to=\"/speaking\">Speaking</MobileNavItem>\n\t\t\t\t<MobileNavItem to=\"/uses\">Uses</MobileNavItem> */}\n\t\t\t\t<MobileNavItem to=\"/about\">About</MobileNavItem>\n\t\t\t</ul>\n\t\t</dialog>\n\t);\n}\n", "import { ReactNode } from \"react\";\nimport { Footer } from \"./Footer\";\nimport { Nav } from \"./Nav/Nav\";\n\ninterface PageProps {\n\tchildren: ReactNode;\n}\n\nexport function Page({ children }: PageProps) {\n\treturn (\n\t\t<div className=\"bg-slate-100\">\n\t\t\t<main className=\"mx-auto max-w-5xl bg-white py-6 dark:bg-violet-700\">\n\t\t\t\t<Nav />\n\t\t\t\t{children}\n\t\t\t\t<Footer />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n", "import { LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\nimport { getMdxContent } from \"~/utils/mdx.server\";\nimport { getMDXComponent } from \"mdx-bundler/client\";\n\nexport async function loader({ params }: LoaderArgs) {\n\tif (!params.slug) {\n\t\tthrow new Error(\"Slug not found\");\n\t}\n\n\tconst { code, frontmatter } = await getMdxContent(params.slug);\n\treturn { code, frontmatter };\n}\n\nexport default function BlogPostPage() {\n\tconst { code } = useLoaderData<typeof loader>();\n\n\tconst Component = useMemo(() => getMDXComponent(code), [code]);\n\n\treturn (\n\t\t<article>\n\t\t\t<Component />\n\t\t</article>\n\t);\n}\n", "import path from \"path\";\nimport rehypeHighlight from \"rehype-highlight\";\nimport remarkMdxImages from \"remark-mdx-images\";\n\nimport { bundleMDX } from \"mdx-bundler\";\n\nexport interface PostFrontMatter {\n\ttitle: string;\n\tsummary: string;\n\tslug: string;\n\tpath: string;\n\tdate: Date;\n\ttags?: string[];\n\tcategory?: string;\n\tbanner?: string;\n\tthumbnail?: string;\n\treadTime?: number;\n}\n\nexport function getMdxContentForFile(pathToFile: string) {\n\treturn bundleMDX<PostFrontMatter>({\n\t\tfile: path.join(process.cwd(), pathToFile),\n\t\tcwd: path.join(process.cwd(), path.dirname(pathToFile)),\n\t\tmdxOptions: options => {\n\t\t\toptions.remarkPlugins = [\n\t\t\t\t...(options.remarkPlugins ?? []),\n\t\t\t\tremarkMdxImages,\n\t\t\t];\n\t\t\toptions.rehypePlugins = [rehypeHighlight];\n\t\t\treturn options;\n\t\t},\n\t\tesbuildOptions: options => {\n\t\t\toptions.loader = {\n\t\t\t\t...options.loader,\n\t\t\t\t\".png\": \"dataurl\",\n\t\t\t\t\".jpg\": \"dataurl\",\n\t\t\t\t\".gif\": \"dataurl\",\n\t\t\t};\n\n\t\t\treturn options;\n\t\t},\n\t});\n}\n\nexport async function getMdxContent(slug: string) {\n\tconst pathToContent = `/content/posts/${slug}/index.mdx`;\n\treturn getMdxContentForFile(pathToContent);\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {default} from './lib/index.js'\n", "/**\n * @typedef {import('lowlight').Root} LowlightRoot\n * @typedef {import('lowlight/lib/core.js').HighlightSyntax} HighlightSyntax\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='hljs-']\n *   Prefix to use before classes.\n * @property {boolean} [detect=false]\n *   Whether to detect the programming language on code without a language\n *   class.\n * @property {Array<string>} [subset]\n *   Scope of languages to check when auto-detecting (default: all languages).\n * @property {boolean} [ignoreMissing=false]\n *   Swallow errors for missing languages.\n *   By default, unregistered syntaxes throw an error when they are used.\n *   Pass `true` to swallow those errors and thus ignore code with unknown code\n *   languages.\n * @property {Array<string>} [plainText=[]]\n *   List of plain-text languages.\n *   Pass any languages you would like to be kept as plain-text instead of\n *   getting highlighted.\n * @property {Record<string, string|Array<string>>} [aliases={}]\n *   Register more aliases.\n *   Passed to `lowlight.registerAlias`.\n * @property {Record<string, HighlightSyntax>} [languages={}]\n *   Register more languages.\n *   Each key/value pair passed as arguments to `lowlight.registerLanguage`.\n */\n\nimport {lowlight} from 'lowlight'\nimport {toText} from 'hast-util-to-text'\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Plugin to highlight the syntax of code with lowlight (`highlight.js`).\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeHighlight(options = {}) {\n  const {aliases, languages, prefix, plainText, ignoreMissing, subset, detect} =\n    options\n  let name = 'hljs'\n\n  if (aliases) {\n    lowlight.registerAlias(aliases)\n  }\n\n  if (languages) {\n    /** @type {string} */\n    let key\n\n    for (key in languages) {\n      if (own.call(languages, key)) {\n        lowlight.registerLanguage(key, languages[key])\n      }\n    }\n  }\n\n  if (prefix) {\n    const pos = prefix.indexOf('-')\n    name = pos > -1 ? prefix.slice(0, pos) : prefix\n  }\n\n  return (tree, file) => {\n    // eslint-disable-next-line complexity\n    visit(tree, 'element', (node, _, givenParent) => {\n      const parent = /** @type {Node?} */ (givenParent)\n\n      if (\n        !parent ||\n        !('tagName' in parent) ||\n        parent.tagName !== 'pre' ||\n        node.tagName !== 'code' ||\n        !node.properties\n      ) {\n        return\n      }\n\n      const lang = language(node)\n\n      if (\n        lang === false ||\n        (!lang && !detect) ||\n        (lang && plainText && plainText.includes(lang))\n      ) {\n        return\n      }\n\n      if (!Array.isArray(node.properties.className)) {\n        node.properties.className = []\n      }\n\n      if (!node.properties.className.includes(name)) {\n        node.properties.className.unshift(name)\n      }\n\n      /** @type {LowlightRoot} */\n      let result\n\n      try {\n        result = lang\n          ? lowlight.highlight(lang, toText(parent), {prefix})\n          : lowlight.highlightAuto(toText(parent), {prefix, subset})\n      } catch (error) {\n        const exception = /** @type {Error} */ (error)\n        if (!ignoreMissing || !/Unknown language/.test(exception.message)) {\n          file.fail(exception, node, 'rehype-highlight:missing-language')\n        }\n\n        return\n      }\n\n      if (!lang && result.data.language) {\n        node.properties.className.push('language-' + result.data.language)\n      }\n\n      if (Array.isArray(result.children) && result.children.length > 0) {\n        node.children = result.children\n      }\n    })\n  }\n}\n\n/**\n * Get the programming language of `node`.\n *\n * @param {Element} node\n * @returns {false|string|undefined}\n */\nfunction language(node) {\n  const className = node.properties && node.properties.className\n  let index = -1\n\n  if (!Array.isArray(className)) {\n    return\n  }\n\n  while (++index < className.length) {\n    const value = String(className[index])\n\n    if (value === 'no-highlight' || value === 'nohighlight') {\n      return false\n    }\n\n    if (value.slice(0, 5) === 'lang-') {\n      return value.slice(5)\n    }\n\n    if (value.slice(0, 9) === 'language-') {\n      return value.slice(9)\n    }\n  }\n}\n", "/**\n * @typedef {import('./lib/core.js').Root} Root\n * @typedef {import('./lib/core.js').Options} Options\n * @typedef {import('./lib/core.js').AutoOptions} AutoOptions\n */\n\nexport {lowlight} from './lib/common.js'\n", "// @ts-expect-error: this registers types for the language files.\n/** @typedef {import('highlight.js/types/index.js')} DoNotTochItRegistersLanguageFiles */\n\nimport arduino from 'highlight.js/lib/languages/arduino'\nimport bash from 'highlight.js/lib/languages/bash'\nimport c from 'highlight.js/lib/languages/c'\nimport cpp from 'highlight.js/lib/languages/cpp'\nimport csharp from 'highlight.js/lib/languages/csharp'\nimport css from 'highlight.js/lib/languages/css'\nimport diff from 'highlight.js/lib/languages/diff'\nimport go from 'highlight.js/lib/languages/go'\nimport graphql from 'highlight.js/lib/languages/graphql'\nimport ini from 'highlight.js/lib/languages/ini'\nimport java from 'highlight.js/lib/languages/java'\nimport javascript from 'highlight.js/lib/languages/javascript'\nimport json from 'highlight.js/lib/languages/json'\nimport kotlin from 'highlight.js/lib/languages/kotlin'\nimport less from 'highlight.js/lib/languages/less'\nimport lua from 'highlight.js/lib/languages/lua'\nimport makefile from 'highlight.js/lib/languages/makefile'\nimport markdown from 'highlight.js/lib/languages/markdown'\nimport objectivec from 'highlight.js/lib/languages/objectivec'\nimport perl from 'highlight.js/lib/languages/perl'\nimport php from 'highlight.js/lib/languages/php'\nimport phpTemplate from 'highlight.js/lib/languages/php-template'\nimport plaintext from 'highlight.js/lib/languages/plaintext'\nimport python from 'highlight.js/lib/languages/python'\nimport pythonRepl from 'highlight.js/lib/languages/python-repl'\nimport r from 'highlight.js/lib/languages/r'\nimport ruby from 'highlight.js/lib/languages/ruby'\nimport rust from 'highlight.js/lib/languages/rust'\nimport scss from 'highlight.js/lib/languages/scss'\nimport shell from 'highlight.js/lib/languages/shell'\nimport sql from 'highlight.js/lib/languages/sql'\nimport swift from 'highlight.js/lib/languages/swift'\nimport typescript from 'highlight.js/lib/languages/typescript'\nimport vbnet from 'highlight.js/lib/languages/vbnet'\nimport wasm from 'highlight.js/lib/languages/wasm'\nimport xml from 'highlight.js/lib/languages/xml'\nimport yaml from 'highlight.js/lib/languages/yaml'\nimport {lowlight} from './core.js'\n\nlowlight.registerLanguage('arduino', arduino)\nlowlight.registerLanguage('bash', bash)\nlowlight.registerLanguage('c', c)\nlowlight.registerLanguage('cpp', cpp)\nlowlight.registerLanguage('csharp', csharp)\nlowlight.registerLanguage('css', css)\nlowlight.registerLanguage('diff', diff)\nlowlight.registerLanguage('go', go)\nlowlight.registerLanguage('graphql', graphql)\nlowlight.registerLanguage('ini', ini)\nlowlight.registerLanguage('java', java)\nlowlight.registerLanguage('javascript', javascript)\nlowlight.registerLanguage('json', json)\nlowlight.registerLanguage('kotlin', kotlin)\nlowlight.registerLanguage('less', less)\nlowlight.registerLanguage('lua', lua)\nlowlight.registerLanguage('makefile', makefile)\nlowlight.registerLanguage('markdown', markdown)\nlowlight.registerLanguage('objectivec', objectivec)\nlowlight.registerLanguage('perl', perl)\nlowlight.registerLanguage('php', php)\nlowlight.registerLanguage('php-template', phpTemplate)\nlowlight.registerLanguage('plaintext', plaintext)\nlowlight.registerLanguage('python', python)\nlowlight.registerLanguage('python-repl', pythonRepl)\nlowlight.registerLanguage('r', r)\nlowlight.registerLanguage('ruby', ruby)\nlowlight.registerLanguage('rust', rust)\nlowlight.registerLanguage('scss', scss)\nlowlight.registerLanguage('shell', shell)\nlowlight.registerLanguage('sql', sql)\nlowlight.registerLanguage('swift', swift)\nlowlight.registerLanguage('typescript', typescript)\nlowlight.registerLanguage('vbnet', vbnet)\nlowlight.registerLanguage('wasm', wasm)\nlowlight.registerLanguage('xml', xml)\nlowlight.registerLanguage('yaml', yaml)\n\nexport {lowlight} from './core.js'\n", "/**\n * @typedef {import('hast').Text} Text\n * @typedef {import('highlight.js').HighlightResult} HighlightResult\n * @typedef {import('highlight.js').HLJSOptions} HighlightOptions\n * @typedef {import('highlight.js').LanguageFn} HighlightSyntax\n * @typedef {import('highlight.js').Emitter} HighlightEmitter\n *\n * @typedef {{type: 'element', tagName: 'span', properties: {className: Array<string>}, children: Array<Span|Text>}} Span\n * @typedef {{type: 'root', data: {language: string|null, relevance: number}, children: Array<Span|Text>}} Root\n *\n * @typedef {Object} ExtraOptions\n * @property {Array<string>} [subset]\n *   List of allowed languages, defaults to all registered languages.\n *\n * @typedef {Object} Options\n *   Configuration.\n * @property {string} [prefix='hljs-']\n *   Class prefix.\n *\n * @typedef {Options & ExtraOptions} AutoOptions\n */\n\nimport high from 'highlight.js/lib/core'\nimport {fault} from 'fault'\n\nconst own = {}.hasOwnProperty\n\nconst defaultPrefix = 'hljs-'\n\n/**\n * Highlight `value` (code) as `language` (name).\n *\n * @param {string} language\n *   Programming language name.\n * @param {string} value\n *   Code to highlight.\n * @param {Options} [options={}]\n *   Configuration.\n * @returns {Root}\n *   A hast `Root` node.\n */\nfunction highlight(language, value, options = {}) {\n  let prefix = options.prefix\n\n  if (typeof language !== 'string') {\n    throw fault('Expected `string` for name, got `%s`', language)\n  }\n\n  if (!high.getLanguage(language)) {\n    throw fault('Unknown language: `%s` is not registered', language)\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  // @ts-expect-error: Types out of date.\n  // See: <https://github.com/highlightjs/highlight.js/issues/3621#issuecomment-1528841888>\n  high.configure({__emitter: HastEmitter, classPrefix: prefix})\n\n  const result = /** @type {HighlightResult & {_emitter: HastEmitter}} */ (\n    high.highlight(value, {language, ignoreIllegals: true})\n  )\n\n  high.configure({})\n\n  // `highlight.js` seems to use this (currently) for broken grammars, so let\u2019s\n  // keep it in there just to be sure.\n  /* c8 ignore next 3 */\n  if (result.errorRaised) {\n    throw result.errorRaised\n  }\n\n  // @ts-expect-error: `language` is always defined in `highlight`.\n  result._emitter.root.data.language = result.language\n  result._emitter.root.data.relevance = result.relevance\n\n  return result._emitter.root\n}\n\n/**\n * Highlight `value` (code) and guess its programming language.\n *\n * @param {string} value\n *   Code to highlight.\n * @param {AutoOptions} [options={}]\n *   Configuration.\n * @returns {Root}\n *   A hast `Root` node.\n */\nfunction highlightAuto(value, options = {}) {\n  const subset = options.subset || high.listLanguages()\n  let prefix = options.prefix\n  let index = -1\n  /** @type {Root} */\n  let result = {\n    type: 'root',\n    data: {language: null, relevance: 0},\n    children: []\n  }\n\n  if (prefix === null || prefix === undefined) {\n    prefix = defaultPrefix\n  }\n\n  if (typeof value !== 'string') {\n    throw fault('Expected `string` for value, got `%s`', value)\n  }\n\n  while (++index < subset.length) {\n    const name = subset[index]\n\n    if (!high.getLanguage(name)) continue\n\n    const current = highlight(name, value, options)\n\n    if (current.data.relevance > result.data.relevance) result = current\n  }\n\n  return result\n}\n\n/**\n * Register a language.\n *\n * @param {string} language\n *   Programming language name.\n * @param {HighlightSyntax} syntax\n *   `highlight.js` language syntax.\n * @returns {void}\n */\nfunction registerLanguage(language, syntax) {\n  high.registerLanguage(language, syntax)\n}\n\n/**\n * Register aliases for already registered languages.\n *\n * @param {string|Record<string, string|Array<string>>} language\n *   Programming language name or a map of `language`s to `alias`es or `list`s\n * @param {string|Array<string>} [alias]\n *   New aliases for the programming language.\n * @returns {void}\n */\nconst registerAlias =\n  /**\n   * @type {(\n   *   ((language: string, alias: string|Array<string>) => void) &\n   *   ((aliases: Record<string, string|Array<string>>) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {string|Record<string, string|Array<string>>} language\n     * @param {string|Array<string>} [alias]\n     * @returns {void}\n     */\n    function (language, alias) {\n      if (typeof language === 'string') {\n        // @ts-expect-error: should be a string in this overload.\n        high.registerAliases(alias, {languageName: language})\n      } else {\n        /** @type {string} */\n        let key\n\n        for (key in language) {\n          if (own.call(language, key)) {\n            high.registerAliases(language[key], {languageName: key})\n          }\n        }\n      }\n    }\n  )\n\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n *   Name of a registered language or alias.\n * @returns {boolean}\n *   Whether `aliasOrlanguage` is registered.\n */\nfunction registered(aliasOrLanguage) {\n  return Boolean(high.getLanguage(aliasOrLanguage))\n}\n\n/**\n * List registered languages.\n *\n * @returns {Array<string>}\n *   Names of registered language.\n */\nfunction listLanguages() {\n  return high.listLanguages()\n}\n\n/** @type {HighlightEmitter} */\nclass HastEmitter {\n  /**\n   * @param {HighlightOptions} options\n   */\n  constructor(options) {\n    /** @type {HighlightOptions} */\n    this.options = options\n    /** @type {Root} */\n    this.root = {\n      type: 'root',\n      data: {language: null, relevance: 0},\n      children: []\n    }\n    /** @type {[Root, ...Array<Span>]} */\n    this.stack = [this.root]\n  }\n\n  /**\n   * @param {string} value\n   */\n  addText(value) {\n    if (value === '') return\n\n    const current = this.stack[this.stack.length - 1]\n    const tail = current.children[current.children.length - 1]\n\n    if (tail && tail.type === 'text') {\n      tail.value += value\n    } else {\n      current.children.push({type: 'text', value})\n    }\n  }\n\n  /**\n   *\n   * @param {unknown} rawName\n   */\n  startScope(rawName) {\n    this.openNode(String(rawName))\n  }\n\n  /**\n   */\n  endScope() {\n    this.closeNode()\n  }\n\n  /**\n   * @param {HastEmitter} other\n   * @param {string} name\n   */\n  __addSublanguage(other, name) {\n    const current = this.stack[this.stack.length - 1]\n    const results = other.root.children\n\n    if (name) {\n      current.children.push({\n        type: 'element',\n        tagName: 'span',\n        properties: {className: [name]},\n        children: results\n      })\n    } else {\n      current.children.push(...results)\n    }\n  }\n\n  /**\n   * @param {string} name\n   */\n  openNode(name) {\n    // First \u201Cclass\u201D gets the prefix. Rest gets a repeated underscore suffix.\n    // See: <https://github.com/highlightjs/highlight.js/commit/51806aa>\n    // See: <https://github.com/wooorm/lowlight/issues/43>\n    const className = name\n      .split('.')\n      .map((d, i) => (i ? d + '_'.repeat(i) : this.options.classPrefix + d))\n    const current = this.stack[this.stack.length - 1]\n    /** @type {Span} */\n    const child = {\n      type: 'element',\n      tagName: 'span',\n      properties: {className},\n      children: []\n    }\n\n    current.children.push(child)\n    this.stack.push(child)\n  }\n\n  /**\n   */\n  closeNode() {\n    this.stack.pop()\n  }\n\n  /**\n   */\n  finalize() {}\n\n  /**\n   */\n  toHTML() {\n    return ''\n  }\n}\n\nexport const lowlight = {\n  highlight,\n  highlightAuto,\n  registerLanguage,\n  registered,\n  listLanguages,\n  registerAlias\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Whitespace} Whitespace\n */\n\nexport {toText} from './lib/index.js'\n", "/**\n * @typedef {import('hast-util-is-element').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any node.\n * @typedef {Extract<Node, import('unist').Parent>} Parent\n *   Any parent.\n * @typedef {'normal' | 'pre' | 'nowrap' | 'pre-wrap'} Whitespace\n *   Valid and useful whitespace values (from CSS).\n * @typedef {0 | 1 | 2} BreakNumber\n *   Specific break:\n *\n *   *   `0` \u2014 space\n *   *   `1` \u2014 line ending\n *   *   `2` \u2014 blank line\n * @typedef {'\\n'} BreakForce\n *   Forced break.\n * @typedef {boolean} BreakValue\n *   Whether there was a break.\n * @typedef {BreakValue | BreakNumber | undefined} BreakBefore\n *   Any value for a break before.\n * @typedef {BreakValue | BreakNumber | BreakForce | undefined} BreakAfter\n *   Any value for a break after.\n *\n * @typedef CollectionInfo\n *   Info on current collection.\n * @property {Whitespace} whitespace\n *   Current whitespace setting.\n * @property {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @property {BreakAfter} breakAfter\n *   Whether there was a break after.\n *\n * @typedef Options\n *   Configuration.\n * @property {Whitespace | null | undefined} [whitespace='normal']\n *   Initial CSS whitespace setting to use.\n */\n\nimport { convertElement } from 'hast-util-is-element';\nimport { findAfter } from 'unist-util-find-after';\n\nconst searchLineFeeds = /\\n/g;\nconst searchTabOrSpaces = /[\\t ]+/g;\n\nconst br = convertElement('br');\nconst p = convertElement('p');\nconst cell = convertElement(['th', 'td']);\nconst row = convertElement('tr');\n\n// Note that we don\u2019t need to include void elements here as they don\u2019t have text.\n// See: <https://github.com/wooorm/html-void-elements>\nconst notRendered = convertElement([\n// List from: <https://html.spec.whatwg.org/#hidden-elements>\n'datalist',\n'head',\n'noembed',\n'noframes',\n'noscript', // Act as if we support scripting.\n'rp',\n'script',\n'style',\n'template',\n'title',\n// Hidden attribute.\nhidden,\n// From: <https://html.spec.whatwg.org/#flow-content-3>\nclosedDialog]\n);\n\n// See: <https://html.spec.whatwg.org/#the-css-user-agent-style-sheet-and-presentational-hints>\nconst blockOrCaption = convertElement([\n'address', // Flow content\n'article', // Sections and headings\n'aside', // Sections and headings\n'blockquote', // Flow content\n'body', // Page\n'caption', // `table-caption`\n'center', // Flow content (legacy)\n'dd', // Lists\n'dialog', // Flow content\n'dir', // Lists (legacy)\n'dl', // Lists\n'dt', // Lists\n'div', // Flow content\n'figure', // Flow content\n'figcaption', // Flow content\n'footer', // Flow content\n'form,', // Flow content\n'h1', // Sections and headings\n'h2', // Sections and headings\n'h3', // Sections and headings\n'h4', // Sections and headings\n'h5', // Sections and headings\n'h6', // Sections and headings\n'header', // Flow content\n'hgroup', // Sections and headings\n'hr', // Flow content\n'html', // Page\n'legend', // Flow content\n'listing', // Flow content (legacy)\n'main', // Flow content\n'menu', // Lists\n'nav', // Sections and headings\n'ol', // Lists\n'p', // Flow content\n'plaintext', // Flow content (legacy)\n'pre', // Flow content\n'section', // Sections and headings\n'ul', // Lists\n'xmp' // Flow content (legacy)\n]);\n\n/**\n * Get the plain-text value of a node.\n *\n * ###### Algorithm\n *\n * *   if `tree` is a comment, returns its `value`\n * *   if `tree` is a text, applies normal whitespace collapsing to its\n *     `value`, as defined by the CSS Text spec\n * *   if `tree` is a root or element, applies an algorithm similar to the\n *     `innerText` getter as defined by HTML\n *\n * ###### Notes\n *\n * > \uD83D\uDC49 **Note**: the algorithm acts as if `tree` is being rendered, and as if\n * > we\u2019re a CSS-supporting user agent, with scripting enabled.\n *\n * *   if `tree` is an element that is not displayed (such as a `head`), we\u2019ll\n *     still use the `innerText` algorithm instead of switching to `textContent`\n * *   if descendants of `tree` are elements that are not displayed, they are\n *     ignored\n * *   CSS is not considered, except for the default user agent style sheet\n * *   a line feed is collapsed instead of ignored in cases where Fullwidth, Wide,\n *     or Halfwidth East Asian Width characters are used, the same goes for a case\n *     with Chinese, Japanese, or Yi writing systems\n * *   replaced elements (such as `audio`) are treated like non-replaced elements\n *\n * @param {Node} tree\n *   Tree to turn into text.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `tree`.\n */\nexport function toText(tree, options = {}) {\n  const children = 'children' in tree ? tree.children : [];\n  const block = blockOrCaption(tree);\n  const whitespace = inferWhitespace(tree, {\n    whitespace: options.whitespace || 'normal',\n    breakBefore: false,\n    breakAfter: false\n  });\n\n  /** @type {Array<string | BreakNumber>} */\n  const results = [];\n\n  // Treat `text` and `comment` as having normal white-space.\n  // This deviates from the spec as in the DOM the node\u2019s `.data` has to be\n  // returned.\n  // If you want that behavior use `hast-util-to-string`.\n  // All other nodes are later handled as if they are `element`s (so the\n  // algorithm also works on a `root`).\n  // Nodes without children are treated as a void element, so `doctype` is thus\n  // ignored.\n  if (tree.type === 'text' || tree.type === 'comment') {\n    results.push(\n      ...collectText(tree, {\n        whitespace,\n        breakBefore: true,\n        breakAfter: true\n      })\n    );\n  }\n\n  // 1.  If this element is not being rendered, or if the user agent is a\n  //     non-CSS user agent, then return the same value as the textContent IDL\n  //     attribute on this element.\n  //\n  //     Note: we\u2019re not supporting stylesheets so we\u2019re acting as if the node\n  //     is rendered.\n  //\n  //     If you want that behavior use `hast-util-to-string`.\n  //     Important: we\u2019ll have to account for this later though.\n\n  // 2.  Let results be a new empty list.\n  let index = -1;\n\n  // 3.  For each child node node of this element:\n  while (++index < children.length) {\n    // 3.1. Let current be the list resulting in running the inner text\n    //      collection steps with node.\n    //      Each item in results will either be a JavaScript string or a\n    //      positive integer (a required line break count).\n    // 3.2. For each item item in current, append item to results.\n    results.push(\n      // @ts-expect-error Looks like a parent.\n      ...innerTextCollection(children[index], tree, {\n        whitespace,\n        breakBefore: index ? undefined : block,\n        breakAfter:\n        index < children.length - 1 ? br(children[index + 1]) : block\n      })\n    );\n  }\n\n  // 4.  Remove any items from results that are the empty string.\n  // 5.  Remove any runs of consecutive required line break count items at the\n  //     start or end of results.\n  // 6.  Replace each remaining run of consecutive required line break count\n  //     items with a string consisting of as many U+000A LINE FEED (LF)\n  //     characters as the maximum of the values in the required line break\n  //     count items.\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {number | undefined} */\n  let count;\n\n  index = -1;\n\n  while (++index < results.length) {\n    const value = results[index];\n\n    if (typeof value === 'number') {\n      if (count !== undefined && value > count) count = value;\n    } else if (value) {\n      if (count !== undefined && count > -1) {\n        result.push('\\n'.repeat(count) || ' ');\n      }\n\n      count = -1;\n      result.push(value);\n    }\n  }\n\n  // 7.  Return the concatenation of the string items in results.\n  return result.join('');\n}\n\n/**\n * <https://html.spec.whatwg.org/#inner-text-collection-steps>\n *\n * @param {Node} node\n * @param {Parent} parent\n * @param {CollectionInfo} info\n * @returns {Array<string | BreakNumber>}\n */\nfunction innerTextCollection(node, parent, info) {\n  if (node.type === 'element') {\n    return collectElement(node, parent, info);\n  }\n\n  if (node.type === 'text') {\n    return info.whitespace === 'normal' ?\n    collectText(node, info) :\n    collectPreText(node);\n  }\n\n  return [];\n}\n\n/**\n * Collect an element.\n *\n * @param {Element} node\n *   Element node.\n * @param {Parent} parent\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n */\nfunction collectElement(node, parent, info) {\n  // First we infer the `white-space` property.\n  const whitespace = inferWhitespace(node, info);\n  const children = node.children || [];\n  let index = -1;\n  /** @type {Array<string | BreakNumber>} */\n  let items = [];\n\n  // We\u2019re ignoring point 3, and exiting without any content here, because we\n  // deviated from the spec in `toText` at step 3.\n  if (notRendered(node)) {\n    return items;\n  }\n\n  /** @type {BreakNumber | undefined} */\n  let prefix;\n  /** @type {BreakNumber | BreakForce | undefined} */\n  let suffix;\n  // Note: we first detect if there is going to be a break before or after the\n  // contents, as that changes the white-space handling.\n\n  // 2.  If node\u2019s computed value of `visibility` is not `visible`, then return\n  //     items.\n  //\n  //     Note: Ignored, as everything is visible by default user agent styles.\n\n  // 3.  If node is not being rendered, then return items. [...]\n  //\n  //     Note: We already did this above.\n\n  // See `collectText` for step 4.\n\n  // 5.  If node is a `<br>` element, then append a string containing a single\n  //     U+000A LINE FEED (LF) character to items.\n  if (br(node)) {\n    suffix = '\\n';\n  }\n\n  // 7.  If node\u2019s computed value of `display` is `table-row`, and node\u2019s CSS\n  //     box is not the last `table-row` box of the nearest ancestor `table`\n  //     box, then append a string containing a single U+000A LINE FEED (LF)\n  //     character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  //     Note: needs further investigation as this does not account for implicit\n  //     rows.\n  else if (row(node) && findAfter(parent, node, row)) {\n    suffix = '\\n';\n  }\n\n  // 8.  If node is a `<p>` element, then append 2 (a required line break count)\n  //     at the beginning and end of items.\n  else if (p(node)) {\n    prefix = 2;\n    suffix = 2;\n  }\n\n  // 9.  If node\u2019s used value of `display` is block-level or `table-caption`,\n  //     then append 1 (a required line break count) at the beginning and end of\n  //     items.\n  else if (blockOrCaption(node)) {\n    prefix = 1;\n    suffix = 1;\n  }\n\n  // 1.  Let items be the result of running the inner text collection steps with\n  //     each child node of node in tree order, and then concatenating the\n  //     results to a single list.\n  while (++index < children.length) {\n    items = items.concat(\n      innerTextCollection(children[index], node, {\n        whitespace,\n        breakBefore: index ? undefined : prefix,\n        breakAfter:\n        index < children.length - 1 ? br(children[index + 1]) : suffix\n      })\n    );\n  }\n\n  // 6.  If node\u2019s computed value of `display` is `table-cell`, and node\u2019s CSS\n  //     box is not the last `table-cell` box of its enclosing `table-row` box,\n  //     then append a string containing a single U+0009 CHARACTER TABULATION\n  //     (tab) character to items.\n  //\n  //     See: <https://html.spec.whatwg.org/#tables-2>\n  if (cell(node) && findAfter(parent, node, cell)) {\n    items.push('\\t');\n  }\n\n  // Add the pre- and suffix.\n  if (prefix) items.unshift(prefix);\n  if (suffix) items.push(suffix);\n\n  return items;\n}\n\n/**\n * 4.  If node is a Text node, then for each CSS text box produced by node,\n *     in content order, compute the text of the box after application of the\n *     CSS `white-space` processing rules and `text-transform` rules, set\n *     items to the list of the resulting strings, and return items.\n *     The CSS `white-space` processing rules are slightly modified:\n *     collapsible spaces at the end of lines are always collapsed, but they\n *     are only removed if the line is the last line of the block, or it ends\n *     with a br element.\n *     Soft hyphens should be preserved.\n *\n *     Note: See `collectText` and `collectPreText`.\n *     Note: we don\u2019t deal with `text-transform`, no element has that by\n *     default.\n *\n * See: <https://drafts.csswg.org/css-text/#white-space-phase-1>\n *\n * @param {Text | Comment} node\n *   Text node.\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectText(node, info) {\n  const value = String(node.value);\n  /** @type {Array<string>} */\n  const lines = [];\n  /** @type {Array<string | BreakNumber>} */\n  const result = [];\n  let start = 0;\n\n  while (start <= value.length) {\n    searchLineFeeds.lastIndex = start;\n\n    const match = searchLineFeeds.exec(value);\n    const end = match && 'index' in match ? match.index : value.length;\n\n    lines.push(\n      // Any sequence of collapsible spaces and tabs immediately preceding or\n      // following a segment break is removed.\n      trimAndCollapseSpacesAndTabs(\n        // [\u2026] ignoring bidi formatting characters (characters with the\n        // Bidi_Control property [UAX9]: ALM, LTR, RTL, LRE-RLO, LRI-PDI) as if\n        // they were not there.\n        value.\n        slice(start, end).\n        replace(/[\\u061C\\u200E\\u200F\\u202A-\\u202E\\u2066-\\u2069]/g, ''),\n        start === 0 ? info.breakBefore : true,\n        end === value.length ? info.breakAfter : true\n      )\n    );\n\n    start = end + 1;\n  }\n\n  // Collapsible segment breaks are transformed for rendering according to the\n  // segment break transformation rules.\n  // So here we jump to 4.1.2 of [CSSTEXT]:\n  // Any collapsible segment break immediately following another collapsible\n  // segment break is removed\n  let index = -1;\n  /** @type {BreakNumber | undefined} */\n  let join;\n\n  while (++index < lines.length) {\n    // *   If the character immediately before or immediately after the segment\n    //     break is the zero-width space character (U+200B), then the break is\n    //     removed, leaving behind the zero-width space.\n    if (\n    lines[index].charCodeAt(lines[index].length - 1) === 0x200b /* ZWSP */ ||\n    index < lines.length - 1 &&\n    lines[index + 1].charCodeAt(0) === 0x200b /* ZWSP */)\n    {\n      result.push(lines[index]);\n      join = undefined;\n    }\n\n    // *   Otherwise, if the East Asian Width property [UAX11] of both the\n    //     character before and after the segment break is Fullwidth, Wide, or\n    //     Halfwidth (not Ambiguous), and neither side is Hangul, then the\n    //     segment break is removed.\n    //\n    //     Note: ignored.\n    // *   Otherwise, if the writing system of the segment break is Chinese,\n    //     Japanese, or Yi, and the character before or after the segment break\n    //     is punctuation or a symbol (Unicode general category P* or S*) and\n    //     has an East Asian Width property of Ambiguous, and the character on\n    //     the other side of the segment break is Fullwidth, Wide, or Halfwidth,\n    //     and not Hangul, then the segment break is removed.\n    //\n    //     Note: ignored.\n\n    // *   Otherwise, the segment break is converted to a space (U+0020).\n    else if (lines[index]) {\n      if (typeof join === 'number') result.push(join);\n      result.push(lines[index]);\n      join = 0;\n    } else if (index === 0 || index === lines.length - 1) {\n      // If this line is empty, and it\u2019s the first or last, add a space.\n      // Note that this function is only called in normal whitespace, so we\n      // don\u2019t worry about `pre`.\n      result.push(0);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Collect a text node as \u201Cpre\u201D whitespace.\n *\n * @param {Text} node\n *   Text node.\n * @returns {Array<string | BreakNumber>}\n *   Result.\n */\nfunction collectPreText(node) {\n  return [String(node.value)];\n}\n\n/**\n * 3.  Every collapsible tab is converted to a collapsible space (U+0020).\n * 4.  Any collapsible space immediately following another collapsible\n *     space\u2014even one outside the boundary of the inline containing that\n *     space, provided both spaces are within the same inline formatting\n *     context\u2014is collapsed to have zero advance width. (It is invisible,\n *     but retains its soft wrap opportunity, if any.)\n *\n * @param {string} value\n *   Value to collapse.\n * @param {BreakBefore} breakBefore\n *   Whether there was a break before.\n * @param {BreakAfter} breakAfter\n *   Whether there was a break after.\n * @returns {string}\n *   Result.\n */\nfunction trimAndCollapseSpacesAndTabs(value, breakBefore, breakAfter) {\n  /** @type {Array<string>} */\n  const result = [];\n  let start = 0;\n  /** @type {number | undefined} */\n  let end;\n\n  while (start < value.length) {\n    searchTabOrSpaces.lastIndex = start;\n    const match = searchTabOrSpaces.exec(value);\n    end = match ? match.index : value.length;\n\n    // If we\u2019re not directly after a segment break, but there was white space,\n    // add an empty value that will be turned into a space.\n    if (!start && !end && match && !breakBefore) {\n      result.push('');\n    }\n\n    if (start !== end) {\n      result.push(value.slice(start, end));\n    }\n\n    start = match ? end + match[0].length : end;\n  }\n\n  // If we reached the end, there was trailing white space, and there\u2019s no\n  // segment break after this node, add an empty value that will be turned\n  // into a space.\n  if (start !== end && !breakAfter) {\n    result.push('');\n  }\n\n  return result.join(' ');\n}\n\n/**\n * Figure out the whitespace of a node.\n *\n * We don\u2019t support void elements here (so `nobr wbr` -> `normal` is ignored).\n *\n * @param {Node} node\n *   Node (typically `Element`).\n * @param {CollectionInfo} info\n *   Info on current collection.\n * @returns {Whitespace}\n *   Applied whitespace.\n */\nfunction inferWhitespace(node, info) {\n  if (node.type === 'element') {\n    const props = node.properties || {};\n    switch (node.tagName) {\n      case 'listing':\n      case 'plaintext':\n      case 'xmp':{\n          return 'pre';\n        }\n\n      case 'nobr':{\n          return 'nowrap';\n        }\n\n      case 'pre':{\n          return props.wrap ? 'pre-wrap' : 'pre';\n        }\n\n      case 'td':\n      case 'th':{\n          return props.noWrap ? 'nowrap' : info.whitespace;\n        }\n\n      case 'textarea':{\n          return 'pre-wrap';\n        }\n\n      default:\n    }\n  }\n\n  return info.whitespace;\n}\n\n/** @type {TestFunctionAnything} */\nfunction hidden(node) {\n  return Boolean((node.properties || {}).hidden);\n}\n\n/** @type {TestFunctionAnything} */\nfunction closedDialog(node) {\n  return node.tagName === 'dialog' && !(node.properties || {}).open;\n}", "/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element\u2019s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element\u2019s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node\u2019s position in its parent.\n * @param parent\n *   The node\u2019s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n", "export {findAfter} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Find the first node in `parent` after another `node` or after an index,\n * that passes `test`.\n\n * @param parent\n *   Parent node.\n * @param index\n *   Child of `parent` or it\u2019s index.\n * @param test\n *   `unist-util-is`-compatible test.\n * @returns\n *   Child of `parent` or `null`.\n */\nexport const findAfter =\n  /**\n   * @type {(\n   *  (<T extends Node>(node: Parent, index: Node | number, test: import('unist-util-is').PredicateTest<T>) => T | null) &\n   *  ((node: Parent, index: Node | number, test?: Test) => Node | null)\n   * )}\n   */\n  (\n    /**\n     * @param {Parent} parent\n     * @param {Node | number} index\n     * @param {Test} [test]\n     * @returns {Node | null}\n     */\n    function (parent, index, test) {\n      const is = convert(test)\n\n      if (!parent || !parent.type || !parent.children) {\n        throw new Error('Expected parent node')\n      }\n\n      if (typeof index === 'number') {\n        if (index < 0 || index === Number.POSITIVE_INFINITY) {\n          throw new Error('Expected positive finite number as index')\n        }\n      } else {\n        index = parent.children.indexOf(index)\n\n        if (index < 0) {\n          throw new Error('Expected child node or index')\n        }\n      }\n\n      while (++index < parent.children.length) {\n        if (is(parent.children[index], index, parent)) {\n          return parent.children[index]\n        }\n      }\n\n      return null\n    }\n  )\n", "/**\n * @typedef {import('./lib/index.js').Test} Test\n * @typedef {import('./lib/index.js').TestFunctionAnything} TestFunctionAnything\n * @typedef {import('./lib/index.js').AssertAnything} AssertAnything\n */\n\n/**\n * @template {import('unist').Node} Kind\n * @typedef {import('./lib/index.js').PredicateTest<Kind>} PredicateTest\n */\n\n/**\n * @template {import('unist').Node} Kind\n * @typedef {import('./lib/index.js').TestFunctionPredicate<Kind>} TestFunctionPredicate\n */\n\n/**\n * @template {import('unist').Node} Kind\n * @typedef {import('./lib/index.js').AssertPredicate<Kind>} AssertPredicate\n */\n\nexport {is, convert} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node\u2019s position in its parent.\n * @param parent\n *   The node\u2019s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n", "// Note: types exported from `index.d.ts`\nexport {CONTINUE, EXIT, SKIP, visit} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n", "// Note: types exported from `index.d.ts`\nexport {CONTINUE, EXIT, SKIP, visitParents} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node\u2019s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n", "/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n", "import { visit } from 'unist-util-visit';\n// eslint-disable-next-line unicorn/no-unsafe-regex\nconst urlPattern = /^(https?:)?\\//;\nconst relativePathPattern = /\\.\\.?\\//;\n/**\n * A Remark plugin for converting Markdown images to MDX images using imports for the image source.\n */\nconst remarkMdxImages = ({ resolve = true } = {}) => (ast) => {\n    const imports = [];\n    const imported = new Map();\n    visit(ast, 'image', (node, index, parent) => {\n        let { alt = null, title, url } = node;\n        if (urlPattern.test(url)) {\n            return;\n        }\n        if (!relativePathPattern.test(url) && resolve) {\n            url = `./${url}`;\n        }\n        let name = imported.get(url);\n        if (!name) {\n            name = `__${imported.size}_${url.replace(/\\W/g, '_')}__`;\n            imports.push({\n                type: 'mdxjsEsm',\n                value: '',\n                data: {\n                    estree: {\n                        type: 'Program',\n                        sourceType: 'module',\n                        body: [\n                            {\n                                type: 'ImportDeclaration',\n                                source: { type: 'Literal', value: url, raw: JSON.stringify(url) },\n                                specifiers: [\n                                    {\n                                        type: 'ImportDefaultSpecifier',\n                                        local: { type: 'Identifier', name },\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                },\n            });\n            imported.set(url, name);\n        }\n        const textElement = {\n            type: 'mdxJsxTextElement',\n            name: 'img',\n            children: [],\n            attributes: [\n                { type: 'mdxJsxAttribute', name: 'alt', value: alt },\n                {\n                    type: 'mdxJsxAttribute',\n                    name: 'src',\n                    value: {\n                        type: 'mdxJsxAttributeValueExpression',\n                        value: name,\n                        data: {\n                            estree: {\n                                type: 'Program',\n                                sourceType: 'module',\n                                comments: [],\n                                body: [{ type: 'ExpressionStatement', expression: { type: 'Identifier', name } }],\n                            },\n                        },\n                    },\n                },\n            ],\n        };\n        if (title) {\n            textElement.attributes.push({ type: 'mdxJsxAttribute', name: 'title', value: title });\n        }\n        parent.children.splice(index, 1, textElement);\n    });\n    ast.children.unshift(...imports);\n};\nexport default remarkMdxImages;\n", "import { Page } from \"~/components\";\n\nexport default function ArticlesPage() {\n\treturn (\n\t\t<h1>Articles</h1>\n\t);\n}\n", "export default function SpeakingPage() {\n  return (\n    <h1>Speaking</h1>\n  );\n}", "import { Title } from \"~/components\";\nimport { Button } from \"~/components/Button\";\n\ninterface CourseCardProps {\n\ttitle: string;\n\timage: string;\n\tdescription: string;\n\turl: string;\n}\n\nfunction CourseCard({ title, image, description, url }: CourseCardProps) {\n\treturn (\n\t\t<div className=\"mt-6 grid gap-4 overflow-hidden md:rounded-md md:border md:border-slate-200 md:p-6 dark:md:border-pink-300/40\">\n\t\t\t<h3 className=\"font-heading text-xl\">{title}</h3>\n\t\t\t<img src={image} alt={title} className=\"mx-auto block w-full max-w-lg\" />\n\t\t\t<p>{description}</p>\n\t\t\t<Button\n\t\t\t\tlabel=\"Enroll\"\n\t\t\t\tto={url}\n\t\t\t\texternal\n\t\t\t\ticon={\n\t\t\t\t\t<svg\n\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\tstrokeWidth={1.5}\n\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\tclassName=\"h-6 w-6\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\td=\"M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default function CoursesPage() {\n\treturn (\n\t\t<article className=\"grid gap-4 px-4 md:px-6 lg:px-8\">\n\t\t\t<Title>Courses</Title>\n\t\t\t<div className=\"text-slate-600 dark:text-slate-300\">\n\t\t\t\t<p>\n\t\t\t\t\tI have in the past produced a few courses for Pluralsight. You can\n\t\t\t\t\tfind them below:\n\t\t\t\t</p>\n\t\t\t\t<div className=\"lg:grid lg:grid-cols-2 lg:gap-6\">\n\t\t\t\t\t<CourseCard\n\t\t\t\t\t\ttitle=\"Getting the Most from the TypeScript Compiler\"\n\t\t\t\t\t\turl=\"https://app.pluralsight.com/library/courses/typescript-compiler/table-of-contents\"\n\t\t\t\t\t\timage=\"https://res.cloudinary.com/duacbnsfa/image/upload/f_auto,q_auto/v1/courses/h7akqj3ee5gbmj213r8f\"\n\t\t\t\t\t\tdescription=\"This course, Getting the Most from the TypeScript Compiler, will teach you advanced techniques of TypeScript, how to rely on the compiler to avoid errors, how to have rapid feedback, and how to improve the code maintainability.\"\n\t\t\t\t\t/>\n\t\t\t\t\t<CourseCard\n\t\t\t\t\t\ttitle=\"Writing Functional JavaScript Using Ramda\"\n\t\t\t\t\t\turl=\"https://app.pluralsight.com/library/courses/javascript-ramda-functional/table-of-contents\"\n\t\t\t\t\t\timage=\"https://res.cloudinary.com/duacbnsfa/image/upload/f_auto,q_auto/v1/courses/eodpah2za5edc0l6dxan\"\n\t\t\t\t\t\tdescription=\"This course will introduce you to the basics of functional programming in JavaScript including what pure functions are, currying, composition, and how to control the application flow in a functional way.\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</article>\n\t);\n}\n", "import { Link } from \"@remix-run/react\";\nimport classnames from \"classnames\";\nimport { ReactNode } from \"react\";\n\ninterface ButtonProps {\n\tlabel: string;\n\ticon?: ReactNode;\n\tto?: string;\n\texternal?: boolean;\n\t// variant: \"primary\" | \"outline\";\n\tonClick?: () => void;\n}\n\nexport function Button({ label, icon, to, external, onClick }: ButtonProps) {\n\tconst classes = classnames(\n\t\t\"flex justify-center rounded-lg border-2 border-fuchsia-500 bg-white py-2 uppercase text-fuchsia-500 dark:bg-violet-500 dark:border-pink-300 dark:text-slate-200 cursor-pointer shadow-md dark:hover:bg-violet-300\",\n\t);\n\n\tif (to && external) {\n\t\treturn (\n\t\t\t<a href={to} className={classes}>\n\t\t\t\t{label}\n\t\t\t\t{icon}\n\t\t\t</a>\n\t\t);\n\t}\n\n\tif (to) {\n\t\treturn (\n\t\t\t<Link to={to} className={classes}>\n\t\t\t\t{label}\n\t\t\t\t{icon}\n\t\t\t</Link>\n\t\t);\n\t}\n\n\treturn (\n\t\t<button className={classes} onClick={onClick}>\n\t\t\t{label}\n\t\t\t{icon}\n\t\t</button>\n\t);\n}\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { Page } from \"~/components\";\nimport { getLatestArticle } from \"~/utils/blog.server\";\n\nimport { About } from \"./components/About\";\nimport { Experience } from \"./components/Experience\";\nimport { Hero } from \"./components/Hero\";\nimport { LatestArticle } from \"./components/LatestArticle\";\nimport { Passions } from \"./components/Passions\";\n\nexport const meta: V2_MetaFunction = () => {\n\treturn [\n\t\t{ title: \"The Coding Temple\" },\n\t\t{\n\t\t\tname: \"description\",\n\t\t\tcontent: \"Hi, I'm Thiago Temple, a developer, geek and this is my site.\",\n\t\t},\n\t];\n};\n\nexport async function loader() {\n\tconst latestArticle = await getLatestArticle();\n\treturn { latestArticle };\n}\n\nexport default function Index() {\n\tconst { latestArticle } = useLoaderData<typeof loader>();\n\n\treturn (\n\t\t\t<div className=\"flex flex-col lg:gap-4\">\n\t\t\t\t<Hero />\n\t\t\t\t{latestArticle && <LatestArticle latestArticle={latestArticle} />}\n\t\t\t\t<Experience />\n\t\t\t\t<About />\n\t\t\t\t<Passions />\n\t\t\t\t{/* <NewsletterSubscription /> */}\n\t\t\t</div>\n\t);\n}\n", "import fs from \"fs\";\nimport path from \"path\";\nimport { PostFrontMatter, getMdxContentForFile } from \"./mdx.server\";\n\nconst DIRECTORY_PATH = \"./content/posts\";\n\nasync function traverseDirectories(\n\tdirectoryPath: string,\n): Promise<PostFrontMatter[]> {\n\tconst files = fs.readdirSync(directoryPath);\n\n\tconst all = await Promise.all(\n\t\tfiles.map(async file => {\n\t\t\tconst filePath = path.join(directoryPath, file, \"index.mdx\");\n\t\t\tconst stat = fs.statSync(filePath);\n\n\t\t\tif (fs.existsSync(filePath)) {\n\t\t\t\tconst { frontmatter } = await getMdxContentForFile(filePath);\n\t\t\t\treturn frontmatter;\n\t\t\t}\n\t\t\treturn null;\n\t\t}),\n\t);\n\n\treturn all.filter((file): file is PostFrontMatter => Boolean(file));\n}\n\nasync function getAllArticles() {\n\treturn traverseDirectories(DIRECTORY_PATH);\n}\n\nexport async function getLatestArticle() {\n\tconst allArticles = await getAllArticles();\n\n\tallArticles.sort((a, b) => {\n\t\treturn a.date > b.date ? -1 : 1;\n\t});\n\treturn allArticles[0];\n}\n", "export function About() {\n\treturn (\n\t\t<section className=\"grid px-4 py-8 md:px-6 lg:grid-cols-2 lg:grid-rows-[auto_1fr] lg:px-8\">\n\t\t\t<h2 className=\"font-heading text-2xl text-slate-700 dark:text-slate-200 lg:col-start-2\">\n\t\t\t\tAbout\n\t\t\t</h2>\n\t\t\t<img\n\t\t\t\tsrc=\"https://res.cloudinary.com/duacbnsfa/image/upload/f_auto,q_auto/nfhbzkqa7by6n6znan0s\"\n\t\t\t\talt=\"Thiago Temple\"\n\t\t\t\tclassName=\"mt-6 h-32 w-32 content-center place-self-center rounded-full lg:row-span-2 lg:row-start-1 lg:mt-0 lg:h-64 lg:w-64\"\n\t\t\t/>\n\t\t\t<p className=\"mt-6 text-slate-600 dark:text-slate-300 lg:col-start-2\">\n\t\t\t\tAs a software engineer based in Ottawa, Canada, I'm passionate about web\n\t\t\t\tand mobile technologies. I've always been captivated by the\n\t\t\t\tever-evolving world of tech, and I love sharing my learning journey on\n\t\t\t\tmy blog. When I'm not immersed in code, you'll find me enjoying board\n\t\t\t\tgames, diving into a good book, or spending quality time with my family.\n\t\t\t\tIt's all about balance!\n\t\t\t</p>\n\t\t</section>\n\t);\n}\n", "import kinaxisLogo from \"~/assets/images/kinaxis-logo.png\";\nimport shopifyLogo from \"~/assets/images/shopify-logo.png\";\nimport smLogo from \"~/assets/images/sm-logo.png\";\nimport wyhnLogo from \"~/assets/images/wyhn-logo.png\";\nimport { Section } from \"./Section\";\ninterface ExperienceItemProps {\n\tlogo: string;\n\tcompany: string;\n\tposition: string;\n\tdate: string;\n}\n\nfunction ExperienceItem({\n\tlogo,\n\tcompany,\n\tposition,\n\tdate,\n}: ExperienceItemProps) {\n\treturn (\n\t\t<li className=\"flex justify-between\">\n\t\t\t<img src={logo} className=\"mr-2 w-11\" />\n\t\t\t<div className=\"flex flex-1 flex-col\">\n\t\t\t\t<span className=\"font-medium text-slate-600 dark:text-slate-200\">\n\t\t\t\t\t{company}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"text-slate-500 dark:text-slate-300\">{position}</span>\n\t\t\t</div>\n\t\t\t<div className=\"flex items-end\">\n\t\t\t\t<span className=\"text-slate-500 dark:text-slate-300\">{date}</span>\n\t\t\t</div>\n\t\t</li>\n\t);\n}\n\nexport function Experience() {\n\treturn (\n\t\t<Section title=\"Experience\" className=\"lg:grid lg:grid-cols-2\">\n\t\t\t<p className=\"mt-6 text-slate-600 dark:text-slate-300 lg:col-start-1 lg:pr-4\">\n\t\t\t\tI'm a seasoned Staff Software Developer at Shopify, skilled in\n\t\t\t\tTypeScript, Elm, JavaScript, and React. With a career spanning over two\n\t\t\t\tdecades, I've led impactful projects, pioneered the adoption of\n\t\t\t\tTypeScript at SurveyMonkey, and developed innovative web and mobile\n\t\t\t\tapplications. I'm a tech-savvy problem solver and a relentless learner.\n\t\t\t</p>\n\t\t\t<ul className=\"mt-6 flex flex-col items-stretch gap-6 lg:col-start-2\">\n\t\t\t\t<ExperienceItem\n\t\t\t\t\tlogo={shopifyLogo}\n\t\t\t\t\tcompany=\"Shopify\"\n\t\t\t\t\tposition=\"Staff Developer\"\n\t\t\t\t\tdate=\"2022 - now\"\n\t\t\t\t/>\n\t\t\t\t<ExperienceItem\n\t\t\t\t\tlogo={smLogo}\n\t\t\t\t\tcompany=\"SurveyMonkey\"\n\t\t\t\t\tposition=\"Senior Engineer\"\n\t\t\t\t\tdate=\"2019 - 2022\"\n\t\t\t\t/>\n\t\t\t\t<ExperienceItem\n\t\t\t\t\tlogo={wyhnLogo}\n\t\t\t\t\tcompany=\"Wyhn\"\n\t\t\t\t\tposition=\"Senior Engineer\"\n\t\t\t\t\tdate=\"2018 - 2018\"\n\t\t\t\t/>\n\t\t\t\t<ExperienceItem\n\t\t\t\t\tlogo={kinaxisLogo}\n\t\t\t\t\tcompany=\"Kinaxis\"\n\t\t\t\t\tposition=\"Advisory Developer\"\n\t\t\t\t\tdate=\"2017 - 2018\"\n\t\t\t\t/>\n\t\t\t</ul>\n\t\t\t{/* <Button\n\t\t\t\tlabel=\"Download CV\"\n\t\t\t\texternal\n\t\t\t\tto=\"https://bit.ly/thiago-temple-resume\"\n\t\t\t\ticon={\n          <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth=\"1.5\"\n          stroke=\"currentColor\"\n          className=\"ml-3 h-auto w-6\"\n\t\t\t\t\t>\n          <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3\"\n          />\n\t\t\t\t\t</svg>\n\t\t\t\t}\n\t\t\t/> */}\n\t\t</Section>\n\t);\n}\n", "import classNames from \"classnames\";\nimport { ReactNode } from \"react\";\n\ninterface SectionProps {\n\ttitle: string;\n\tchildren: ReactNode;\n\tclassName?: string;\n}\n\nexport function Section({ title, children, className }: SectionProps) {\n\treturn (\n\t\t<section className={classNames(\"px-4 py-8 md:px-6 lg:px-8\", className)}>\n\t\t\t<h2 className=\"font-heading text-2xl text-slate-700 dark:text-slate-200\">\n\t\t\t\t{title}\n\t\t\t</h2>\n\t\t\t{children}\n\t\t</section>\n\t);\n}\n", "export function Hero() {\n\treturn (\n\t\t<section className=\"bg-gradient-to-b from-[#921D6403] to-[#921D6435] px-4 py-12 text-fuchsia-500 dark:from-[#A02279] dark:to-[#4F1A84] md:px-6 lg:px-8 lg:py-20\">\n\t\t\t<h1 className=\"font-heading  text-2xl text-violet-500 dark:text-slate-100 lg:max-w-2xl lg:text-5xl lg:font-medium\">\n\t\t\t\tHi, I'm Thiago Temple. I love building products, writing code and\n\t\t\t\tlearning through it.\n\t\t\t</h1>\n\t\t\t<p className=\"lg: mt-8 hidden max-w-2xl text-lg text-zinc-600 dark:text-slate-200 lg:block\">\n\t\t\t\tI'm a web-loving staff developer, driven by curiosity and a passion for\n\t\t\t\tlearning. I'm eager to share my knowledge and always up for new\n\t\t\t\tchallenges. With a friendly and open-minded approach, I embrace the\n\t\t\t\tever-evolving world of web technologies, staying ahead of the game and\n\t\t\t\tinspiring others along the way.\n\t\t\t</p>\n\t\t</section>\n\t);\n}\n", "import { Link } from \"@remix-run/react\";\nimport { Button } from \"~/components/Button\";\nimport { formatDate } from \"~/utils/dateFormats\";\nimport { PostFrontMatter } from \"~/utils/mdx.server\";\n\nexport function PostMeta({\n\tdate,\n\treadTime,\n}: {\n\tdate: Date;\n\treadTime?: number;\n}) {\n\treturn (\n\t\t<>\n\t\t\t<span>{formatDate(date)}</span>\n\t\t\t{readTime && (\n\t\t\t\t<>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t\u2022 <span>{readTime} min read</span>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\ninterface LatestArticleProps {\n\tlatestArticle: PostFrontMatter;\n}\n\nexport function LatestArticle({ latestArticle }: LatestArticleProps) {\n\treturn (\n\t\t<section className=\"grid px-4 py-8 md:px-6 lg:grid-cols-2 lg:grid-rows-[auto_auto_1fr_auto_auto] lg:px-8\">\n\t\t\t<Link\n\t\t\t\tto={`/blog/${latestArticle.slug}`}\n\t\t\t\tclassName=\"lg:col-start-2 lg:mt-4\"\n\t\t\t>\n\t\t\t\t<h2 className=\"font-heading text-2xl text-slate-700 dark:text-slate-200\">\n\t\t\t\t\t{latestArticle.title}\n\t\t\t\t</h2>\n\t\t\t</Link>\n\t\t\t{latestArticle.thumbnail && (\n\t\t\t\t<img\n\t\t\t\t\tsrc={latestArticle.thumbnail}\n\t\t\t\t\tclassName=\"mt-6 w-full object-cover opacity-75 lg:col-start-1 lg:row-span-5 lg:row-start-1 lg:pr-4\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<p className=\"mt-6 text-slate-600 dark:text-slate-300 lg:col-start-2 lg:row-span-2 lg:row-start-3 lg:mt-4\">\n\t\t\t\t{latestArticle.summary}\n\t\t\t</p>\n\t\t\t<p className=\"mt-6 text-slate-400 lg:col-start-2 lg:mt-2\">\n\t\t\t\t<PostMeta date={latestArticle.date} readTime={latestArticle.readTime} />\n\t\t\t</p>\n\t\t\t<p className=\"mt-6 lg:col-start-2\">\n\t\t\t\t<Button\n\t\t\t\t\tlabel=\"Read more\"\n\t\t\t\t\ticon={\n\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\tstrokeWidth=\"1.5\"\n\t\t\t\t\t\t\tstroke=\"currentColor\"\n\t\t\t\t\t\t\tclassName=\"ml-3 h-auto w-6\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t\t\t\t\t\td=\"M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t}\n\t\t\t\t\tto={`/blog/${latestArticle.slug}`}\n\t\t\t\t/>\n\t\t\t</p>\n\t\t</section>\n\t);\n}\n", "export function formatDate(sourceDate: Date | string | number) {\n\tconst date =\n\t\ttypeof sourceDate === \"string\" || typeof sourceDate === \"number\"\n\t\t\t? new Date(sourceDate)\n\t\t\t: sourceDate;\n\n\treturn new Intl.DateTimeFormat(undefined, { dateStyle: \"medium\" }).format(\n\t\tdate,\n\t);\n}\n", "export function Passions() {\n\treturn (\n\t\t<section className=\"grid px-4 py-8 md:px-6 lg:grid-cols-2 lg:grid-rows-[auto_1fr] lg:px-8\">\n\t\t\t<h2 className=\"font-heading text-2xl text-slate-700 dark:text-slate-200 lg:col-start-1\">\n\t\t\t\tPassions\n\t\t\t</h2>\n\t\t\t<img\n\t\t\t\tsrc=\"https://res.cloudinary.com/duacbnsfa/image/upload/f_auto,q_auto/qj7mhjhxvw8uedb0jfni\"\n\t\t\t\talt=\"Board game collection\"\n\t\t\t\tclassName=\"mt-6 self-start lg:col-start-2 lg:row-span-2 lg:row-start-1 lg:mt-0\"\n\t\t\t/>\n\t\t\t<p className=\"mt-6 text-slate-600 dark:text-slate-300 lg:col-start-1 lg:pr-6\">\n\t\t\t\tOutside of the tech world, I have a deep love for board games and have\n\t\t\t\tbeen building a growing collection. I'm also a fan of various TV shows\n\t\t\t\tand always have at least one book on the go. But above all, spending\n\t\t\t\ttime with my family is my favorite pastime. Life's all about enjoying\n\t\t\t\tthese simple pleasures!\n\t\t\t</p>\n\t\t</section>\n\t);\n}\n", "import me from \"~/assets/images/me.jpg\";\nimport { Title } from \"~/components\";\n\nfunction SubTitle({ children }: { children: React.ReactNode }) {\n\treturn (\n\t\t<h2 className=\"my-2 font-heading text-xl dark:text-slate-200\">\n\t\t\t{children}\n\t\t</h2>\n\t);\n}\n\nexport default function AboutPage() {\n\treturn (\n\t\t<article className=\"flex flex-col items-center gap-4 px-4\">\n\t\t\t<img src={me} alt=\"Me\" className=\"h-52 w-52 rounded-full\" />\n\t\t\t<Title>Hi, I'm Thiago Temple</Title>\n\t\t\t<div className=\"text-slate-600 dark:text-slate-300\">\n\t\t\t\t<p>\n\t\t\t\t\tHello, I'm Thiago Temple, a Brazilian currently residing and working\n\t\t\t\t\tin Ottawa, Canada. You can reach me on{\" \"}\n\t\t\t\t\t<a href=\"https://twitter.com/ThiagoTemple\">Twitter</a> or via{\" \"}\n\t\t\t\t\t<a href=\"mailto:thitemple@gmail.com\">email</a>.\n\t\t\t\t</p>\n\t\t\t\t<SubTitle>What I do?</SubTitle>\n\t\t\t\t<p>\n\t\t\t\t\tI am a staff developer at <a href=\"http://shopify.com\">Shopify</a>,\n\t\t\t\t\tprimarily focused on programming with web-related technologies.\n\t\t\t\t</p>\n\t\t\t\t<SubTitle>Why I do it?</SubTitle>\n\t\t\t\t<p>\n\t\t\t\t\tMy fascination with computers dates back to the 90s, even before my\n\t\t\t\t\tfamily purchased our first computer. At the age of 13, I would utilize\n\t\t\t\t\tmy neighbor's computer. Today, I am passionate about the art of\n\t\t\t\t\tsoftware development and thrive on the challenge of staying updated\n\t\t\t\t\twith the latest technologies. The constant evolution of technology is\n\t\t\t\t\ta major driving force for me, along with the knowledge that the\n\t\t\t\t\tsoftware I help build contributes to enhancing people's productivity.\n\t\t\t\t</p>\n\t\t\t\t<SubTitle>Why this blog?</SubTitle>\n\t\t\t\t<p>\n\t\t\t\t\tThis blog serves as an opportunity for me to practice and reinforce\n\t\t\t\t\twhat I am learning. As the saying goes, teaching others is one of the\n\t\t\t\t\tmost effective ways to solidify one's understanding. Or even if I am\n\t\t\t\t\tnot teaching anyone, I am documenting for my future self.\n\t\t\t\t\tAdditionally, I am eager to share the new things I learn and\n\t\t\t\t\tcontribute to the community by sharing my experiences.\n\t\t\t\t</p>\n\t\t\t\t<SubTitle>What I do for fun?</SubTitle>\n\t\t\t\t<p>\n\t\t\t\t\tLiving in Canada, I have discovered a new passion due to its harsh\n\t\t\t\t\twinters: board games. I now thoroughly enjoy them and have been\n\t\t\t\t\tsteadily growing my collection.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<a href=\"https://boardgamegeek.com/user/vintem\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt=\"Board games collection\"\n\t\t\t\t\t\t\tsrc=\"https://boardgamegeek.com/jswidget.php?username=vintem&numitems=5&header=1&text=title&images=medium&show=recentplays&imagesonly=1&imagepos=center&inline=1&domains%5B%5D=boardgame&imagewidget=1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tAdditionally, I indulge in watching a few{\" \"}\n\t\t\t\t\t<a href=\"https://www.tvtime.com/en/user/13947508/profile\">TV shows</a>{\" \"}\n\t\t\t\t\tand always have at least one book on the go\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tHowever, one thing I cherish the most is spending quality time with my\n\t\t\t\t\tfamily. I am married and a proud father of a two kids, as well as the\n\t\t\t\t\towner of two very active greyhounds.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</article>\n\t);\n}\n", "import { LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\nimport { Page } from \"~/components\";\n\nexport function loader({ params }: LoaderArgs) {\n\tif (!params.slug) {\n\t\treturn redirect(\"/\");\n\t}\n\n\treturn null;\n}\n\nexport default function BlogLayout() {\n\treturn (\n\t\t<Page>\n\t\t\t<Outlet />\n\t\t</Page>\n\t);\n}\n", "export default function UsesPage() {\n  return (\n    <h1>Uses</h1>\n  );\n}", "export default {'entry':{'module':'/build/entry.client-LEU7ZDGJ.js','imports':['/build/_shared/chunk-BA6NHEY4.js','/build/_shared/chunk-H5ZE7JVG.js','/build/_shared/chunk-FQTGFZMB.js','/build/_shared/chunk-SE6AVHRO.js','/build/_shared/chunk-O4OKU2LD.js','/build/_shared/chunk-BYNVZQKR.js','/build/_shared/chunk-K6PKGSTD.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-CTAMJUXL.js','imports':['/build/_shared/chunk-PFFEH7IO.js','/build/_shared/chunk-XDCBS5I4.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-5FBRK7TT.js','imports':['/build/_shared/chunk-DBN4WOBN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-5RPZJYVM.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/articles':{'id':'routes/articles','parentId':'root','path':'articles','index':undefined,'caseSensitive':undefined,'module':'/build/routes/articles-ZFEHUBXA.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog':{'id':'routes/blog','parentId':'root','path':'blog','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog-SPNB5O3S.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog.$slug':{'id':'routes/blog.$slug','parentId':'routes/blog','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog.$slug-7J4KURXU.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/courses':{'id':'routes/courses','parentId':'root','path':'courses','index':undefined,'caseSensitive':undefined,'module':'/build/routes/courses-IJHW56LZ.js','imports':['/build/_shared/chunk-DBN4WOBN.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/speaking':{'id':'routes/speaking','parentId':'root','path':'speaking','index':undefined,'caseSensitive':undefined,'module':'/build/routes/speaking-R3RRGRFW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/uses':{'id':'routes/uses','parentId':'root','path':'uses','index':undefined,'caseSensitive':undefined,'module':'/build/routes/uses-VPA2S5HP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'d86c1459','hmr':{'runtime':'/build/_shared/chunk-BYNVZQKR.js','timestamp':1689121802272},'url':'/build/manifest-D86C1459.js'};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;;ACmBO,SAAS,OAAO,aAAa;AAGlC,wBAAe,cAAc,YAAY,eAAe,YAAY,MAE7D;AAWP,WAAS,eAAe,WAAW,QAAQ;AAEzC,QAAM,SAAS,cAAS,cAAAA,SAAU,QAAQ,GAAG,MAAM;AACnD,WAAO,IAAI,YAAY,MAAM;AAAA,EAC/B;AACF;AAxCA,IACA,eAEa,OAHb;AAAA;AAAA;AACA,oBAAsB,+BAET,QAAQ,OAAO,OAAO,OAAO,KAAK,GAAG;AAAA,MAChD,MAAM,OAAO,SAAS;AAAA,MACtB,OAAO,OAAO,UAAU;AAAA,MACxB,WAAW,OAAO,cAAc;AAAA,MAChC,QAAQ,OAAO,WAAW;AAAA,MAC1B,MAAM,OAAO,SAAS;AAAA,MACtB,KAAK,OAAO,QAAQ;AAAA,IACtB,CAAC;AAAA;AAAA;;;ACVD;AAAA,mHAAAC,SAAA;AAAA;AAAA,aAAS,uBAAuB,KAAK;AACnC,aAAO,OAAO,IAAI,aAAa,MAAM;AAAA,QACnC,SAAW;AAAA,MACb;AAAA,IACF;AACA,IAAAA,QAAO,UAAU,wBAAwBA,QAAO,QAAQ,aAAa,IAAMA,QAAO,QAAQ,UAAaA,QAAO;AAAA;AAAA;;;ACL9G;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,GAAK,CAAC;AAC5D,YAAQ,uBAAuB;AAC/B,QAAM,mCAAmC,QAAQ,gCAAgC,GAC3E,gCAAgC,QAAQ,6BAA6B,GACrE,YAAY,QAAQ,SAAS,GAC7B,SAAS,QAAQ,MAAM,GAOvB,uBAAuB,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ;AACrD,UAAM,QAAQ,KACR,UAAU,CAAC;AACjB,UAAI,QAAQ,KAAK,iCAAiC,MAAM,IAAI;AACxD,cAAM,IAAI,MAAM,sEAAsE,KAAK,UAAU,IAAI,GAAG;AAEhH,eAAW,QAAQ,MAAM,UAAU;AAC/B,YAAI,MACE,EAAE,OAAAC,OAAM,IAAI;AAQlB,YAPI,KAAK,SAAS,SACd,WAAW,UAAU,MAAMA,MAAK,IAG3B,KAAK,SAAS,WACnB,WAAW,OAAO,OAAOA,MAAK,IAE9B,QAAQ,MAGZ;AAAA,cAAI,CAAC,QAAQ,OAAO,QAAS;AACzB,kBAAM,IAAI,MAAM;AAAA,EAAoDA,QAAO;AAE/E,kBAAQ,KAAK;AAAA,YACT,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM;AAAA,cACF,QAAQ;AAAA,gBACJ,MAAM;AAAA,gBACN,YAAY;AAAA,gBACZ,MAAM;AAAA,kBACF;AAAA,oBACI,MAAM;AAAA,oBACN,QAAQ;AAAA,oBACR,YAAY,CAAC;AAAA,oBACb,aAAa;AAAA,sBACT,MAAM;AAAA,sBACN,MAAM;AAAA,sBACN,cAAc,OAAO,QAAQ,OAAO,EAAE,CAAC,IAAI,GAAG,KAAK,IAAI,IAAI,EAAE,IAAI,CAAC,CAAC,YAAY,GAAG,MAAM;AACpF,4BAAI,KAAK,iCAAiC,MAAM,UAAU;AACtD,gCAAM,IAAI,MAAM,sDAAsD,KAAK,UAAU,UAAU,GAAG;AAEtG,+BAAO;AAAA,0BACH,MAAM;AAAA,0BACN,IAAI,EAAE,MAAM,cAAc,MAAM,WAAW;AAAA,0BAC3C,UAAU,8BAA8B,eAAe,GAAG;AAAA,wBAC9D;AAAA,sBACJ,CAAC;AAAA,oBACL;AAAA,kBACJ;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ,CAAC;AAAA;AAAA;AAEL,YAAM,SAAS,QAAQ,GAAG,OAAO;AAAA,IACrC;AACA,YAAQ,uBAAuB;AAAA;AAAA;;;ACrE/B;AAAA,sHAAAC,SAAA;AAAA;AAAA;AAKA,IAAAA,QAAO,UAAU,CAAC,UAAU,SAAS,aAAa;AAAA;AAAA;;;ACLlD,IAUa,yBAVb;AAAA;AAAA;AAUO,IAAM,0BACX;AAAA;AAAA;;;ACqIK,SAAS,mBAAmB,MAAM;AACvC,SAAO,SAAS,QAAQ,OAAO;AACjC;AA8BO,SAAS,cAAc,MAAM;AAClC,SAAO,SAAS,MAAM,SAAS,MAAM,SAAS;AAChD;AAqDA,SAAS,WAAW,OAAO;AACzB,SAAO;AAUP,WAAS,MAAM,MAAM;AACnB,WAAO,SAAS,QAAQ,MAAM,KAAK,OAAO,aAAa,IAAI,CAAC;AAAA,EAC9D;AACF;AArPA,IAuBa,YAcA,mBAuBA,YAgCA,YAoBA,eAeA,kBA0EA,oBAsBA,mBA/Nb;AAAA;AAAA;AAIA;AAmBO,IAAM,aAAa,WAAW,UAAU,GAclC,oBAAoB,WAAW,YAAY,GAuB3C,aAAa,WAAW,qBAAqB,GAgC7C,aAAa,WAAW,IAAI,GAoB5B,gBAAgB,WAAW,YAAY,GAevC,mBAAmB,WAAW,gBAAgB;AA0EpD,IAAM,qBAAqB,WAAW,uBAAuB,GAsBvD,oBAAoB,WAAW,IAAI;AAAA;AAAA;;;ACjJzC,SAAS,QAAQ,SAAS;AAE/B,MAAM,SAAS,CAAC,GACZ,QAAQ,IAGN,mBAAmB,MAAM,QAAQ,OAAO,IAC1C,UACA,UACA,CAAC,OAAO,IACR,CAAC,MAAM;AACX,SAAO,EAAE,QAAQ,iBAAiB;AAChC,WAAO,KAAK,IAAI,OAAO,iBAAiB,KAAK,CAAC;AAEhD,SAAO;AACT;AAUA,SAAS,OAAO,QAAQ;AACtB,MAAI,SAAS;AACb,MAAI,OAAO,UAAW,UAAU;AAC9B,QAAI,CAACC,KAAI,KAAK,SAAS,MAAM;AAC3B,YAAM,MAAM,sCAAsC,MAAM;AAE1D,aAAS;AAAA,MACP,MAAM;AAAA,MACN,QAAQ,QAAQ,MAAM;AAAA,IACxB;AAAA,aACS,OAAO,UAAW;AAC3B,UAAM,MAAM,6CAA6C,MAAM;AAEjE,MAAI,CAACA,KAAI,KAAK,QAAQ,MAAM;AAC1B,UAAM,MAAM,iCAAiC,MAAM;AAErD,MAAI,CAACA,KAAI,KAAK,QAAQ,OAAO,KAAK,CAACA,KAAI,KAAK,QAAQ,QAAQ;AAC1D,UAAM,MAAM,8CAA8C,MAAM;AAElE,SAAO;AACT;AA3HA,IAgEMA,MACA,SAjEN;AAAA;AAAA;AA+DA;AACA,IAAMA,OAAM,CAAC,EAAE,gBACT,UAAU;AAAA,MACd,MAAM;AAAA,MACN,MAAM;AAAA,IACR;AAAA;AAAA;;;AC1CO,SAAS,YAAY,SAAS;AACnC,MAAM,gBAAgB,QAAQ,OAAO,GAE/B,OAAO,CAAC,GACV,QAAQ;AACZ,SAAO,EAAE,QAAQ,cAAc,UAAQ;AACrC,QAAMC,UAAS,cAAc,KAAK,GAC5B,OAAO,MAAMA,SAAQ,MAAM,EAAE,WAAW,CAAC,GACzC,YAAY,gBAAgBA,OAAM,GAClC,WAAW,KAAK,IAAI;AAC1B,IAAI,MAAM,QAAQ,QAAQ,IACxB,SAAS,KAAK,SAAS,IAGvB,KAAK,IAAI,IAAI,CAAC,SAAS;AAAA;AAG3B,SAAO;AAAA,IACL;AAAA,EACF;AACF;AAMA,SAAS,gBAAgBA,SAAQ;AAC/B,MAAM,WAAWA,QAAO,UAClB;AAAA;AAAA,IAA2CA,QAAO;AAAA,KAClD;AAAA;AAAA,IAAqC,kBAAkB;AAAA,KACvD;AAAA;AAAA,IAAwC,YAAY;AAAA,KACpD;AAAA;AAAA,IAAqC,kBAAkB;AAAA,KACvD,wBAAwB;AAAA,IAC5B,UAAU;AAAA,IACV,SAAS;AAAA,EACX,GAOI,QACA,cAAc;AAClB,SAAO;AAAA,IACL,UAAU;AAAA,IACV,UAAU;AAAA,EACZ;AAMA,WAAS,oBAAoB,SAASC,KAAI,KAAK;AAC7C,QAAM,OAAO;AACb,WAAO;AAcP,aAAS,MAAM,MAAM;AACnB,UAAM,WAAW,KAAK,IAAI;AAC1B;AAAA;AAAA,QAEE,SAAS,WAAW;AAAA,SAEnB,SAAS,SAAS,KAAK,cAExB,SAAS,MAAMD,SAAQ,MAAM,GAC7B,cAAc,GACV,SAAS,OAAO,WAAW,WAAW,MACxC,QAAQ,MAAM,eAAe,GAC7B,QAAQ,MAAM,SAAS,GACvB,QAAQ,MAAM,YAAY,GACnB,aAAa,IAAI,KAGrB,IAAI,IAAI;AAAA;AAAA,IACjB;AAcA,aAAS,aAAa,MAAM;AAC1B,aAAI,gBAAgB,OAAO,UACzB,QAAQ,KAAK,YAAY,GACrB,cAAc,IAAI,KACpB,QAAQ,MAAM,YAAY,GACnB,uBAAuB,IAAI,KAE7B,UAAU,IAAI,KAEnB,SAAS,OAAO,WAAW,aAAa,KAC1C,QAAQ,QAAQ,IAAI,GACb,gBAEF,IAAI,IAAI;AAAA,IACjB;AAcA,aAAS,uBAAuB,MAAM;AACpC,aAAI,cAAc,IAAI,KACpB,QAAQ,QAAQ,IAAI,GACb,2BAET,QAAQ,KAAK,YAAY,GAClB,UAAU,IAAI;AAAA,IACvB;AAcA,aAAS,UAAU,MAAM;AACvB,aAAI,mBAAmB,IAAI,KACzB,QAAQ,KAAK,SAAS,GACtB,QAAQ,MAAM,YAAY,GAC1B,QAAQ,QAAQ,IAAI,GACpB,QAAQ,KAAK,YAAY,GAEzB,SAAS,MAAMA,SAAQ,OAAO,GAC9B,cAAc,GACP,QAAQ,QAAQ,uBAAuB,OAAO,YAAY,KAI5D,IAAI,IAAI;AAAA,IACjB;AAcA,aAAS,aAAa,MAAM;AAC1B,aAAI,SAAS,QAAQ,mBAAmB,IAAI,IACnC,WAAW,IAAI,KAExB,QAAQ,MAAM,SAAS,GAChB,cAAc,IAAI;AAAA,IAC3B;AAcA,aAAS,cAAc,MAAM;AAC3B,aAAI,SAAS,QAAQ,mBAAmB,IAAI,KAC1C,QAAQ,KAAK,SAAS,GACf,WAAW,IAAI,MAExB,QAAQ,QAAQ,IAAI,GACb;AAAA,IACT;AAcA,aAAS,WAAW,MAAM;AAExB,aAAI,SAAS,OACJ,IAAI,IAAI,KAIjB,QAAQ,MAAM,YAAY,GAC1B,QAAQ,QAAQ,IAAI,GACpB,QAAQ,KAAK,YAAY,GAClB,QAAQ,QAAQ,uBAAuB,OAAO,YAAY;AAAA,IACnE;AAcA,aAAS,MAAM,MAAM;AAEnB,qBAAQ,KAAK,eAAe,GACrBC,IAAG,IAAI;AAAA,IAChB;AAAA,EACF;AAGA,WAAS,qBAAqB,SAASA,KAAI,KAAK;AAC9C,QAAIC,eAAc;AAClB,WAAO;AAcP,aAAS,WAAW,MAAM;AACxB,aAAI,SAAS,OAAO,WAAWA,YAAW,KACxC,QAAQ,MAAM,SAAS,GACvB,QAAQ,MAAM,YAAY,GACnB,cAAc,IAAI,KAEpB,IAAI,IAAI;AAAA,IACjB;AAcA,aAAS,cAAc,MAAM;AAC3B,aAAIA,iBAAgB,OAAO,UACzB,QAAQ,KAAK,YAAY,GACrB,cAAc,IAAI,KACpB,QAAQ,MAAM,YAAY,GACnB,wBAAwB,IAAI,KAE9B,WAAW,IAAI,KAEpB,SAAS,OAAO,WAAWA,cAAa,KAC1C,QAAQ,QAAQ,IAAI,GACb,iBAEF,IAAI,IAAI;AAAA,IACjB;AAcA,aAAS,wBAAwB,MAAM;AACrC,aAAI,cAAc,IAAI,KACpB,QAAQ,QAAQ,IAAI,GACb,4BAET,QAAQ,KAAK,YAAY,GAClB,WAAW,IAAI;AAAA,IACxB;AAcA,aAAS,WAAW,MAAM;AACxB,aAAI,SAAS,QAAQ,mBAAmB,IAAI,KAC1C,QAAQ,KAAK,SAAS,GACfD,IAAG,IAAI,KAET,IAAI,IAAI;AAAA,IACjB;AAAA,EACF;AACF;AAOA,SAAS,MAAMD,SAAQ,MAAM;AAC3B,SAAOA,QAAO,SACV,KAAKA,QAAO,QAAQ,IAAI,EAAE,OAAO,CAAC;AAAA;AAAA,IAElC,KAAKA,QAAO,OAAO,IAAI;AAAA;AAC7B;AAOA,SAAS,KAAK,QAAQ,MAAM;AAC1B,SAAO,OAAO,UAAW,WAAW,SAAS,OAAO,IAAI;AAC1D;AAzYA;AAAA;AAAA;AAcA;AACA;AAAA;AAAA;;;ACfA;AAAA;AAAA;AAOA;AAAA;AAAA;;;ACeO,SAAS,wBAAwB,SAAS;AAG/C,MAAM,WAAW,QAAQ,OAAO,GAE1B,QAAQ,CAAC,GAET,OAAO,CAAC,GACV,QAAQ;AAEZ,SAAO,EAAE,QAAQ,SAAS,UAAQ;AAChC,QAAMG,UAAS,SAAS,KAAK;AAC7B,UAAMA,QAAO,IAAI,IAAI,OAAOA,OAAM,GAClC,KAAKA,QAAO,IAAI,IAAI,OACpB,KAAKA,QAAO,OAAO,OAAO,IAAI;AAAA;AAGhC,SAAO,EAAC,OAAO,KAAI;AACrB;AAMA,SAAS,OAAOA,SAAQ;AACtB,SAAO;AAMP,WAAS,KAAK,OAAO;AAEnB,SAAK,MAAM,EAAC,MAAMA,QAAO,MAAM,OAAO,GAAE,GAAG,KAAK,GAChD,KAAK,OAAO;AAAA,EACd;AACF;AAMA,SAAS,MAAM,OAAO;AACpB,MAAM,OAAO,KAAK,OAAO,GACnB;AAAA;AAAA,IAA+B,KAAK,KAAK,KAAK;AAAA;AAEpD,OAAK,QAAQ,KAAK,QAAQ,4BAA4B,EAAE;AAC1D;AAMA,SAAS,MAAM,OAAO;AACpB,OAAK,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK,GACvC,KAAK,OAAO,KAAK,KAAK,KAAK,MAAM,KAAK;AACxC;AAUO,SAAS,sBAAsB,SAAS;AAG7C,MAAM,SAAS,CAAC,GAEV,WAAW,CAAC,GAGZ,WAAW,QAAQ,OAAO,GAC5B,QAAQ;AAEZ,SAAO,EAAE,QAAQ,SAAS,UAAQ;AAChC,QAAMA,UAAS,SAAS,KAAK;AAI7B,aAASA,QAAO,IAAI,IAAI,QAAQA,OAAM,GAGtC,OAAO,KAAK,EAAC,SAAS,IAAM,WAAWC,OAAMD,SAAQ,MAAM,EAAE,OAAO,CAAC,EAAC,CAAC;AAAA;AAGzE,SAAO,EAAC,QAAQ,SAAQ;AAC1B;AAUA,SAAS,QAAQA,SAAQ;AACvB,MAAM,OAAOC,OAAMD,SAAQ,MAAM,GAC3BE,SAAQD,OAAMD,SAAQ,OAAO;AAEnC,SAAO;AAUP,WAAS,OAAO,MAAM;AACpB,WAAO,QAAQ,KAAK,QAAQ;AAAA,IAAO,KAAK,QAAQ,MAAM;AAAA,IAAOE;AAAA,EAC/D;AACF;AAYA,SAASD,OAAMD,SAAQ,MAAM;AAC3B,SAAOA,QAAO,SACVG,MAAKH,QAAO,QAAQ,IAAI,EAAE,OAAO,CAAC;AAAA;AAAA,IAElCG,MAAKH,QAAO,OAAO,IAAI;AAAA;AAC7B;AAaA,SAASG,MAAK,QAAQ,MAAM;AAC1B,SAAO,OAAO,UAAW,WAAW,SAAS,OAAO,IAAI;AAC1D;AA1KA;AAAA;AAAA;AAYA;AAAA;AAAA;;;ACZA;AAAA;AAAA;AAMA;AAAA;AAAA;;;ACNA;AAAA;AAAA;AAAA;AAgBe,SAAR,kBAAmC,UAAU,QAAQ;AAC1D,MAAM,OAAO,KAAK,KAAK;AAEvB,MAAI,uBAAuB,YAAY,OAAO,CAAC,GAC/C,IAAI,0BAA0B,wBAAwB,OAAO,CAAC,GAC9D,IAAI,wBAAwB,sBAAsB,OAAO,CAAC;AAM1D,WAAS,IAAI,OAAOC,QAAO;AAOzB;AAAA;AAAA;AAAA,KAHE,KAAK,KAAK,IAAI,KAAK,KAAK,IAAK,KAAK,KAAK,IAAI,CAAC,GAGzC,KAAKA,MAAK;AAAA,EACjB;AACF;AApCA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;;;ACNA,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAEA,QAAI,yBAAyB;AAC7B,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAYC;AACpB,QAAI,MAAM,uBAAuB,QAAQ,IAAI,CAAC,GAC1C,QAAQ,uBAAuB,QAAQ,MAAM,CAAC,GAC9C,kBAAkB,QAAQ,gBAAgB,GAC1C,wBAAwB,gBACxB,cAAc,uBAAuB,QAAQ,aAAa,CAAC,GAC3D,UAAU,wBAAwB,QAAQ,SAAS,CAAC,GACpD,eAAe,QAAQ,+BAA+B,GACtD,gCAAgC,QAAQ,4CAA4C,GACpF,QAAQ,QAAQ,MAAM,GACtB,mBAAmB,uBAAuB,2BAAkC;AAChF,aAAS,yBAAyB,aAAa;AAAE,UAAI,OAAO,WAAY;AAAY,eAAO;AAAM,UAAI,oBAAoB,oBAAI,QAAQ,GAAO,mBAAmB,oBAAI,QAAQ;AAAG,cAAQ,2BAA2B,SAAUC,cAAa;AAAE,eAAOA,eAAc,mBAAmB;AAAA,MAAmB,GAAG,WAAW;AAAA,IAAG;AACtT,aAAS,wBAAwB,KAAK,aAAa;AAAE,UAAI,CAAC,eAAe,OAAO,IAAI;AAAc,eAAO;AAAO,UAAI,QAAQ,QAAQ,OAAO,OAAQ,YAAY,OAAO,OAAQ;AAAc,eAAO,EAAE,SAAS,IAAI;AAAK,UAAI,QAAQ,yBAAyB,WAAW;AAAG,UAAI,SAAS,MAAM,IAAI,GAAG;AAAK,eAAO,MAAM,IAAI,GAAG;AAAK,UAAI,SAAS,CAAC,GAAO,wBAAwB,OAAO,kBAAkB,OAAO;AAA0B,eAAS,OAAO;AAAO,YAAI,QAAQ,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG,GAAG;AAAE,cAAI,OAAO,wBAAwB,OAAO,yBAAyB,KAAK,GAAG,IAAI;AAAM,UAAI,SAAS,KAAK,OAAO,KAAK,OAAQ,OAAO,eAAe,QAAQ,KAAK,IAAI,IAAY,OAAO,GAAG,IAAI,IAAI,GAAG;AAAA;AAAS,oBAAO,UAAU,KAAS,SAAS,MAAM,IAAI,KAAK,MAAM,GAAY;AAAA,IAAQ;AACnyB,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,IAAI,QAAQ;AAOhB,mBAAeD,WAAU;AAAA,MACvB;AAAA,MACA;AAAA,MACA,QAAQ,CAAC;AAAA,MACT,aAAa,aAAW;AAAA,MACxB,iBAAiB,aAAW;AAAA,MAC5B,UAAU,CAAC;AAAA,MACX,MAAM,MAAM,QAAQ,KAAK,QAAQ,IAAI,GAAG,0BAA0B;AAAA,MAClE,oBAAoB,aAAW;AAAA,MAC/B;AAAA,MACA;AAAA,IACF,GAAG;AAED,MAAI,iBAAiB,WAAW,CAAC,QAAQ,IAAI,uBAC3C,QAAQ,KAAK,2NAA2N;AAM1O,UAAM,CAAC;AAAA,QACL,SAAS;AAAA,MACX,GAAG;AAAA,QACD,SAASE;AAAA,MACX,CAAC,IAAI,MAAM,QAAQ,IAAI,CAAC,OAAO,iBAAiB,GAAG,qFAA4B,CAAC,GACzD,MAAyB,WAA6FC,SAGvI,gBAAgB,CAAC,GACjB,YAAY,OAAO,mBAAoB;AAC7C,UAAI,OAAO,mBAAoB,OAAO;AACpC,cAAM,IAAI,MAAM,qEAAqE;AAIvF,eAAS,QAAQ,OAAO;AACtB,eAAO,OAAO,SAAU,YAAY,UAAU,QAAQ,WAAW;AAAA,MACnE;AACA,UAAI,OAAO,UAAW;AAIpB,QAAAA,cADoB,YAAY,SAAS,QAAQ,kBAAkB,CAAC,CAAC,CAAC,GAEtE,YAAY,MAAM,QAAQ,KAAK,KAAK,kCAAkC,MAAM,IAAI,OAAO,GACvF,cAAc,SAAS,IAAI;AAAA,eAClB,QAAQ,MAAM,GAAG;AAC1B,YAAMC,SAAQ,OAAO,OAAO,KAAK;AAGjC,QAAAD,cADoB,YAAY,SAASC,QAAO,kBAAkB,CAAC,CAAC,CAAC,GAErE,YAAY,OAAO,OAAO,MAAM,QAAQ,WAAW,OAAO,IAAI,IAAI,OAAO,OAAO,MAAM,QAAQ,KAAK,OAAO,KAAK,OAAO,IAAI,IAAI,MAAM,QAAQ,KAAK,KAAK,kCAAkC,MAAM,IAAI,OAAO,GACzM,cAAc,SAAS,IAAIA;AAAA,iBAClB,OAAO,QAAS;AAIzB,QAAAD,UADgB,YAAY,QAAQ,KAAK,MAAM,kBAAkB,CAAC,CAAC,CAAC,GAEpE,YAAY;AAAA;AAMZ,cAAM,IAAI,MAAM,oCAAoC;AAItD,eAAW,CAAC,UAAU,QAAQ,KAAK,OAAO,QAAQ,KAAK;AACrD,sBAAc,MAAM,QAAQ,KAAK,KAAK,QAAQ,CAAC,IAAI;AAIrD,UAAM,iBAAiB;AAAA,QACrB,MAAM;AAAA,QACN,MAAM,OAAO;AACX,gBAAM,UAAU;AAAA,YACd,QAAQ;AAAA,UACV,GAAG,CAAC;AAAA,YACF,MAAM;AAAA,YACN;AAAA,UACF,MAAM;AACJ,gBAAI,aAAa;AACf,qBAAO;AAAA,gBACL,MAAM;AAAA,gBACN,YAAY;AAAA,kBACV,UAAU;AAAA,kBACV,UAAU,cAAc,QAAQ;AAAA,gBAClC;AAAA,cACF;AAEF,gBAAM,aAAa,MAAM,QAAQ,QAAQ,MAAM,QAAQ,QAAQ,QAAQ,GAAG,QAAQ;AAClF,gBAAI,cAAc;AAChB,qBAAO;AAAA,gBACL,MAAM;AAAA,gBACN,YAAY;AAAA,kBACV,UAAU;AAAA,kBACV,UAAU,cAAc,UAAU;AAAA,gBACpC;AAAA,cACF;AAEF,qBAAW,OAAO,CAAC,OAAO,OAAO,QAAQ,QAAQ,SAAS,MAAM,GAAG;AACjE,kBAAM,iBAAiB,GAAG,aAAa;AACvC,kBAAI,kBAAkB;AACpB,uBAAO;AAAA,kBACL,MAAM;AAAA,kBACN,YAAY;AAAA,oBACV,UAAU;AAAA,oBACV,UAAU,cAAc,cAAc;AAAA,kBACxC;AAAA,gBACF;AAAA;AAKJ,mBAAO,CAAC;AAAA,UACV,CAAC,GACD,MAAM,OAAO;AAAA,YACX,QAAQ;AAAA,UACV,GAAG,OAAO;AAAA,YACR,MAAM;AAAA,YACN;AAAA,UACF,MAAM;AACJ,gBAAI,eAAe,UAAa,CAAC,WAAW;AAE1C,qBAAO;AAIT,gBAAM,YAAY,MAAM,QAAQ,QAAQ,QAAQ,KAAK,QAAQ,MAAM,CAAC,GAC9D,WAAW,cAAc,QAAQ;AACvC,gBAAI,aAAa;AAAO,qBAAO;AAG/B,gBAAIE;AACJ,mBAAI,MAAM,eAAe,UAAU,MAAM,eAAe,OAAO,IAAI,UAAU,IAC3EA,UAAS,MAAM,eAAe,OAAO,IAAI,UAAU,IAEnDA;AAAA,YAA8C,UAEzC;AAAA,cACL;AAAA,cACA,QAAAA;AAAA,YACF;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF,GACM,eAAe,eAAe;AAAA,QAClC,aAAa,CAAC,SAAS;AAAA,QACvB,OAAO;AAAA,QACP,QAAQ,YAAY,kBAAkB;AAAA,QACtC,YAAY,YAAY,aAAa;AAAA,QACrC,eAAe;AAAA,QACf,QAAQ;AAAA,UACN,wBAAwB,KAAK,UAAU,aAAoB;AAAA,QAC7D;AAAA,QACA,SAAS;AAAA,cAAK,8BAA8B,iBAAiB;AAAA,YAC3D,GAAG;AAAA,YACH,OAAO;AAAA,cACL,SAAS;AAAA,cACT,MAAM;AAAA,YACR;AAAA,YACA,aAAa;AAAA,cACX,SAAS;AAAA,cACT,MAAM;AAAA,YACR;AAAA,YACA,qBAAqB;AAAA,cACnB,SAAS;AAAA,cACT,MAAM;AAAA,YACR;AAAA,UACF,CAAC;AAAA;AAAA,cAEG,aAAa,mBAAmB;AAAA,YAClC,YAAY,CAAC,OAAO,OAAO,QAAQ,MAAM;AAAA,YACzC,gBAAgB;AAAA,cACd,SAAS;AAAA,YACX;AAAA,UACF,CAAC;AAAA,UAAG;AAAA,UAAgB,WAAW,WAAW;AAAA,YACxC,eAAe,CAACH,oBAAmB,CAAC,sBAAsB,sBAAsB;AAAA,cAC9E,MAAM;AAAA,YACR,CAAC,CAAC;AAAA,UACJ,GAAGC,QAAO,IAAI,CAAC;AAAA,QAAC;AAAA,QAChB,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,QAAQ;AAAA,MACV,GAAGA,QAAO,IAAI,GACR,UAAU,MAAM,QAAQ,MAAM,YAAY;AAChD,UAAI,QAAQ;AAEV,eADgB,IAAI,gBAAgB,cAAc,MAAM,EACzC,MAAM,OAAO,KAAK,QAAQ,YAAY,CAAC,EAAE,QAAQ,CAAC;AAAA,eACxD,aAAa,UAAU,aAAa,OAAO;AAEpD,YAAM;AAAA;AAAA,UAAkD,aAAa,YAAY,CAAC;AAAA,WAC5E,WAAW,MAAM,QAAQ,SAAS,SAAS,EAAE,QAAQ,aAAa,KAAK;AAC7E,gBAAQ,MAAM,SAAS,MAAM,QAAQ,KAAK,aAAa,QAAQ,QAAQ,CAAC,GAAG,SAAS,GACpF,MAAM,OAAO,MAAM,QAAQ,KAAK,aAAa,QAAQ,QAAQ,CAAC;AAAA;AAE9D,cAAM,IAAI,MAAM,uGAAuG;AAEzH,aAAO;AAAA,QACL,MAAM,GAAG;AAAA,QACT,aAAaA,QAAO;AAAA,QACpB,QAAQ,QAAQ;AAAA,QAChB,QAAAA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC1OA;AAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,kBAAkBG;AAC1B,YAAQ,eAAe;AACvB,QAAI,QAAQ,wBAAwB,QAAQ,OAAO,CAAC,GAChD,eAAe,wBAAwB,QAAQ,mBAAmB,CAAC,GACnE,WAAW,wBAAwB,QAAQ,WAAW,CAAC;AAC3D,aAAS,yBAAyB,aAAa;AAAE,UAAI,OAAO,WAAY;AAAY,eAAO;AAAM,UAAI,oBAAoB,oBAAI,QAAQ,GAAO,mBAAmB,oBAAI,QAAQ;AAAG,cAAQ,2BAA2B,SAAUC,cAAa;AAAE,eAAOA,eAAc,mBAAmB;AAAA,MAAmB,GAAG,WAAW;AAAA,IAAG;AACtT,aAAS,wBAAwB,KAAK,aAAa;AAAE,UAAI,CAAC,eAAe,OAAO,IAAI;AAAc,eAAO;AAAO,UAAI,QAAQ,QAAQ,OAAO,OAAQ,YAAY,OAAO,OAAQ;AAAc,eAAO,EAAE,SAAS,IAAI;AAAK,UAAI,QAAQ,yBAAyB,WAAW;AAAG,UAAI,SAAS,MAAM,IAAI,GAAG;AAAK,eAAO,MAAM,IAAI,GAAG;AAAK,UAAI,SAAS,CAAC,GAAO,wBAAwB,OAAO,kBAAkB,OAAO;AAA0B,eAAS,OAAO;AAAO,YAAI,QAAQ,aAAa,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG,GAAG;AAAE,cAAI,OAAO,wBAAwB,OAAO,yBAAyB,KAAK,GAAG,IAAI;AAAM,UAAI,SAAS,KAAK,OAAO,KAAK,OAAQ,OAAO,eAAe,QAAQ,KAAK,IAAI,IAAY,OAAO,GAAG,IAAI,IAAI,GAAG;AAAA;AAAS,oBAAO,UAAU,KAAS,SAAS,MAAM,IAAI,KAAK,MAAM,GAAY;AAAA,IAAQ;AAWnyB,aAASD,iBAAgB,MAAM,SAAS;AAEtC,aADkB,aAAa,MAAM,OAAO,EAC3B;AAAA,IACnB;AAUA,aAAS,aAAa,MAAM,SAAS;AACnC,UAAM,QAAQ;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA,GAAG;AAAA,MACL;AAGA,aADW,IAAI,SAAS,GAAG,OAAO,KAAK,KAAK,GAAG,IAAI,EACzC,GAAG,OAAO,OAAO,KAAK,CAAC;AAAA,IACnC;AAAA;AAAA;;;AC7CA,IAAAE,kBAAA;AAAA,2GAAAC,SAAA;AAAA;AAAA,IAAAA,QAAO,UAAU;AAAA;AAAA;;;ACAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAMA,yBAA4B,wBAG5B,cAAyB,4BACzB,eAA4B,6BAC5B,eAAkB,2BAClB,gBAAuC,6BAiCjC,2DA/BA,cAAc;AAEL,SAAR,cACL,SACA,oBACA,iBACA,cACA;AACA,aAAO,aAAAC,SAAM,QAAQ,QAAQ,IAAI,YAAY,CAAC,IAC1C;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACN;AAEA,SAAS,iBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAM,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,aAAa;AACX,cAAM,OAAO,IAAI,+BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KACrB,QAAQ,MAAM,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;AAEA,SAAS,qBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAM,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,eAAe;AACb,cAAM,OAAO,IAAI,+BAAY;AAE7B,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,qBAAS,MAAM;AAAA,cACjB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,kBAAQ,MAAM,KAAK,GACnB,qBAAqB;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;ACvHA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAC,gBAOA;;;;;;ACRA;;;ACAA;AAAA,IAAAC,gBAAwB,6BACxB,oBAAuB,gCAIpBC,0BAAA;AAHH,SAAS,WAAW,EAAE,IAAI,MAAM,GAAkC;AACjE,SACC,oDAAC,QACA;AAAA,IAAC;AAAA;AAAA,MACA;AAAA,MACA,WAAW,CAAC,EAAE,SAAS,UACf,kBAAAC;AAAA,QACN;AAAA,QACA;AAAA,UACC,yEACC;AAAA,QACF;AAAA,MACD;AAAA,MAGA;AAAA;AAAA,IAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,KAdD;AAAA;AAAA;AAAA;AAAA,SAeA;AAEF;AAEO,SAAS,SAAS;AACxB,SACC,oDAAC,SAAI,WAAU,8EACd;AAAA,wDAAC,QAAG,WAAU,6CACb;AAAA,0DAAC,cAAW,IAAG,KAAI,OAAM,UAAzB;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,MAChC,oDAAC,cAAW,IAAG,aAAY,OAAM,cAAjC;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,MAC5C,oDAAC,cAAW,IAAG,YAAW,OAAM,aAAhC;AAAA;AAAA;AAAA;AAAA,aAA0C;AAAA,MAG1C,oDAAC,cAAW,IAAG,UAAS,OAAM,WAA9B;AAAA;AAAA;AAAA;AAAA,aAAsC;AAAA,SANvC;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IACA,oDAAC,OAAE,WAAU,sCAAqC,2CAAlD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAXD;AAAA;AAAA;AAAA;AAAA,SAYA;AAEF;;;ACvCA;AAEE,IAAAC,0BAAA;AAFK,SAAS,MAAM,EAAE,SAAS,GAAkC;AAClE,SACC,oDAAC,QAAG,WAAU,mEACZ,YADF;AAAA;AAAA;AAAA;AAAA,SAEA;AAEF;;;ACNA;;;ACAA;AAAA,IAAAC,gBAAqB,6BACrBA,gBAAyB;;;ACDzB;;;;;;;;;;;;;;;ACAA;AAAA,IAAAC,gBAAwB,6BACxBC,qBAAuB,gCAYpBC,0BAAA;AATI,SAAS,eAAe;AAAA,EAC9B;AAAA,EACA;AACD,GAGG;AACF,SACC,oDAAC,SAAI,WAAU,UACd;AAAA,IAAC;AAAA;AAAA,MACA;AAAA,MACA,WAAW,CAAC,EAAE,SAAS,UACf,mBAAAC;AAAA,QACN;AAAA,QACA;AAAA,UACC,oIACC;AAAA,QACF;AAAA,MACD;AAAA,MAGA;AAAA;AAAA,IAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,KAdD;AAAA;AAAA;AAAA;AAAA,SAeA;AAEF;;;AC7BA;AAAA,IAAAC,gBAAqB,6BACrBA,gBAA6C,kBAa1CC,0BAAA;AAXH,SAAS,cAAc;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACF,SACC,oDAAC,QAAG,WAAU,gDACb,8DAAC,sBAAK,IAAQ,WACZ,YADF;AAAA;AAAA;AAAA;AAAA,SAEA,KAHD;AAAA;AAAA;AAAA;AAAA,SAIA;AAEF;AAEO,SAAS,UAAU;AAAA,EACzB,OAAO;AAAA,EACP;AACD,GAGG;AACF,MAAM,UAAM,sBAA0B,IAAI;AAC1C,+BAAU,MAAM;AA7BjB;AA8BE,IAAI,IAAI,WAAW,QAAQ,CAAC,IAAI,QAAQ,SACvC,IAAI,QAAQ,KAAK,GACjB,IAAI,QAAQ,MAAM,KAEf,SAAI,YAAJ,WAAa,QAAQ,CAAC,QACzB,IAAI,QAAQ,MAAM;AAAA,EAEpB,GAAG,CAAC,IAAI,SAAS,IAAI,CAAC,OAEtB,yBAAU,MAAM;AAvCjB;AAwCE,aAAS,eAAe;AACvB,cAAQ;AAAA,IACT;AACA,qBAAI,YAAJ,WAAa,iBAAiB,UAAU,eACjC,MAAM;AA5Cf,UAAAC;AA6CG,OAAAA,MAAA,IAAI,YAAJ,QAAAA,IAAa,oBAAoB,UAAU;AAAA,IAC5C;AAAA,EACD,GAAG,CAAC,CAAC;AAEL,WAAS,YAAY,GAAoD;AACxE,IAAI,EAAE,WAAW,EAAE,iBAClB,QAAQ;AAAA,EAEV;AAEA,SACC;AAAA,IAAC;AAAA;AAAA,MACA,WAAU;AAAA,MACV,SAAS;AAAA,MACT;AAAA,MAEA;AAAA,4DAAC,YAAO,WAAU,2DACjB;AAAA,8DAAC,QAAG,0BAAJ;AAAA;AAAA;AAAA;AAAA,iBAAc;AAAA,UACd,oDAAC,YAAO,SAAS,SAChB;AAAA,YAAC;AAAA;AAAA,cACA,OAAM;AAAA,cACN,MAAK;AAAA,cACL,SAAQ;AAAA,cACR,aAAY;AAAA,cACZ,QAAO;AAAA,cACP,WAAU;AAAA,cAEV;AAAA,gBAAC;AAAA;AAAA,kBACA,eAAc;AAAA,kBACd,gBAAe;AAAA,kBACf,GAAE;AAAA;AAAA,gBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIA;AAAA;AAAA,YAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaA,KAdD;AAAA;AAAA;AAAA;AAAA,iBAeA;AAAA,aAjBD;AAAA;AAAA;AAAA;AAAA,eAkBA;AAAA,QACA,oDAAC,QAAG,WAAU,iEACb;AAAA,8DAAC,iBAAc,IAAG,KAAI,oBAAtB;AAAA;AAAA;AAAA;AAAA,iBAA0B;AAAA,UAC1B,oDAAC,iBAAc,IAAG,aAAY,WAAS,IAAC,wBAAxC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,iBAAc,IAAG,YAAW,uBAA7B;AAAA;AAAA;AAAA;AAAA,iBAAoC;AAAA,UAGpC,oDAAC,iBAAc,IAAG,UAAS,qBAA3B;AAAA;AAAA;AAAA;AAAA,iBAAgC;AAAA,aARjC;AAAA;AAAA;AAAA;AAAA,eASA;AAAA;AAAA;AAAA,IAjCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkCA;AAEF;;;AH9EM,IAAAC,0BAAA;AAPC,SAAS,MAAM;AACrB,MAAM,CAAC,cAAc,eAAe,QAAI,wBAAS,EAAK;AACtD,SACC,oDAAC,YAAO,WAAU,qBACjB,8DAAC,SAAI,WAAU,sDACd;AAAA,wDAAC,SAAI,WAAU,eACd;AAAA,0DAAC,sBAAK,IAAG,KACR;AAAA,4DAAC,SAAI,KAAK,4BAAQ,WAAU,gCAA5B;AAAA;AAAA;AAAA;AAAA,eAAyD;AAAA,QACzD;AAAA,UAAC;AAAA;AAAA,YACA,KAAK;AAAA,YACL,WAAU;AAAA;AAAA,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAGA;AAAA,QACA,oDAAC,SAAI,KAAK,0BAAM,WAAU,yCAA1B;AAAA;AAAA;AAAA;AAAA,eAAgE;AAAA,QAChE,oDAAC,SAAI,KAAK,wBAAc,WAAU,+BAAlC;AAAA;AAAA;AAAA;AAAA,eAA8D;AAAA,WAP/D;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,oDAAC,SAAI,WAAU,qCACd,8DAAC,SAAI,WAAU,iNACd;AAAA,4DAAC,kBAAe,IAAG,aAAY,wBAA/B;AAAA;AAAA;AAAA;AAAA,eAAuC;AAAA,QACvC,oDAAC,kBAAe,IAAG,YAAW,uBAA9B;AAAA;AAAA;AAAA;AAAA,eAAqC;AAAA,QAGrC,oDAAC,kBAAe,IAAG,UAAS,qBAA5B;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,WALlC;AAAA;AAAA;AAAA;AAAA,aAMA,KAPD;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,SAlBD;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,IACA,oDAAC,SAAI,WAAU,qCACd;AAAA;AAAA,QAAC;AAAA;AAAA,UACA,OAAM;AAAA,UACN,WAAU;AAAA,UACV,SAAS,MAAM,gBAAgB,EAAI;AAAA,UACnC;AAAA;AAAA,YAEA;AAAA,cAAC;AAAA;AAAA,gBACA,OAAM;AAAA,gBACN,MAAK;AAAA,gBACL,SAAQ;AAAA,gBACR,aAAY;AAAA,gBACZ,QAAO;AAAA,gBACP,WAAU;AAAA,gBAEV;AAAA,kBAAC;AAAA;AAAA,oBACA,eAAc;AAAA,oBACd,gBAAe;AAAA,oBACf,GAAE;AAAA;AAAA,kBAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAaA;AAAA;AAAA;AAAA,QAnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoBA;AAAA,MACA;AAAA,QAAC;AAAA;AAAA,UACA,MAAM;AAAA,UACN,SAAS,MAAM,gBAAgB,EAAK;AAAA;AAAA,QAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGA;AAAA,SAzBD;AAAA;AAAA;AAAA;AAAA,WA0BA;AAAA,OA/CD;AAAA;AAAA;AAAA;AAAA,SAgDA,KAjDD;AAAA;AAAA;AAAA;AAAA,SAkDA;AAEF;;;AI9DA;AAYI,IAAAC,0BAAA;AAJG,SAAS,KAAK,EAAE,SAAS,GAAc;AAC7C,SACC,oDAAC,SAAI,WAAU,gBACd,8DAAC,UAAK,WAAU,sDACf;AAAA,wDAAC,SAAD;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA,IACJ;AAAA,IACD,oDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,OAHT;AAAA;AAAA;AAAA;AAAA,SAIA,KALD;AAAA;AAAA;AAAA;AAAA,SAMA;AAEF;;;ATAI,IAAAC,0BAAA,kCANS,QAAuB,MAAM,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAO,CAAC;AAE/D,SAAR,MAAuB;AAC5B,SACE,oDAAC,UAAK,MAAK,MAAK,WAAU,UAC3B;AAAA,wDAAC,UACA;AAAA,0DAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,oDAAC,UAAK,MAAK,YAAW,SAAQ,wCAA9B;AAAA;AAAA;AAAA;AAAA,aAAmE;AAAA,MACnE,oDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,oDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,oDAAC,UAAK,WAAU,UACf,8DAAC,SAAI,WAAU,mCACd;AAAA,0DAAC,UAAK,WAAU,sDACf;AAAA,4DAAC,SAAD;AAAA;AAAA;AAAA;AAAA,eAAK;AAAA,QACL,oDAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,QACR,oDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,WAHT;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,oDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,oDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,oDAAC,8BAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SARb;AAAA;AAAA;AAAA;AAAA,WASA,KAVD;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,OAlBC;AAAA;AAAA;AAAA;AAAA,SAmBF;AAEF;;;AUrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,IAAAC,gBAA8B,6BAC9BA,iBAAwB;;;ACFxB;AAAA,kBAAiB;;;ACAjB;;;ACAA;;;ACAA;;;ACAA;AAGA,qBAAoB,2DACpB,cAAiB,wDACjB,WAAc,qDACd,aAAgB,uDAChB,gBAAmB,0DACnB,aAAgB,uDAChB,cAAiB,wDACjB,YAAe,sDACf,iBAAoB,2DACpB,aAAgB,uDAChB,cAAiB,wDACjB,oBAAuB,8DACvB,cAAiB,wDACjB,gBAAmB,0DACnB,cAAiB,wDACjB,aAAgB,uDAChB,kBAAqB,4DACrB,kBAAqB,4DACrB,oBAAuB,8DACvB,cAAiB,wDACjB,aAAgB,uDAChB,sBAAwB,gEACxB,mBAAsB,6DACtB,gBAAmB,0DACnB,qBAAuB,+DACvB,WAAc,qDACd,cAAiB,wDACjB,cAAiB,wDACjB,cAAiB,wDACjB,eAAkB,yDAClB,aAAgB,uDAChB,eAAkB,yDAClB,oBAAuB,8DACvB,eAAkB,yDAClB,cAAiB,wDACjB,aAAgB,uDAChB,cAAiB;;;ACvCjB;AAsBA,kBAAiB;AACjB;AAEA,IAAM,MAAM,CAAC,EAAE,gBAET,gBAAgB;AActB,SAAS,UAAUC,WAAUC,QAAO,UAAU,CAAC,GAAG;AAChD,MAAI,SAAS,QAAQ;AAErB,MAAI,OAAOD,aAAa;AACtB,UAAM,MAAM,wCAAwCA,SAAQ;AAG9D,MAAI,CAAC,YAAAE,QAAK,YAAYF,SAAQ;AAC5B,UAAM,MAAM,4CAA4CA,SAAQ;AAGlE,MAAI,OAAOC,UAAU;AACnB,UAAM,MAAM,yCAAyCA,MAAK;AAG5D,EAAI,UAAW,SACb,SAAS,gBAKX,YAAAC,QAAK,UAAU,EAAC,WAAW,aAAa,aAAa,OAAM,CAAC;AAE5D,MAAM;AAAA;AAAA,IACJ,YAAAA,QAAK,UAAUD,QAAO,EAAC,UAAAD,WAAU,gBAAgB,GAAI,CAAC;AAAA;AAQxD,MALA,YAAAE,QAAK,UAAU,CAAC,CAAC,GAKb,OAAO;AACT,UAAM,OAAO;AAIf,gBAAO,SAAS,KAAK,KAAK,WAAW,OAAO,UAC5C,OAAO,SAAS,KAAK,KAAK,YAAY,OAAO,WAEtC,OAAO,SAAS;AACzB;AAYA,SAAS,cAAcD,QAAO,UAAU,CAAC,GAAG;AAC1C,MAAM,SAAS,QAAQ,UAAU,YAAAC,QAAK,cAAc,GAChD,SAAS,QAAQ,QACjB,QAAQ,IAER,SAAS;AAAA,IACX,MAAM;AAAA,IACN,MAAM,EAAC,UAAU,MAAM,WAAW,EAAC;AAAA,IACnC,UAAU,CAAC;AAAA,EACb;AAMA,MAJI,UAAW,SACb,SAAS,gBAGP,OAAOD,UAAU;AACnB,UAAM,MAAM,yCAAyCA,MAAK;AAG5D,SAAO,EAAE,QAAQ,OAAO,UAAQ;AAC9B,QAAM,OAAO,OAAO,KAAK;AAEzB,QAAI,CAAC,YAAAC,QAAK,YAAY,IAAI;AAAG;AAE7B,QAAM,UAAU,UAAU,MAAMD,QAAO,OAAO;AAE9C,IAAI,QAAQ,KAAK,YAAY,OAAO,KAAK,cAAW,SAAS;AAAA;AAG/D,SAAO;AACT;AAWA,SAAS,iBAAiBD,WAAU,QAAQ;AAC1C,cAAAE,QAAK,iBAAiBF,WAAU,MAAM;AACxC;AAWA,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaF,SAAUA,WAAU,OAAO;AACzB,QAAI,OAAOA,aAAa;AAEtB,kBAAAE,QAAK,gBAAgB,OAAO,EAAC,cAAcF,UAAQ,CAAC;AAAA,SAC/C;AAEL,UAAI;AAEJ,WAAK,OAAOA;AACV,QAAI,IAAI,KAAKA,WAAU,GAAG,KACxB,YAAAE,QAAK,gBAAgBF,UAAS,GAAG,GAAG,EAAC,cAAc,IAAG,CAAC;AAAA;AAAA,EAI/D;AAAA;AAWJ,SAAS,WAAW,iBAAiB;AACnC,SAAO,QAAQ,YAAAE,QAAK,YAAY,eAAe,CAAC;AAClD;AAQA,SAAS,gBAAgB;AACvB,SAAO,YAAAA,QAAK,cAAc;AAC5B;AAGA,IAAM,cAAN,MAAkB;AAAA;AAAA;AAAA;AAAA,EAIhB,YAAY,SAAS;AAEnB,SAAK,UAAU,SAEf,KAAK,OAAO;AAAA,MACV,MAAM;AAAA,MACN,MAAM,EAAC,UAAU,MAAM,WAAW,EAAC;AAAA,MACnC,UAAU,CAAC;AAAA,IACb,GAEA,KAAK,QAAQ,CAAC,KAAK,IAAI;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQD,QAAO;AACb,QAAIA,WAAU;AAAI;AAElB,QAAM,UAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAC1C,OAAO,QAAQ,SAAS,QAAQ,SAAS,SAAS,CAAC;AAEzD,IAAI,QAAQ,KAAK,SAAS,SACxB,KAAK,SAASA,SAEd,QAAQ,SAAS,KAAK,EAAC,MAAM,QAAQ,OAAAA,OAAK,CAAC;AAAA,EAE/C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,SAAS;AAClB,SAAK,SAAS,OAAO,OAAO,CAAC;AAAA,EAC/B;AAAA;AAAA;AAAA,EAIA,WAAW;AACT,SAAK,UAAU;AAAA,EACjB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiB,OAAO,MAAM;AAC5B,QAAM,UAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAC1C,UAAU,MAAM,KAAK;AAE3B,IAAI,OACF,QAAQ,SAAS,KAAK;AAAA,MACpB,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,WAAW,CAAC,IAAI,EAAC;AAAA,MAC9B,UAAU;AAAA,IACZ,CAAC,IAED,QAAQ,SAAS,KAAK,GAAG,OAAO;AAAA,EAEpC;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,MAAM;AAIb,QAAM,YAAY,KACf,MAAM,GAAG,EACT,IAAI,CAAC,GAAG,MAAO,IAAI,IAAI,IAAI,OAAO,CAAC,IAAI,KAAK,QAAQ,cAAc,CAAE,GACjE,UAAU,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,GAE1C,QAAQ;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,EAAC,UAAS;AAAA,MACtB,UAAU,CAAC;AAAA,IACb;AAEA,YAAQ,SAAS,KAAK,KAAK,GAC3B,KAAK,MAAM,KAAK,KAAK;AAAA,EACvB;AAAA;AAAA;AAAA,EAIA,YAAY;AACV,SAAK,MAAM,IAAI;AAAA,EACjB;AAAA;AAAA;AAAA,EAIA,WAAW;AAAA,EAAC;AAAA;AAAA;AAAA,EAIZ,SAAS;AACP,WAAO;AAAA,EACT;AACF,GAEa,WAAW;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ADjRA,SAAS,iBAAiB,WAAW,eAAAE,OAAO;AAC5C,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,KAAK,SAAAC,OAAC;AAChC,SAAS,iBAAiB,OAAO,WAAAC,OAAG;AACpC,SAAS,iBAAiB,UAAU,cAAAC,OAAM;AAC1C,SAAS,iBAAiB,OAAO,WAAAC,OAAG;AACpC,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,MAAM,UAAAC,OAAE;AAClC,SAAS,iBAAiB,WAAW,eAAAC,OAAO;AAC5C,SAAS,iBAAiB,OAAO,WAAAC,OAAG;AACpC,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,cAAc,kBAAAC,OAAU;AAClD,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,UAAU,cAAAC,OAAM;AAC1C,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,OAAO,WAAAC,OAAG;AACpC,SAAS,iBAAiB,YAAY,gBAAAC,OAAQ;AAC9C,SAAS,iBAAiB,YAAY,gBAAAC,OAAQ;AAC9C,SAAS,iBAAiB,cAAc,kBAAAC,OAAU;AAClD,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,OAAO,WAAAC,OAAG;AACpC,SAAS,iBAAiB,gBAAgB,oBAAAC,OAAW;AACrD,SAAS,iBAAiB,aAAa,iBAAAC,OAAS;AAChD,SAAS,iBAAiB,UAAU,cAAAC,OAAM;AAC1C,SAAS,iBAAiB,eAAe,mBAAAC,OAAU;AACnD,SAAS,iBAAiB,KAAK,SAAAC,OAAC;AAChC,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,SAAS,aAAAC,OAAK;AACxC,SAAS,iBAAiB,OAAO,WAAAC,OAAG;AACpC,SAAS,iBAAiB,SAAS,aAAAC,OAAK;AACxC,SAAS,iBAAiB,cAAc,kBAAAC,OAAU;AAClD,SAAS,iBAAiB,SAAS,aAAAC,OAAK;AACxC,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;AACtC,SAAS,iBAAiB,OAAO,WAAAC,OAAG;AACpC,SAAS,iBAAiB,QAAQ,YAAAC,OAAI;;;AE9EtC;;;ACAA;;;ACAA;AAiKO,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYT,SAAU,MAAM;AACd,QAA0B,QAAS;AACjC,aAAO;AAGT,QAAI,OAAO,QAAS;AAClB,aAAO,eAAe,IAAI;AAG5B,QAAI,OAAO,QAAS;AAClB,aAAO,WAAW,IAAI;AAGxB,QAAI,OAAO,QAAS;AAClB,aAAO,YAAY,IAAI;AAGzB,UAAM,IAAI,MAAM,6CAA6C;AAAA,EAC/D;AAAA;AASJ,SAAS,WAAW,OAAO;AAEzB,MAAM,SAAS,CAAC,GACZ,QAAQ;AAEZ,SAAO,EAAE,QAAQ,MAAM;AACrB,WAAO,KAAK,IAAI,eAAe,MAAM,KAAK,CAAC;AAG7C,SAAO,YAAY,GAAG;AAOtB,WAAS,OAAO,YAAY;AAC1B,QAAIC,SAAQ;AAEZ,WAAO,EAAEA,SAAQ,OAAO;AACtB,UAAI,OAAOA,MAAK,EAAE,KAAK,MAAM,GAAG,UAAU;AACxC,eAAO;AAIX,WAAO;AAAA,EACT;AACF;AAQA,SAAS,eAAe,OAAO;AAC7B,SAAO;AAMP,WAAS,QAAQ,MAAM;AACrB,WAAO,QAAQ,IAAI,KAAK,KAAK,YAAY;AAAA,EAC3C;AACF;AAQA,SAAS,YAAY,OAAO;AAC1B,SAAO;AAQP,WAAS,UAAU,SAAS,YAAY;AAEtC,WAAO,QAAQ,IAAI,KAAK,QAAQ,MAAM,KAAK,MAAM,MAAM,GAAG,UAAU,CAAC;AAAA,EACvE;AACF;AAQA,SAAS,QAAQ,MAAM;AACrB,SAAO;AAAA,IACL,QACE,OAAO,QAAS;AAAA,IAEhB,KAAK,SAAS;AAAA,IAEd,OAAO,KAAK,WAAY;AAAA,EAC5B;AACF;;;AC3RA;;;ACAA;;;ACAA;;;ACAA;AAqKO,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYT,SAAU,MAAM;AACd,QAA0B,QAAS;AACjC,aAAO;AAGT,QAAI,OAAO,QAAS;AAClB,aAAO,YAAY,IAAI;AAGzB,QAAI,OAAO,QAAS;AAClB,aAAO,MAAM,QAAQ,IAAI,IAAIC,YAAW,IAAI,IAAI,aAAa,IAAI;AAGnE,QAAI,OAAO,QAAS;AAClB,aAAOC,aAAY,IAAI;AAGzB,UAAM,IAAI,MAAM,8CAA8C;AAAA,EAChE;AAAA;AAOJ,SAASD,YAAW,OAAO;AAEzB,MAAM,SAAS,CAAC,GACZ,QAAQ;AAEZ,SAAO,EAAE,QAAQ,MAAM;AACrB,WAAO,KAAK,IAAI,QAAQ,MAAM,KAAK,CAAC;AAGtC,SAAOC,aAAY,GAAG;AAOtB,WAAS,OAAO,YAAY;AAC1B,QAAIC,SAAQ;AAEZ,WAAO,EAAEA,SAAQ,OAAO;AACtB,UAAI,OAAOA,MAAK,EAAE,KAAK,MAAM,GAAG,UAAU;AAAG,eAAO;AAGtD,WAAO;AAAA,EACT;AACF;AAQA,SAAS,aAAa,OAAO;AAC3B,SAAOD,aAAY,GAAG;AAMtB,WAAS,IAAI,MAAM;AAEjB,QAAI;AAEJ,SAAK,OAAO;AAEV,UAAI,KAAK,GAAG,MAAM,MAAM,GAAG;AAAG,eAAO;AAGvC,WAAO;AAAA,EACT;AACF;AAQA,SAAS,YAAY,OAAO;AAC1B,SAAOA,aAAY,IAAI;AAKvB,WAAS,KAAK,MAAM;AAClB,WAAO,QAAQ,KAAK,SAAS;AAAA,EAC/B;AACF;AAQA,SAASA,aAAY,OAAO;AAC1B,SAAO;AAQP,WAAS,UAAU,SAAS,YAAY;AACtC,WAAO;AAAA,MACL,QACE,OAAO,QAAS,YAChB,UAAU;AAAA,MAEV,QAAQ,MAAM,KAAK,MAAM,MAAM,GAAG,UAAU,CAAC;AAAA,IACjD;AAAA,EACF;AACF;AAEA,SAAS,KAAK;AACZ,SAAO;AACT;;;AFvRO,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcT,SAAU,QAAQ,OAAO,MAAM;AAC7B,QAAME,MAAK,QAAQ,IAAI;AAEvB,QAAI,CAAC,UAAU,CAAC,OAAO,QAAQ,CAAC,OAAO;AACrC,YAAM,IAAI,MAAM,sBAAsB;AAGxC,QAAI,OAAO,SAAU;AACnB,UAAI,QAAQ,KAAK,UAAU,OAAO;AAChC,cAAM,IAAI,MAAM,0CAA0C;AAAA,eAG5D,QAAQ,OAAO,SAAS,QAAQ,KAAK,GAEjC,QAAQ;AACV,YAAM,IAAI,MAAM,8BAA8B;AAIlD,WAAO,EAAE,QAAQ,OAAO,SAAS;AAC/B,UAAIA,IAAG,OAAO,SAAS,KAAK,GAAG,OAAO,MAAM;AAC1C,eAAO,OAAO,SAAS,KAAK;AAIhC,WAAO;AAAA,EACT;AAAA;;;AHZJ,IAAM,kBAAkB,OAClB,oBAAoB,WAEpB,KAAK,eAAe,IAAI,GACxB,IAAI,eAAe,GAAG,GACtB,OAAO,eAAe,CAAC,MAAM,IAAI,CAAC,GAClC,MAAM,eAAe,IAAI,GAIzB,cAAc;AAAA,EAAe;AAAA;AAAA,IAEnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA;AAAA;AAAA,IAEA;AAAA,EAAY;AACZ,GAGM,iBAAiB,eAAe;AAAA,EACtmCM,SAAS,OAAO,MAAM,UAAU,CAAC,GAAG;AACzC,MAAM,WAAW,cAAc,OAAO,KAAK,WAAW,CAAC,GACjD,QAAQ,eAAe,IAAI,GAC3B,aAAa,gBAAgB,MAAM;AAAA,IACvC,YAAY,QAAQ,cAAc;AAAA,IAClC,aAAa;AAAA,IACb,YAAY;AAAA,EACd,CAAC,GAGK,UAAU,CAAC;AAUjB,GAAI,KAAK,SAAS,UAAU,KAAK,SAAS,cACxC,QAAQ;AAAA,IACN,GAAG,YAAY,MAAM;AAAA,MACnB;AAAA,MACA,aAAa;AAAA,MACb,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AAcF,MAAI,QAAQ;AAGZ,SAAO,EAAE,QAAQ,SAAS;AAMxB,YAAQ;AAAA,MAEN,GAAG,oBAAoB,SAAS,KAAK,GAAG,MAAM;AAAA,QAC5C;AAAA,QACA,aAAa,QAAQ,SAAY;AAAA,QACjC,YACA,QAAQ,SAAS,SAAS,IAAI,GAAG,SAAS,QAAQ,CAAC,CAAC,IAAI;AAAA,MAC1D,CAAC;AAAA,IACH;AAWF,MAAM,SAAS,CAAC,GAEZ;AAIJ,OAFA,QAAQ,IAED,EAAE,QAAQ,QAAQ,UAAQ;AAC/B,QAAMC,SAAQ,QAAQ,KAAK;AAE3B,IAAI,OAAOA,UAAU,WACf,UAAU,UAAaA,SAAQ,UAAO,QAAQA,UACzCA,WACL,UAAU,UAAa,QAAQ,MACjC,OAAO,KAAK;AAAA,EAAK,OAAO,KAAK,KAAK,GAAG,GAGvC,QAAQ,IACR,OAAO,KAAKA,MAAK;AAAA;AAKrB,SAAO,OAAO,KAAK,EAAE;AACvB;AAUA,SAAS,oBAAoB,MAAM,QAAQ,MAAM;AAC/C,SAAI,KAAK,SAAS,YACT,eAAe,MAAM,QAAQ,IAAI,IAGtC,KAAK,SAAS,SACT,KAAK,eAAe,WAC3B,YAAY,MAAM,IAAI,IACtB,eAAe,IAAI,IAGd,CAAC;AACV;AAYA,SAAS,eAAe,MAAM,QAAQ,MAAM;AAE1C,MAAM,aAAa,gBAAgB,MAAM,IAAI,GACvC,WAAW,KAAK,YAAY,CAAC,GAC/B,QAAQ,IAER,QAAQ,CAAC;AAIb,MAAI,YAAY,IAAI;AAClB,WAAO;AAIT,MAAI,QAEA;AAmDJ,OAlCI,GAAG,IAAI,KAYF,IAAI,IAAI,KAAK,UAAU,QAAQ,MAAM,GAAG,IAX/C,SAAS;AAAA,IAiBF,EAAE,IAAI,KACb,SAAS,GACT,SAAS,KAMF,eAAe,IAAI,MAC1B,SAAS,GACT,SAAS,IAMJ,EAAE,QAAQ,SAAS;AACxB,YAAQ,MAAM;AAAA,MACZ,oBAAoB,SAAS,KAAK,GAAG,MAAM;AAAA,QACzC;AAAA,QACA,aAAa,QAAQ,SAAY;AAAA,QACjC,YACA,QAAQ,SAAS,SAAS,IAAI,GAAG,SAAS,QAAQ,CAAC,CAAC,IAAI;AAAA,MAC1D,CAAC;AAAA,IACH;AASF,SAAI,KAAK,IAAI,KAAK,UAAU,QAAQ,MAAM,IAAI,KAC5C,MAAM,KAAK,GAAI,GAIb,UAAQ,MAAM,QAAQ,MAAM,GAC5B,UAAQ,MAAM,KAAK,MAAM,GAEtB;AACT;AA0BA,SAAS,YAAY,MAAM,MAAM;AAC/B,MAAMA,SAAQ,OAAO,KAAK,KAAK,GAEzB,QAAQ,CAAC,GAET,SAAS,CAAC,GACZ,QAAQ;AAEZ,SAAO,SAASA,OAAM,UAAQ;AAC5B,oBAAgB,YAAY;AAE5B,QAAM,QAAQ,gBAAgB,KAAKA,MAAK,GAClC,MAAM,SAAS,WAAW,QAAQ,MAAM,QAAQA,OAAM;AAE5D,UAAM;AAAA;AAAA;AAAA,MAGJ;AAAA;AAAA;AAAA;AAAA,QAIEA,OACA,MAAM,OAAO,GAAG,EAChB,QAAQ,mDAAmD,EAAE;AAAA,QAC7D,UAAU,IAAI,KAAK,cAAc;AAAA,QACjC,QAAQA,OAAM,SAAS,KAAK,aAAa;AAAA,MAC3C;AAAA,IACF,GAEA,QAAQ,MAAM;AAAA;AAQhB,MAAI,QAAQ,IAER;AAEJ,SAAO,EAAE,QAAQ,MAAM;AAIrB,IACA,MAAM,KAAK,EAAE,WAAW,MAAM,KAAK,EAAE,SAAS,CAAC,MAAM,QACrD,QAAQ,MAAM,SAAS,KACvB,MAAM,QAAQ,CAAC,EAAE,WAAW,CAAC,MAAM,QAEjC,OAAO,KAAK,MAAM,KAAK,CAAC,GACxB,OAAO,UAmBA,MAAM,KAAK,KACd,OAAO,QAAS,YAAU,OAAO,KAAK,IAAI,GAC9C,OAAO,KAAK,MAAM,KAAK,CAAC,GACxB,OAAO,MACE,UAAU,KAAK,UAAU,MAAM,SAAS,MAIjD,OAAO,KAAK,CAAC;AAIjB,SAAO;AACT;AAUA,SAAS,eAAe,MAAM;AAC5B,SAAO,CAAC,OAAO,KAAK,KAAK,CAAC;AAC5B;AAmBA,SAAS,6BAA6BA,QAAO,aAAa,YAAY;AAEpE,MAAM,SAAS,CAAC,GACZ,QAAQ,GAER;AAEJ,SAAO,QAAQA,OAAM,UAAQ;AAC3B,sBAAkB,YAAY;AAC9B,QAAM,QAAQ,kBAAkB,KAAKA,MAAK;AAC1C,UAAM,QAAQ,MAAM,QAAQA,OAAM,QAI9B,CAAC,SAAS,CAAC,OAAO,SAAS,CAAC,eAC9B,OAAO,KAAK,EAAE,GAGZ,UAAU,OACZ,OAAO,KAAKA,OAAM,MAAM,OAAO,GAAG,CAAC,GAGrC,QAAQ,QAAQ,MAAM,MAAM,CAAC,EAAE,SAAS;AAAA;AAM1C,SAAI,UAAU,OAAO,CAAC,cACpB,OAAO,KAAK,EAAE,GAGT,OAAO,KAAK,GAAG;AACxB;AAcA,SAAS,gBAAgB,MAAM,MAAM;AACnC,MAAI,KAAK,SAAS,WAAW;AAC3B,QAAM,QAAQ,KAAK,cAAc,CAAC;AAClC,YAAQ,KAAK,SAAS;AAAA,MACpB,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACD,eAAO;AAAA,MAGX,KAAK;AACD,eAAO;AAAA,MAGX,KAAK;AACD,eAAO,MAAM,OAAO,aAAa;AAAA,MAGrC,KAAK;AAAA,MACL,KAAK;AACD,eAAO,MAAM,SAAS,WAAW,KAAK;AAAA,MAG1C,KAAK;AACD,eAAO;AAAA,MAGX;AAAA,IACF;AAAA;AAGF,SAAO,KAAK;AACd;AAGA,SAAS,OAAO,MAAM;AACpB,SAAO,SAAS,KAAK,cAAc,CAAC,GAAG,MAAM;AAC/C;AAGA,SAAS,aAAa,MAAM;AAC1B,SAAO,KAAK,YAAY,YAAY,EAAE,KAAK,cAAc,CAAC,GAAG;AAC/D;;;AM1lBA;;;ACAA;;;ACAA;;;ACAA;;;ACAA;AAIO,SAAS,MAAM,GAAG;AACvB,SAAO,aAAe,IAAI;AAC5B;;;AD0EO,IAAM,WAAW,IAKX,OAAO,IAKP,OAAO,QA+BP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeT,SAAU,MAAM,MAAM,SAAS,SAAS;AACtC,IAAI,OAAO,QAAS,cAAc,OAAO,WAAY,eACnD,UAAU,SAEV,UAAU,MACV,OAAO;AAGT,QAAMC,MAAK,QAAQ,IAAI,GACjB,OAAO,UAAU,KAAK;AAE5B,YAAQ,MAAM,QAAW,CAAC,CAAC,EAAE;AAO7B,aAAS,QAAQ,MAAM,OAAO,SAAS;AAGrC,UAAMC,SAAQ,QAAQ,OAAO,QAAS,WAAW,OAAO,CAAC;AAEzD,UAAI,OAAOA,OAAM,QAAS,UAAU;AAClC,YAAM;AAAA;AAAA,UAEJ,OAAOA,OAAM,WAAY,WACrBA,OAAM;AAAA;AAAA,YAER,OAAOA,OAAM,QAAS,WACpBA,OAAM,OACN;AAAA;AAAA;AAEN,eAAO,eAAeC,QAAO,QAAQ;AAAA,UACnC,OACE,WAAW,MAAM,KAAK,QAAQ,OAAO,MAAM,OAAO,MAAM,GAAG,IAAI;AAAA,QACnE,CAAC;AAAA;AAGH,aAAOA;AAEP,eAASA,SAAQ;AAEf,YAAI,SAAS,CAAC,GAEV,WAEA,QAEA;AAEJ,aAAI,CAAC,QAAQF,IAAG,MAAM,OAAO,QAAQ,QAAQ,SAAS,CAAC,KAAK,IAAI,OAC9D,SAAS,SAAS,QAAQ,MAAM,OAAO,CAAC,GAEpC,OAAO,CAAC,MAAM;AAChB,iBAAO;AAKX,YAAI,KAAK,YAAY,OAAO,CAAC,MAAM;AAOjC,eALA,UAAU,UAAU,KAAK,SAAS,SAAS,MAAM,MAEjD,eAAe,QAAQ,OAAO,IAAI,GAG3B,SAAS,MAAM,SAAS,KAAK,SAAS,UAAQ;AAInD,gBAFA,YAAY,QAAQ,KAAK,SAAS,MAAM,GAAG,QAAQ,YAAY,EAAE,GAE7D,UAAU,CAAC,MAAM;AACnB,qBAAO;AAGT,qBACE,OAAO,UAAU,CAAC,KAAM,WAAW,UAAU,CAAC,IAAI,SAAS;AAAA;AAIjE,eAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA;AAWJ,SAAS,SAASC,QAAO;AACvB,SAAI,MAAM,QAAQA,MAAK,IACdA,SAGL,OAAOA,UAAU,WACZ,CAAC,UAAUA,MAAK,IAGlB,CAACA,MAAK;AACf;;;AFlGO,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeT,SAAU,MAAM,MAAM,SAAS,SAAS;AACtC,IAAI,OAAO,QAAS,cAAc,OAAO,WAAY,eACnD,UAAU,SACV,UAAU,MACV,OAAO,OAGT,aAAa,MAAM,MAAM,UAAU,OAAO;AAM1C,aAAS,SAAS,MAAM,SAAS;AAC/B,UAAM,SAAS,QAAQ,QAAQ,SAAS,CAAC;AACzC,aAAO;AAAA,QACL;AAAA,QACA,SAAS,OAAO,SAAS,QAAQ,IAAI,IAAI;AAAA,QACzC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA;;;AZ7IJ,IAAME,OAAM,CAAC,EAAE;AAOA,SAAR,gBAAiC,UAAU,CAAC,GAAG;AACpD,MAAM,EAAC,SAAS,WAAW,QAAQ,WAAW,eAAe,QAAQ,OAAM,IACzE,SACE,OAAO;AAMX,MAJI,WACF,SAAS,cAAc,OAAO,GAG5B,WAAW;AAEb,QAAI;AAEJ,SAAK,OAAO;AACV,MAAIA,KAAI,KAAK,WAAW,GAAG,KACzB,SAAS,iBAAiB,KAAK,UAAU,GAAG,CAAC;AAAA;AAKnD,MAAI,QAAQ;AACV,QAAM,MAAM,OAAO,QAAQ,GAAG;AAC9B,WAAO,MAAM,KAAK,OAAO,MAAM,GAAG,GAAG,IAAI;AAAA;AAG3C,SAAO,CAAC,MAAM,SAAS;AAErB,UAAM,MAAM,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAC/C,UAAM;AAAA;AAAA,QAA+B;AAAA;AAErC,UACE,CAAC,UACD,EAAE,aAAa,WACf,OAAO,YAAY,SACnB,KAAK,YAAY,UACjB,CAAC,KAAK;AAEN;AAGF,UAAM,OAAO,SAAS,IAAI;AAE1B,UACE,SAAS,MACR,CAAC,QAAQ,CAAC,UACV,QAAQ,aAAa,UAAU,SAAS,IAAI;AAE7C;AAGF,MAAK,MAAM,QAAQ,KAAK,WAAW,SAAS,MAC1C,KAAK,WAAW,YAAY,CAAC,IAG1B,KAAK,WAAW,UAAU,SAAS,IAAI,KAC1C,KAAK,WAAW,UAAU,QAAQ,IAAI;AAIxC,UAAI;AAEJ,UAAI;AACF,iBAAS,OACL,SAAS,UAAU,MAAM,OAAO,MAAM,GAAG,EAAC,OAAM,CAAC,IACjD,SAAS,cAAc,OAAO,MAAM,GAAG,EAAC,QAAQ,OAAM,CAAC;AAAA,MAC7D,SAAS,OAAP;AACA,YAAM;AAAA;AAAA,UAAkC;AAAA;AACxC,SAAI,CAAC,iBAAiB,CAAC,mBAAmB,KAAK,UAAU,OAAO,MAC9D,KAAK,KAAK,WAAW,MAAM,mCAAmC;AAGhE;AAAA,MACF;AAEA,MAAI,CAAC,QAAQ,OAAO,KAAK,YACvB,KAAK,WAAW,UAAU,KAAK,cAAc,OAAO,KAAK,QAAQ,GAG/D,MAAM,QAAQ,OAAO,QAAQ,KAAK,OAAO,SAAS,SAAS,MAC7D,KAAK,WAAW,OAAO;AAAA,IAE3B,CAAC;AAAA,EACH;AACF;AAQA,SAAS,SAAS,MAAM;AACtB,MAAM,YAAY,KAAK,cAAc,KAAK,WAAW,WACjD,QAAQ;AAEZ,MAAK,MAAM,QAAQ,SAAS;AAI5B,WAAO,EAAE,QAAQ,UAAU,UAAQ;AACjC,UAAMC,SAAQ,OAAO,UAAU,KAAK,CAAC;AAErC,UAAIA,WAAU,kBAAkBA,WAAU;AACxC,eAAO;AAGT,UAAIA,OAAM,MAAM,GAAG,CAAC,MAAM;AACxB,eAAOA,OAAM,MAAM,CAAC;AAGtB,UAAIA,OAAM,MAAM,GAAG,CAAC,MAAM;AACxB,eAAOA,OAAM,MAAM,CAAC;AAAA;AAG1B;;;AgB9JA;AAEA,IAAM,aAAa,iBACb,sBAAsB,WAItB,kBAAkB,CAAC,EAAE,UAAU,GAAK,IAAI,CAAC,MAAM,CAAC,QAAQ;AAC1D,MAAM,UAAU,CAAC,GACX,WAAW,oBAAI,IAAI;AACzB,QAAM,KAAK,SAAS,CAAC,MAAM,OAAO,WAAW;AACzC,QAAI,EAAE,MAAM,MAAM,OAAO,IAAI,IAAI;AACjC,QAAI,WAAW,KAAK,GAAG;AACnB;AAEJ,IAAI,CAAC,oBAAoB,KAAK,GAAG,KAAK,YAClC,MAAM,KAAK;AAEf,QAAI,OAAO,SAAS,IAAI,GAAG;AAC3B,IAAK,SACD,OAAO,KAAK,SAAS,QAAQ,IAAI,QAAQ,OAAO,GAAG,OACnD,QAAQ,KAAK;AAAA,MACT,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,QACF,QAAQ;AAAA,UACJ,MAAM;AAAA,UACN,YAAY;AAAA,UACZ,MAAM;AAAA,YACF;AAAA,cACI,MAAM;AAAA,cACN,QAAQ,EAAE,MAAM,WAAW,OAAO,KAAK,KAAK,KAAK,UAAU,GAAG,EAAE;AAAA,cAChE,YAAY;AAAA,gBACR;AAAA,kBACI,MAAM;AAAA,kBACN,OAAO,EAAE,MAAM,cAAc,KAAK;AAAA,gBACtC;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,CAAC,GACD,SAAS,IAAI,KAAK,IAAI;AAE1B,QAAM,cAAc;AAAA,MAChB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAU,CAAC;AAAA,MACX,YAAY;AAAA,QACR,EAAE,MAAM,mBAAmB,MAAM,OAAO,OAAO,IAAI;AAAA,QACnD;AAAA,UACI,MAAM;AAAA,UACN,MAAM;AAAA,UACN,OAAO;AAAA,YACH,MAAM;AAAA,YACN,OAAO;AAAA,YACP,MAAM;AAAA,cACF,QAAQ;AAAA,gBACJ,MAAM;AAAA,gBACN,YAAY;AAAA,gBACZ,UAAU,CAAC;AAAA,gBACX,MAAM,CAAC,EAAE,MAAM,uBAAuB,YAAY,EAAE,MAAM,cAAc,KAAK,EAAE,CAAC;AAAA,cACpF;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,IAAI,SACA,YAAY,WAAW,KAAK,EAAE,MAAM,mBAAmB,MAAM,SAAS,OAAO,MAAM,CAAC,GAExF,OAAO,SAAS,OAAO,OAAO,GAAG,WAAW;AAAA,EAChD,CAAC,GACD,IAAI,SAAS,QAAQ,GAAG,OAAO;AACnC,GACO,4BAAQ;;;AlBxEf,yBAA0B;AAenB,SAAS,qBAAqB,YAAoB;AACxD,aAAO,8BAA2B;AAAA,IACjC,MAAM,YAAAC,QAAK,KAAK,QAAQ,IAAI,GAAG,UAAU;AAAA,IACzC,KAAK,YAAAA,QAAK,KAAK,QAAQ,IAAI,GAAG,YAAAA,QAAK,QAAQ,UAAU,CAAC;AAAA,IACtD,YAAY,cACX,QAAQ,gBAAgB;AAAA,MACvB,GAAI,QAAQ,iBAAiB,CAAC;AAAA,MAC9B;AAAA,IACD,GACA,QAAQ,gBAAgB,CAAC,eAAe,GACjC;AAAA,IAER,gBAAgB,cACf,QAAQ,SAAS;AAAA,MAChB,GAAG,QAAQ;AAAA,MACX,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,IACT,GAEO;AAAA,EAET,CAAC;AACF;AAEA,eAAsB,cAAc,MAAc;AACjD,MAAM,gBAAgB,kBAAkB;AACxC,SAAO,qBAAqB,aAAa;AAC1C;;;AD3CA,oBAAgC,4BAkB7BC,0BAAA;AAhBH,eAAsB,OAAO,EAAE,OAAO,GAAe;AACpD,MAAI,CAAC,OAAO;AACX,UAAM,IAAI,MAAM,gBAAgB;AAGjC,MAAM,EAAE,MAAM,aAAAC,aAAY,IAAI,MAAM,cAAc,OAAO,IAAI;AAC7D,SAAO,EAAE,MAAM,aAAAA,aAAY;AAC5B;AAEe,SAAR,eAAgC;AACtC,MAAM,EAAE,KAAK,QAAI,6BAA6B,GAExC,gBAAY,wBAAQ,UAAM,+BAAgB,IAAI,GAAG,CAAC,IAAI,CAAC;AAE7D,SACC,oDAAC,aACA,8DAAC,eAAD;AAAA;AAAA;AAAA;AAAA,SAAW,KADZ;AAAA;AAAA;AAAA;AAAA,SAEA;AAEF;;;AoBzBA;AAAA;AAAA;AAAA;AAAA;AAIE,IAAAC,2BAAA;AAFa,SAAR,eAAgC;AACtC,SACC,qDAAC,QAAG,wBAAJ;AAAA;AAAA;AAAA;AAAA,SAAY;AAEd;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAEI,IAAAC,2BAAA;AAFW,SAAR,eAAgC;AACrC,SACE,qDAAC,QAAG,wBAAJ;AAAA;AAAA;AAAA;AAAA,SAAY;AAEhB;;;ACJA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA,IAAAC,iBAAqB,6BACrBC,qBAAuB,gCAmBpBC,2BAAA;AAPI,SAAS,OAAO,EAAE,OAAO,MAAM,IAAI,UAAU,QAAQ,GAAgB;AAC3E,MAAM,cAAU,mBAAAC;AAAA,IACf;AAAA,EACD;AAEA,SAAI,MAAM,WAER,qDAAC,OAAE,MAAM,IAAI,WAAW,SACtB;AAAA;AAAA,IACA;AAAA,OAFF;AAAA;AAAA;AAAA;AAAA,SAGA,IAIE,KAEF,qDAAC,uBAAK,IAAQ,WAAW,SACvB;AAAA;AAAA,IACA;AAAA,OAFF;AAAA;AAAA;AAAA;AAAA,SAGA,IAKD,qDAAC,YAAO,WAAW,SAAS,SAC1B;AAAA;AAAA,IACA;AAAA,OAFF;AAAA;AAAA;AAAA;AAAA,SAGA;AAEF;;;AD7BG,IAAAC,2BAAA;AAHH,SAAS,WAAW,EAAE,OAAO,OAAO,aAAa,IAAI,GAAoB;AACxE,SACC,qDAAC,SAAI,WAAU,iHACd;AAAA,yDAAC,QAAG,WAAU,wBAAwB,mBAAtC;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA,IAC5C,qDAAC,SAAI,KAAK,OAAO,KAAK,OAAO,WAAU,mCAAvC;AAAA;AAAA;AAAA;AAAA,WAAuE;AAAA,IACvE,qDAAC,OAAG,yBAAJ;AAAA;AAAA;AAAA;AAAA,WAAgB;AAAA,IAChB;AAAA,MAAC;AAAA;AAAA,QACA,OAAM;AAAA,QACN,IAAI;AAAA,QACJ,UAAQ;AAAA,QACR,MACC;AAAA,UAAC;AAAA;AAAA,YACA,OAAM;AAAA,YACN,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,aAAa;AAAA,YACb,QAAO;AAAA,YACP,WAAU;AAAA,YAEV;AAAA,cAAC;AAAA;AAAA,gBACA,eAAc;AAAA,gBACd,gBAAe;AAAA,gBACf,GAAE;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIA;AAAA;AAAA,UAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaA;AAAA;AAAA,MAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAoBA;AAAA,OAxBD;AAAA;AAAA;AAAA;AAAA,SAyBA;AAEF;AAEe,SAAR,cAA+B;AACrC,SACC,qDAAC,aAAQ,WAAU,mCAClB;AAAA,yDAAC,SAAM,uBAAP;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IACd,qDAAC,SAAI,WAAU,sCACd;AAAA,2DAAC,OAAE,mGAAH;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,qDAAC,SAAI,WAAU,mCACd;AAAA;AAAA,UAAC;AAAA;AAAA,YACA,OAAM;AAAA,YACN,KAAI;AAAA,YACJ,OAAM;AAAA,YACN,aAAY;AAAA;AAAA,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACA,OAAM;AAAA,YACN,KAAI;AAAA,YACJ,OAAM;AAAA,YACN,aAAY;AAAA;AAAA,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,WAZD;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,SAlBD;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,OArBD;AAAA;AAAA;AAAA;AAAA,SAsBA;AAEF;;;AEnEA,IAAAC,iBAAA;AAAA,SAAAA,gBAAA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AACA,IAAAC,iBAA8B;;;ACD9B;AAAA,gBAAe,wBACfC,eAAiB;AAGjB,IAAM,iBAAiB;AAEvB,eAAe,oBACd,eAC6B;AAC7B,MAAM,QAAQ,UAAAC,QAAG,YAAY,aAAa;AAe1C,UAbY,MAAM,QAAQ;AAAA,IACzB,MAAM,IAAI,OAAM,SAAQ;AACvB,UAAM,WAAW,aAAAC,QAAK,KAAK,eAAe,MAAM,WAAW,GACrD,OAAO,UAAAD,QAAG,SAAS,QAAQ;AAEjC,UAAI,UAAAA,QAAG,WAAW,QAAQ,GAAG;AAC5B,YAAM,EAAE,aAAAE,aAAY,IAAI,MAAM,qBAAqB,QAAQ;AAC3D,eAAOA;AAAA;AAER,aAAO;AAAA,IACR,CAAC;AAAA,EACF,GAEW,OAAO,CAAC,SAAkC,QAAQ,IAAI,CAAC;AACnE;AAEA,eAAe,iBAAiB;AAC/B,SAAO,oBAAoB,cAAc;AAC1C;AAEA,eAAsB,mBAAmB;AACxC,MAAM,cAAc,MAAM,eAAe;AAEzC,qBAAY,KAAK,CAAC,GAAG,MACb,EAAE,OAAO,EAAE,OAAO,KAAK,CAC9B,GACM,YAAY,CAAC;AACrB;;;ACtCA;AAGG,IAAAC,2BAAA;AAHI,SAAS,QAAQ;AACvB,SACC,qDAAC,aAAQ,WAAU,yEAClB;AAAA,yDAAC,QAAG,WAAU,2EAA0E,qBAAxF;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACA,KAAI;AAAA,QACJ,KAAI;AAAA,QACJ,WAAU;AAAA;AAAA,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,IACA,qDAAC,OAAE,WAAU,0DAAyD,kYAAtE;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAhBD;AAAA;AAAA;AAAA;AAAA,SAiBA;AAEF;;;ACrBA;;;;;;;;;;;;;;;ACAA;AAAA,IAAAC,qBAAuB,gCAYpBC,2BAAA;AAHI,SAAS,QAAQ,EAAE,OAAO,UAAU,UAAU,GAAiB;AACrE,SACC,qDAAC,aAAQ,eAAW,mBAAAC,SAAW,6BAA6B,SAAS,GACpE;AAAA,yDAAC,QAAG,WAAU,4DACZ,mBADF;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACC;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA,SAKA;AAEF;;;ADEG,IAAAC,2BAAA;AARH,SAAS,eAAe;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAAwB;AACvB,SACC,qDAAC,QAAG,WAAU,wBACb;AAAA,yDAAC,SAAI,KAAK,MAAM,WAAU,eAA1B;AAAA;AAAA;AAAA;AAAA,WAAsC;AAAA,IACtC,qDAAC,SAAI,WAAU,wBACd;AAAA,2DAAC,UAAK,WAAU,kDACd,qBADF;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,qDAAC,UAAK,WAAU,sCAAsC,sBAAtD;AAAA;AAAA;AAAA;AAAA,aAA+D;AAAA,SAJhE;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,qDAAC,SAAI,WAAU,kBACd,+DAAC,UAAK,WAAU,sCAAsC,kBAAtD;AAAA;AAAA;AAAA;AAAA,WAA2D,KAD5D;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAVD;AAAA;AAAA;AAAA;AAAA,SAWA;AAEF;AAEO,SAAS,aAAa;AAC5B,SACC,qDAAC,WAAQ,OAAM,cAAa,WAAU,0BACrC;AAAA,yDAAC,OAAE,WAAU,kEAAiE,kWAA9E;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,qDAAC,QAAG,WAAU,yDACbxBD;AAAA;AAAA;AAAA;AAAA,WAyBA;AAAA,OAjCD;AAAA;AAAA;AAAA;AAAA,SAuDA;AAEF;;;AE7FA;AAGG,IAAAC,2BAAA;AAHI,SAAS,OAAO;AACtB,SACC,qDAAC,aAAQ,WAAU,+IAClB;AAAA,yDAAC,QAAG,WAAU,sGAAqG,sGAAnH;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,qDAAC,OAAE,WAAU,gFAA+E,kUAA5F;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAXD;AAAA;AAAA;AAAA;AAAA,SAYA;AAEF;;;AChBA;AAAA,IAAAC,iBAAqB;;;ACArB;AAAO,SAAS,WAAW,YAAoC;AAC9D,MAAM,OACL,OAAO,cAAe,YAAY,OAAO,cAAe,WACrD,IAAI,KAAK,UAAU,IACnB;AAEJ,SAAO,IAAI,KAAK,eAAe,QAAW,EAAE,WAAW,SAAS,CAAC,EAAE;AAAA,IAClE;AAAA,EACD;AACD;;;ADKG,IAAAC,2BAAA;AATI,SAAS,SAAS;AAAA,EACxB;AAAA,EACA;AACD,GAGG;AACF,SACC,0FACC;AAAA,yDAAC,UAAM,qBAAW,IAAI,KAAtB;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA,IACvB,YACA,0FACE;AAAA;AAAA,MAAI;AAAA,MACH,qDAAC,UAAM;AAAA;AAAA,QAAS;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,SAF5B;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OANF;AAAA;AAAA;AAAA;AAAA,SAQA;AAEF;AAMO,SAAS,cAAc,EAAE,cAAc,GAAuB;AACpE,SACC,qDAAC,aAAQ,WAAU,wFAClB;AAAA;AAAA,MAAC;AAAA;AAAA,QACA,IAAI,SAAS,cAAc;AAAA,QAC3B,WAAU;AAAA,QAEV,+DAAC,QAAG,WAAU,4DACZ,wBAAc,SADhB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA;AAAA,MAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA;AAAA,IACC,cAAc,aACd;AAAA,MAAC;AAAA;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,WAAU;AAAA;AAAA,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAGA;AAAA,IAED,qDAAC,OAAE,WAAU,+FACX,wBAAc,WADhB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,qDAAC,OAAE,WAAU,8CACZ,+DAAC,YAAS,MAAM,cAAc,MAAM,UAAU,cAAc,YAA5D;AAAA;AAAA;AAAA;AAAA,WAAsE,KADvE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,qDAAC,OAAE,WAAU,uBACZ;AAAA,MAAC;AAAA;AAAA,QACA,OAAM;AAAA,QACN,MACC;AAAA,UAAC;AAAA;AAAA,YACA,OAAM;AAAA,YACN,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,aAAY;AAAA,YACZ,QAAO;AAAA,YACP,WAAU;AAAA,YAEV;AAAA,cAAC;AAAA;AAAA,gBACA,eAAc;AAAA,gBACd,gBAAe;AAAA,gBACf,GAAE;AAAA;AAAA,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIA;AAAA;AAAA,UAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAaA;AAAA,QAED,IAAI,SAAS,cAAc;AAAA;AAAA,MAlB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAmBA,KApBD;AAAA;AAAA;AAAA;AAAA,WAqBA;AAAA,OA1CD;AAAA;AAAA;AAAA;AAAA,SA2CA;AAEF;;;AE5EA;AAGG,IAAAC,2BAAA;AAHI,SAAS,WAAW;AAC1B,SACC,qDAAC,aAAQ,WAAU,yEAClB;AAAA,yDAAC,QAAG,WAAU,2EAA0E,wBAAxF;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACA,KAAI;AAAA,QACJ,KAAI;AAAA,QACJ,WAAU;AAAA;AAAA,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA;AAAA,IACA,qDAAC,OAAE,WAAU,kEAAiE,gUAA9E;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAfD;AAAA;AAAA;AAAA;AAAA,SAgBA;AAEF;;;ARWI,IAAAC,2BAAA,kCApBS,OAAwB,MAC7B;AAAA,EACN,EAAE,OAAO,oBAAoB;AAAA,EAC7B;AAAA,IACC,MAAM;AAAA,IACN,SAAS;AAAA,EACV;AACD;AAGD,eAAsBC,UAAS;AAE9B,SAAO,EAAE,eADa,MAAM,iBAAiB,EACtB;AACxB;AAEe,SAAR,QAAyB;AAC/B,MAAM,EAAE,cAAc,QAAI,8BAA6B;AAEvD,SACE,qDAAC,SAAI,WAAU,0BACd;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAM;AAAA,IACL,iBAAiB,qDAAC,iBAAc,iBAAf;AAAA;AAAA;AAAA;AAAA,WAA6C;AAAA,IAC/D,qDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,IACZ,qDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,WAAO;AAAA,IACP,qDAAC,cAAD;AAAA;AAAA;AAAA;AAAA,WAAU;AAAA,OALX;AAAA;AAAA;AAAA;AAAA,SAOA;AAEH;;;ASvCA;AAAA;AAAA;AAAA;AAAA;;;;;;AAKE,IAAAC,2BAAA;AAFF,SAAS,SAAS,EAAE,SAAS,GAAkC;AAC9D,SACC,qDAAC,QAAG,WAAU,iDACZ,YADF;AAAA;AAAA;AAAA;AAAA,SAEA;AAEF;AAEe,SAAR,YAA6B;AACnC,SACC,qDAAC,aAAQ,WAAU,yCAClB;AAAA,yDAAC,SAAI,KAAK,YAAI,KAAI,MAAK,WAAU,4BAAjC;AAAA;AAAA;AAAA;AAAA,WAA0D;AAAA,IAC1D,qDAAC,SAAM,qCAAP;AAAA;AAAA;AAAA;AAAA,WAA4B;AAAA,IAC5B,qDAAC,SAAI,WAAU,sCACd;AAAA,2DAAC,OAAE;AAAA;AAAA,QAEqC;AAAA,QACvC,qDAAC,OAAE,MAAK,oCAAmC,uBAA3C;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,QAAI;AAAA,QAAQ;AAAA,QAC9D,qDAAC,OAAE,MAAK,8BAA6B,qBAArC;AAAA;AAAA;AAAA;AAAA,eAA0C;AAAA,QAAI;AAAA,WAJ/C;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,qDAAC,YAAS,0BAAV;AAAA;AAAA;AAAA;AAAA,aAAoB;AAAA,MACpB,qDAAC,OAAE;AAAA;AAAA,QACwB,qDAAC,OAAE,MAAK,sBAAqB,uBAA7B;AAAA;AAAA;AAAA;AAAA,eAAoC;AAAA,QAAI;AAAA,WADnE;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,qDAAC,YAAS,4BAAV;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,qDAAC,OAAE,0eAAH;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,qDAAC,YAAS,8BAAV;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,MACxB,qDAAC,OAAE,4YAAH;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,qDAAC,YAAS,kCAAV;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,MAC5B,qDAAC,OAAE,kLAAH;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,qDAAC,OACA,+DAAC,OAAE,MAAK,yCACP;AAAA,QAAC;AAAA;AAAA,UACA,KAAI;AAAA,UACJ,KAAI;AAAA;AAAA,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGA,KAJD;AAAA;AAAA;AAAA;AAAA,aAKA,KAND;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,qDAAC,OAAE;AAAA;AAAA,QACwC;AAAA,QAC1C,qDAAC,OAAE,MAAK,mDAAkD,wBAA1D;AAAA;AAAA;AAAA;AAAA,eAAkE;AAAA,QAAK;AAAA,QAAI;AAAA,WAF5E;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,qDAAC,OAAE,iMAAH;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SAtDD;AAAA;AAAA;AAAA;AAAA,WAuDA;AAAA,OA1DD;AAAA;AAAA;AAAA;AAAA,SA2DA;AAEF;;;AC1EA;AAAA;AAAA;AAAA,gBAAAC;AAAA;AAAA;AAAA,IAAAC,eAAqC,4BACrCC,iBAAuB;AAcpB,IAAAC,2BAAA;AAXI,SAASC,QAAO,EAAE,OAAO,GAAe;AAC9C,SAAK,OAAO,OAIL,WAHC,uBAAS,GAAG;AAIrB;AAEe,SAAR,aAA8B;AACpC,SACC,qDAAC,QACA,+DAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,SAAQ,KADT;AAAA;AAAA;AAAA;AAAA,SAEA;AAEF;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAEI,IAAAC,2BAAA;AAFW,SAAR,WAA4B;AACjC,SACE,qDAAC,QAAG,oBAAJ;AAAA;AAAA;AAAA;AAAA,SAAQ;AAEZ;;;ACJA;AAAA,IAAO,0BAAQ,EAAC,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,CAAC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,oCAAmC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,SAAQ,OAAQ,QAAU,eAAgB,QAAU,QAAS,mCAAkC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,mBAAkB,EAAC,IAAK,mBAAkB,UAAW,QAAO,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,sCAAqC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,eAAc,EAAC,IAAK,eAAc,UAAW,QAAO,MAAO,QAAO,OAAQ,QAAU,eAAgB,QAAU,QAAS,kCAAiC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,qBAAoB,EAAC,IAAK,qBAAoB,UAAW,eAAc,MAAO,SAAQ,OAAQ,QAAU,eAAgB,QAAU,QAAS,wCAAuC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,kBAAiB,EAAC,IAAK,kBAAiB,UAAW,QAAO,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,qCAAoC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,mBAAkB,EAAC,IAAK,mBAAkB,UAAW,QAAO,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,sCAAqC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,GAAE,eAAc,EAAC,IAAK,eAAc,UAAW,QAAO,MAAO,QAAO,OAAQ,QAAU,eAAgB,QAAU,QAAS,kCAAiC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,kBAAmB,IAAM,kBAAmB,GAAK,EAAC,GAAE,SAAU,YAAW,KAAM,EAAC,SAAU,oCAAmC,WAAY,cAAa,GAAE,KAAM,8BAA6B;;;AhDYt7F,IAAM,uBAAuB,gBACvB,SAAS,EAAC,QAAS,IAAK,kBAAmB,IAAM,mBAAoB,IAAM,kBAAmB,IAAK,YAAa,IAAK,SAAU,IAAK,wBAAyB,IAAK,oBAAqB,GAAI,GAC3L,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,MAAM,EAAC,MAAO,KAAI,GAClB,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,qBAAqB;AAAA,IACjB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,mBAAmB;AAAA,IACf,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,kBAAkB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQC;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,eAAe;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,eAAe;AAAA,IACX,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["formatter", "module", "value", "module", "own", "matter", "ok", "bufferIndex", "matter", "fence", "close", "pick", "value", "require_dist", "bundleMDX", "nodeInterop", "remarkFrontmatter", "matter", "value", "loader", "getMDXComponent", "nodeInterop", "require_client", "module", "isbot", "import_react", "import_react", "import_jsx_dev_runtime", "classNames", "import_jsx_dev_runtime", "import_react", "import_react", "import_classnames", "import_jsx_dev_runtime", "classNames", "import_react", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "language", "value", "high", "arduino", "bash", "c", "cpp", "csharp", "css", "diff", "go", "graphql", "ini", "java", "javascript", "json", "kotlin", "less", "lua", "makefile", "markdown", "objectivec", "perl", "php", "phpTemplate", "plaintext", "python", "pythonRepl", "r", "ruby", "rust", "scss", "shell", "sql", "swift", "typescript", "vbnet", "wasm", "xml", "yaml", "index", "anyFactory", "castFactory", "index", "is", "value", "is", "value", "visit", "own", "value", "path", "import_jsx_dev_runtime", "frontmatter", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_classnames", "import_jsx_dev_runtime", "classnames", "import_jsx_dev_runtime", "route_exports", "loader", "import_react", "import_path", "fs", "path", "frontmatter", "import_jsx_dev_runtime", "import_classnames", "import_jsx_dev_runtime", "classNames", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "route_exports"]
}
