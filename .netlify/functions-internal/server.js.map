{
  "version": 3,
  "sources": ["server-assets-manifest:@remix-run/dev/assets-manifest", "../../node_modules/@remix-run/css-bundle/dist/server.js", "../../node_modules/@babel/runtime/helpers/interopRequireDefault.js", "../../node_modules/remark-mdx-frontmatter/dist/index.js", "../../node_modules/mdx-bundler/dist/dirname-messed-up.cjs", "../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../../node_modules/micromark-util-character/index.js", "../../node_modules/fault/index.js", "../../node_modules/micromark-extension-frontmatter/matters.js", "../../node_modules/micromark-extension-frontmatter/lib/syntax.js", "../../node_modules/micromark-extension-frontmatter/index.js", "../../node_modules/mdast-util-frontmatter/lib/index.js", "../../node_modules/mdast-util-frontmatter/index.js", "../../node_modules/remark-frontmatter/index.js", "../../node_modules/mdx-bundler/dist/index.js", "../../node_modules/mdx-bundler/dist/client.js", "../../node_modules/mdx-bundler/client/index.js", "<stdin>", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/routes/_pages.categories.tsx", "../../app/routes/_pages.about.tsx", "../../app/routes/blog.$slug.tsx", "../../app/util/mdx.server.ts", "../../node_modules/unist-util-is/lib/index.js", "../../node_modules/unist-util-visit-parents/lib/color.js", "../../node_modules/unist-util-visit-parents/lib/index.js", "../../node_modules/unist-util-visit/lib/index.js", "../../node_modules/remark-mdx-images/index.js", "../../app/routes/_index.tsx", "../../app/routes/_pages.tsx", "../../app/routes/blog.tsx", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export default {'entry':{'module':'/build/entry.client-DULRKKFN.js','imports':['/build/_shared/chunk-ST7TJEML.js','/build/_shared/chunk-2G7PDDD5.js','/build/_shared/chunk-NLQNPAAV.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-YAPOH4AB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-3UTEROWS.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_pages':{'id':'routes/_pages','parentId':'root','path':undefined,'index':undefined,'caseSensitive':undefined,'module':'/build/routes/_pages-53VBVETB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_pages.about':{'id':'routes/_pages.about','parentId':'routes/_pages','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_pages.about-HQUYZIRT.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_pages.categories':{'id':'routes/_pages.categories','parentId':'routes/_pages','path':'categories','index':undefined,'caseSensitive':undefined,'module':'/build/routes/_pages.categories-UKFBKO23.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog':{'id':'routes/blog','parentId':'root','path':'blog','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog-5JWVSH64.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/blog.$slug':{'id':'routes/blog.$slug','parentId':'routes/blog','path':':slug','index':undefined,'caseSensitive':undefined,'module':'/build/routes/blog.$slug-YWY45EVO.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'version':'e44efaab','hmr':undefined,'url':'/build/manifest-E44EFAAB.js'};", "/**\n * @remix-run/css-bundle v1.16.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar assetsManifest = require('@remix-run/dev/assets-manifest');\n\nfunction _interopDefaultLegacy(e) {return e && typeof e === 'object' && 'default' in e ? e : { 'default': e };}\n\nvar assetsManifest__default = /*#__PURE__*/_interopDefaultLegacy(assetsManifest);\n\nconst cssBundleHref = assetsManifest__default[\"default\"].cssBundleHref;\n\nexports.cssBundleHref = cssBundleHref;", "function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remarkMdxFrontmatter = void 0;\nconst estree_util_is_identifier_name_1 = require(\"estree-util-is-identifier-name\");\nconst estree_util_value_to_estree_1 = require(\"estree-util-value-to-estree\");\nconst js_yaml_1 = require(\"js-yaml\");\nconst toml_1 = require(\"toml\");\n/**\n * A remark plugin to expose frontmatter data as named exports.\n *\n * @param options - Optional options to configure the output.\n * @returns A unified transformer.\n */\nconst remarkMdxFrontmatter = ({ name } = {}) => (ast) => {\n    const mdast = ast;\n    const imports = [];\n    if (name && !(0, estree_util_is_identifier_name_1.name)(name)) {\n        throw new Error(`If name is specified, this should be a valid identifier name, got: ${JSON.stringify(name)}`);\n    }\n    for (const node of mdast.children) {\n        let data;\n        const { value } = node;\n        if (node.type === 'yaml') {\n            data = (0, js_yaml_1.load)(value);\n            // @ts-expect-error A custom node type may be registered for TOML frontmatter data.\n        }\n        else if (node.type === 'toml') {\n            data = (0, toml_1.parse)(value);\n        }\n        if (data == null) {\n            continue;\n        }\n        if (!name && typeof data !== 'object') {\n            throw new Error(`Expected frontmatter data to be an object, got:\\n${value}`);\n        }\n        imports.push({\n            type: 'mdxjsEsm',\n            value: '',\n            data: {\n                estree: {\n                    type: 'Program',\n                    sourceType: 'module',\n                    body: [\n                        {\n                            type: 'ExportNamedDeclaration',\n                            source: null,\n                            specifiers: [],\n                            declaration: {\n                                type: 'VariableDeclaration',\n                                kind: 'const',\n                                declarations: Object.entries(name ? { [name]: data } : data).map(([identifier, val]) => {\n                                    if (!(0, estree_util_is_identifier_name_1.name)(identifier)) {\n                                        throw new Error(`Frontmatter keys should be valid identifiers, got: ${JSON.stringify(identifier)}`);\n                                    }\n                                    return {\n                                        type: 'VariableDeclarator',\n                                        id: { type: 'Identifier', name: identifier },\n                                        init: (0, estree_util_value_to_estree_1.valueToEstree)(val),\n                                    };\n                                }),\n                            },\n                        },\n                    ],\n                },\n            },\n        });\n    }\n    mdast.children.unshift(...imports);\n};\nexports.remarkMdxFrontmatter = remarkMdxFrontmatter;\n", "\"use strict\";\n\n// __dirname isn't supported in ESM files\n// we could use import.meta, but that may not be supported by whatever bundler\n// folks may be using, so we'll just go with this...\nmodule.exports = !__dirname.includes('mdx-bundler');", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "// @ts-expect-error\nimport formatter from 'format'\n\nexport const fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n", "/**\n * @typedef {'toml' | 'yaml'} Preset\n *   Known name of a frontmatter style.\n *\n * @typedef Info\n *   Sequence.\n *\n *   Depending on how this structure is used, it reflects a marker or a fence.\n * @property {string} open\n *   Opening.\n * @property {string} close\n *   Closing.\n *\n * @typedef MatterProps\n *   Fields describing a kind of matter.\n * @property {string} type\n *   Node type to tokenize as.\n * @property {boolean | null | undefined} [anywhere=false]\n *   Whether matter can be found anywhere in the document, normally, only matter\n *   at the start of the document is recognized.\n *\n *   > \uD83D\uDC49 **Note**: using this is a terrible idea.\n *   > It\u2019s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n * @typedef MarkerProps\n *   Marker configuration.\n * @property {Info | string} marker\n *   Character repeated 3 times, used as complete fences.\n *\n *   For example the character `'-'` will result in `'---'` being used as the\n *   fence\n *   Pass `open` and `close` to specify different characters for opening and\n *   closing fences.\n * @property {never} [fence]\n *   If `marker` is set, `fence` must not be set.\n *\n * @typedef FenceProps\n *   Fence configuration.\n * @property {Info | string} fence\n *   Complete fences.\n *\n *   This can be used when fences contain different characters or lengths\n *   other than 3.\n *   Pass `open` and `close` to interface to specify different characters for opening and\n *   closing fences.\n * @property {never} [marker]\n *   If `fence` is set, `marker` must not be set.\n *\n * @typedef {(MatterProps & FenceProps) | (MatterProps & MarkerProps)} Matter\n *   Fields describing a kind of matter.\n *\n *   > \uD83D\uDC49 **Note**: using `anywhere` is a terrible idea.\n *   > It\u2019s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n *   > \uD83D\uDC49 **Note**: `marker` and `fence` are mutually exclusive.\n *   > If `marker` is set, `fence` must not be set, and vice versa.\n *\n * @typedef {Matter | Preset | Array<Matter | Preset>} Options\n *   Configuration.\n */\n\nimport {fault} from 'fault'\nconst own = {}.hasOwnProperty\nconst markers = {\n  yaml: '-',\n  toml: '+'\n}\n\n/**\n * Simplify one or more options.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration.\n * @returns {Array<Matter>}\n *   List of matters.\n */\nexport function matters(options) {\n  /** @type {Array<Matter>} */\n  const result = []\n  let index = -1\n\n  /** @type {Array<Matter | Preset>} */\n  const presetsOrMatters = Array.isArray(options)\n    ? options\n    : options\n    ? [options]\n    : ['yaml']\n  while (++index < presetsOrMatters.length) {\n    result[index] = matter(presetsOrMatters[index])\n  }\n  return result\n}\n\n/**\n * Simplify an option.\n *\n * @param {Matter | Preset} option\n *   Configuration.\n * @returns {Matter}\n *   Matters.\n */\nfunction matter(option) {\n  let result = option\n  if (typeof result === 'string') {\n    if (!own.call(markers, result)) {\n      throw fault('Missing matter definition for `%s`', result)\n    }\n    result = {\n      type: result,\n      marker: markers[result]\n    }\n  } else if (typeof result !== 'object') {\n    throw fault('Expected matter to be an object, not `%j`', result)\n  }\n  if (!own.call(result, 'type')) {\n    throw fault('Missing `type` in matter `%j`', result)\n  }\n  if (!own.call(result, 'fence') && !own.call(result, 'marker')) {\n    throw fault('Missing `marker` or `fence` in matter `%j`', result)\n  }\n  return result\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef {import('../matters.js').Info} Info\n * @typedef {import('../matters.js').Matter} Matter\n * @typedef {import('../matters.js').Options} Options\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {matters} from '../matters.js'\n\n/**\n * Create an extension for `micromark` to enable frontmatter syntax.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable frontmatter syntax.\n */\nexport function frontmatter(options) {\n  const listOfMatters = matters(options)\n  /** @type {ConstructRecord} */\n  const flow = {}\n  let index = -1\n  while (++index < listOfMatters.length) {\n    const matter = listOfMatters[index]\n    const code = fence(matter, 'open').charCodeAt(0)\n    const construct = createConstruct(matter)\n    const existing = flow[code]\n    if (Array.isArray(existing)) {\n      existing.push(construct)\n    } else {\n      // Never a single object, always an array.\n      flow[code] = [construct]\n    }\n  }\n  return {\n    flow\n  }\n}\n\n/**\n * @param {Matter} matter\n * @returns {Construct}\n */\nfunction createConstruct(matter) {\n  const anywhere = matter.anywhere\n  const frontmatterType = matter.type\n  const fenceType = frontmatterType + 'Fence'\n  const sequenceType = fenceType + 'Sequence'\n  const valueType = frontmatterType + 'Value'\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n\n  /**\n   * Fence to look for.\n   *\n   * @type {string}\n   */\n  let buffer\n  let bufferIndex = 0\n  return {\n    tokenize: tokenizeFrontmatter,\n    concrete: true\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFrontmatter(effects, ok, nok) {\n    const self = this\n    return start\n\n    /**\n     * Start of frontmatter.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      const position = self.now()\n      if (\n        // Indent not allowed.\n        position.column === 1 &&\n        // Normally, only allowed in first line.\n        (position.line === 1 || anywhere)\n      ) {\n        buffer = fence(matter, 'open')\n        bufferIndex = 0\n        if (code === buffer.charCodeAt(bufferIndex)) {\n          effects.enter(frontmatterType)\n          effects.enter(fenceType)\n          effects.enter(sequenceType)\n          return openSequence(code)\n        }\n      }\n      return nok(code)\n    }\n\n    /**\n     * In open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n        if (markdownSpace(code)) {\n          effects.enter('whitespace')\n          return openSequenceWhitespace(code)\n        }\n        return openAfter(code)\n      }\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return openSequence\n      }\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after open sequence.\n     *\n     * ```markdown\n     * > | ---\u2420\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return openSequenceWhitespace\n      }\n      effects.exit('whitespace')\n      return openAfter(code)\n    }\n\n    /**\n     * After open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openAfter(code) {\n      if (markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        // Get ready for closing fence.\n        buffer = fence(matter, 'close')\n        bufferIndex = 0\n        return effects.attempt(closingFenceConstruct, after, contentStart)\n      }\n\n      // EOF is not okay.\n      return nok(code)\n    }\n\n    /**\n     * Start of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentStart(code) {\n      if (code === null || markdownLineEnding(code)) {\n        return contentEnd(code)\n      }\n      effects.enter(valueType)\n      return contentInside(code)\n    }\n\n    /**\n     * In content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentInside(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(valueType)\n        return contentEnd(code)\n      }\n      effects.consume(code)\n      return contentInside\n    }\n\n    /**\n     * End of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *                   ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentEnd(code) {\n      // Require a closing fence.\n      if (code === null) {\n        return nok(code)\n      }\n\n      // Can only be an eol.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(closingFenceConstruct, after, contentStart)\n    }\n\n    /**\n     * After frontmatter.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      // `code` must be eol/eof.\n      effects.exit(frontmatterType)\n      return ok(code)\n    }\n  }\n\n  /** @type {Tokenizer} */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let bufferIndex = 0\n    return closeStart\n\n    /**\n     * Start of close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeStart(code) {\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.enter(fenceType)\n        effects.enter(sequenceType)\n        return closeSequence(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n        if (markdownSpace(code)) {\n          effects.enter('whitespace')\n          return closeSequenceWhitespace(code)\n        }\n        return closeAfter(code)\n      }\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return closeSequence\n      }\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after close sequence.\n     *\n     * ```markdown\n     * > | ---\n     *   | title: \"Venus\"\n     *   | ---\u2420\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return closeSequenceWhitespace\n      }\n      effects.exit('whitespace')\n      return closeAfter(code)\n    }\n\n    /**\n     * After close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @param {Matter} matter\n * @param {'open' | 'close'} prop\n * @returns {string}\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They\u2019re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * @param {Info | string} schema\n * @param {'open' | 'close'} prop\n * @returns {string}\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n", "/**\n * @typedef {import('./matters.js').Info} Info\n * @typedef {import('./matters.js').Matter} Matter\n * @typedef {import('./matters.js').Options} Options\n * @typedef {import('./matters.js').Preset} Preset\n */\n\nexport {frontmatter} from './lib/syntax.js'\nexport {frontmatterHtml} from './lib/html.js'\n", "/**\n * @typedef {import('mdast').Literal} Literal\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n * @typedef {import('micromark-extension-frontmatter/matters.js').Matter} Matter\n * @typedef {import('micromark-extension-frontmatter/matters.js').Info} Info\n */\n\nimport {matters} from 'micromark-extension-frontmatter/matters.js'\n\n/**\n * Create an extension for `mdast-util-from-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function frontmatterFromMarkdown(options) {\n  // @ts-expect-error: `micromark-extension-frontmatter` should fix types to\n  // accept `null` as options.\n  const settings = matters(options)\n  /** @type {FromMarkdownExtension['enter']} */\n  const enter = {}\n  /** @type {FromMarkdownExtension['exit']} */\n  const exit = {}\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n    enter[matter.type] = opener(matter)\n    exit[matter.type] = close\n    exit[matter.type + 'Value'] = value\n  }\n\n  return {enter, exit}\n}\n\n/**\n * @param {Matter} matter\n * @returns {FromMarkdownHandle} enter\n */\nfunction opener(matter) {\n  return open\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function open(token) {\n    // @ts-expect-error: custom.\n    this.enter({type: matter.type, value: ''}, token)\n    this.buffer()\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction close(token) {\n  const data = this.resume()\n  const node = /** @type {Literal} */ (this.exit(token))\n  // Remove the initial and final eol.\n  node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction value(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function frontmatterToMarkdown(options) {\n  // To do: use an extension object with `satisfies` later.\n  /** @type {ToMarkdownExtension['unsafe']} */\n  const unsafe = []\n  /** @type {ToMarkdownExtension['handlers']} */\n  const handlers = {}\n  // @ts-expect-error: `micromark-extension-frontmatter` should fix types to\n  // accept `null` as options.\n  const settings = matters(options)\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n\n    // @ts-expect-error: this can add custom frontmatter nodes.\n    // Typing those is the responsibility of the end user.\n    handlers[matter.type] = handler(matter)\n\n    // To do: idea: perhaps make this smarter, with an `after` of the second char?\n    unsafe.push({atBreak: true, character: fence(matter, 'open').charAt(0)})\n  }\n\n  return {unsafe, handlers}\n}\n\n/**\n * Create a handle that can serialize a frontmatter node as markdown.\n *\n * @param {Matter} matter\n *   Structure.\n * @returns {(node: Literal) => string} enter\n *   Handler.\n */\nfunction handler(matter) {\n  const open = fence(matter, 'open')\n  const close = fence(matter, 'close')\n\n  return handle\n\n  /**\n   * Serialize a frontmatter node as markdown.\n   *\n   * @param {Literal} node\n   *   Node to serialize.\n   * @returns {string}\n   *   Serialized node.\n   */\n  function handle(node) {\n    return open + (node.value ? '\\n' + node.value : '') + '\\n' + close\n  }\n}\n\n/**\n * Get an `open` or `close` fence.\n *\n * @param {Matter} matter\n *   Structure.\n * @param {'open' | 'close'} prop\n *   Field to get.\n * @returns {string}\n *   Fence.\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They\u2019re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * Take `open` or `close` fields when schema is an info object, or use the\n * given value when it is a string.\n *\n * @param {Info | string} schema\n *   Info object or value.\n * @param {'open' | 'close'} prop\n *   Field to get.\n * @returns {string}\n *   Thing to use for the opening or closing.\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Matter} Matter\n * @typedef {import('./lib/index.js').Info} Info\n */\n\nexport {frontmatterFromMarkdown, frontmatterToMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\nimport {frontmatter} from 'micromark-extension-frontmatter'\nimport {\n  frontmatterFromMarkdown,\n  frontmatterToMarkdown\n} from 'mdast-util-frontmatter'\n\n/**\n * Plugin to add support for frontmatter.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkFrontmatter(options = 'yaml') {\n  const data = this.data()\n\n  add('micromarkExtensions', frontmatter(options))\n  add('fromMarkdownExtensions', frontmatterFromMarkdown(options))\n  add('toMarkdownExtensions', frontmatterToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n", "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bundleMDX = bundleMDX;\nvar _fs = _interopRequireDefault(require(\"fs\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _string_decoder = require(\"string_decoder\");\nvar _remarkMdxFrontmatter = require(\"remark-mdx-frontmatter\");\nvar _grayMatter = _interopRequireDefault(require(\"gray-matter\"));\nvar esbuild = _interopRequireWildcard(require(\"esbuild\"));\nvar _nodeResolve = require(\"@esbuild-plugins/node-resolve\");\nvar _esbuildPluginGlobalExternals = require(\"@fal-works/esbuild-plugin-global-externals\");\nvar _uuid = require(\"uuid\");\nvar _dirnameMessedUp = _interopRequireDefault(require(\"./dirname-messed-up.cjs\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nconst {\n  readFile,\n  unlink\n} = _fs.default.promises;\n\n/**\n * @template {{[key: string]: any}} Frontmatter\n * @param {import('./types').BundleMDX<Frontmatter>} options\n * @returns\n */\nasync function bundleMDX({\n  file,\n  source,\n  files = {},\n  mdxOptions = options => options,\n  esbuildOptions = options => options,\n  globals = {},\n  cwd = _path.default.join(process.cwd(), `__mdx_bundler_fake_dir__`),\n  grayMatterOptions = options => options,\n  bundleDirectory,\n  bundlePath\n}) {\n  /* c8 ignore start */\n  if (_dirnameMessedUp.default && !process.env.ESBUILD_BINARY_PATH) {\n    console.warn(`mdx-bundler warning: esbuild maybe unable to find its binary, if your build fails you'll need to set ESBUILD_BINARY_PATH. Learn more: https://github.com/kentcdodds/mdx-bundler/blob/main/README.md#nextjs-esbuild-enoent`);\n  }\n  /* c8 ignore stop */\n\n  // @mdx-js/esbuild is a native ESM, and we're running in a CJS context. This is the\n  // only way to import ESM within CJS\n  const [{\n    default: mdxESBuild\n  }, {\n    default: remarkFrontmatter\n  }] = await Promise.all([import('@mdx-js/esbuild'), import('remark-frontmatter')]);\n  let /** @type string */code, /** @type string */entryPath, /** @type Omit<grayMatter.GrayMatterFile<string>, \"data\"> & {data: Frontmatter} */matter;\n\n  /** @type Record<string, string> */\n  const absoluteFiles = {};\n  const isWriting = typeof bundleDirectory === 'string';\n  if (typeof bundleDirectory !== typeof bundlePath) {\n    throw new Error('When using `bundleDirectory` or `bundlePath` the other must be set.');\n  }\n\n  /** @type {(vfile: unknown) => vfile is import('vfile').VFile} */\n  function isVFile(vfile) {\n    return typeof vfile === 'object' && vfile !== null && 'value' in vfile;\n  }\n  if (typeof source === 'string') {\n    // The user has supplied MDX source.\n    /** @type any */ // Slight type hack to get the graymatter front matter typed correctly.\n    const gMatter = (0, _grayMatter.default)(source, grayMatterOptions({}));\n    matter = gMatter;\n    entryPath = _path.default.join(cwd, `./_mdx_bundler_entry_point-${(0, _uuid.v4)()}.mdx`);\n    absoluteFiles[entryPath] = source;\n  } else if (isVFile(source)) {\n    const value = String(source.value);\n    /** @type any */ // Slight type hack to get the graymatter front matter typed correctly.\n    const gMatter = (0, _grayMatter.default)(value, grayMatterOptions({}));\n    matter = gMatter;\n    entryPath = source.path ? _path.default.isAbsolute(source.path) ? source.path : _path.default.join(source.cwd, source.path) : _path.default.join(cwd, `./_mdx_bundler_entry_point-${(0, _uuid.v4)()}.mdx`);\n    absoluteFiles[entryPath] = value;\n  } else if (typeof file === 'string') {\n    // The user has supplied a file.\n    /** @type any */ // Slight type hack to get the graymatter front matter typed correctly.\n    const gMatter = _grayMatter.default.read(file, grayMatterOptions({}));\n    matter = gMatter;\n    entryPath = file;\n    /* c8 ignore start */\n  } else {\n    // The user supplied neither file or source.\n    // The typings should prevent reaching this point.\n    // It is ignored from coverage as the tests wouldn't run in a way that can get here.\n    throw new Error('`source` or `file` must be defined');\n  }\n  /* c8 ignore end*/\n\n  for (const [filepath, fileCode] of Object.entries(files)) {\n    absoluteFiles[_path.default.join(cwd, filepath)] = fileCode;\n  }\n\n  /** @type import('esbuild').Plugin */\n  const inMemoryPlugin = {\n    name: 'inMemory',\n    setup(build) {\n      build.onResolve({\n        filter: /.*/\n      }, ({\n        path: filePath,\n        importer\n      }) => {\n        if (filePath === entryPath) {\n          return {\n            path: filePath,\n            pluginData: {\n              inMemory: true,\n              contents: absoluteFiles[filePath]\n            }\n          };\n        }\n        const modulePath = _path.default.resolve(_path.default.dirname(importer), filePath);\n        if (modulePath in absoluteFiles) {\n          return {\n            path: modulePath,\n            pluginData: {\n              inMemory: true,\n              contents: absoluteFiles[modulePath]\n            }\n          };\n        }\n        for (const ext of ['.js', '.ts', '.jsx', '.tsx', '.json', '.mdx']) {\n          const fullModulePath = `${modulePath}${ext}`;\n          if (fullModulePath in absoluteFiles) {\n            return {\n              path: fullModulePath,\n              pluginData: {\n                inMemory: true,\n                contents: absoluteFiles[fullModulePath]\n              }\n            };\n          }\n        }\n\n        // Return an empty object so that esbuild will handle resolving the file itself.\n        return {};\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async ({\n        path: filePath,\n        pluginData\n      }) => {\n        if (pluginData === undefined || !pluginData.inMemory) {\n          // Return an empty object so that esbuild will load & parse the file contents itself.\n          return null;\n        }\n\n        // the || .js allows people to exclude a file extension\n        const fileType = (_path.default.extname(filePath) || '.jsx').slice(1);\n        const contents = absoluteFiles[filePath];\n        if (fileType === 'mdx') return null;\n\n        /** @type import('esbuild').Loader */\n        let loader;\n        if (build.initialOptions.loader && build.initialOptions.loader[`.${fileType}`]) {\n          loader = build.initialOptions.loader[`.${fileType}`];\n        } else {\n          loader = /** @type import('esbuild').Loader */fileType;\n        }\n        return {\n          contents,\n          loader\n        };\n      });\n    }\n  };\n  const buildOptions = esbuildOptions({\n    entryPoints: [entryPath],\n    write: isWriting,\n    outdir: isWriting ? bundleDirectory : undefined,\n    publicPath: isWriting ? bundlePath : undefined,\n    absWorkingDir: cwd,\n    define: {\n      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV)\n    },\n    plugins: [(0, _esbuildPluginGlobalExternals.globalExternals)({\n      ...globals,\n      react: {\n        varName: 'React',\n        type: 'cjs'\n      },\n      'react-dom': {\n        varName: 'ReactDOM',\n        type: 'cjs'\n      },\n      'react/jsx-runtime': {\n        varName: '_jsx_runtime',\n        type: 'cjs'\n      }\n    }),\n    // eslint-disable-next-line @babel/new-cap\n    (0, _nodeResolve.NodeResolvePlugin)({\n      extensions: ['.js', '.ts', '.jsx', '.tsx'],\n      resolveOptions: {\n        basedir: cwd\n      }\n    }), inMemoryPlugin, mdxESBuild(mdxOptions({\n      remarkPlugins: [remarkFrontmatter, [_remarkMdxFrontmatter.remarkMdxFrontmatter, {\n        name: 'frontmatter'\n      }]]\n    }, matter.data))],\n    bundle: true,\n    format: 'iife',\n    globalName: 'Component',\n    minify: true\n  }, matter.data);\n  const bundled = await esbuild.build(buildOptions);\n  if (bundled.outputFiles) {\n    const decoder = new _string_decoder.StringDecoder('utf8');\n    code = decoder.write(Buffer.from(bundled.outputFiles[0].contents));\n  } else if (buildOptions.outdir && buildOptions.write) {\n    // We know that this has to be an array of entry point strings, with a single entry\n    const entryFile = /** @type {{entryPoints: string[]}} */buildOptions.entryPoints[0];\n    const fileName = _path.default.basename(entryFile).replace(/\\.[^/.]+$/, '.js');\n    code = (await readFile(_path.default.join(buildOptions.outdir, fileName))).toString();\n    await unlink(_path.default.join(buildOptions.outdir, fileName));\n  } else {\n    throw new Error(\"You must either specify `write: false` or `write: true` and `outdir: '/path'` in your esbuild options\");\n  }\n  return {\n    code: `${code};return Component;`,\n    frontmatter: matter.data,\n    errors: bundled.errors,\n    matter\n  };\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMDXComponent = getMDXComponent;\nexports.getMDXExport = getMDXExport;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _jsx_runtime = _interopRequireWildcard(require(\"react/jsx-runtime\"));\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n/**\n * @typedef {import('./types').MDXContentProps} MDXContentProps\n */\n\n/**\n *\n * @param {string} code - The string of code you got from bundleMDX\n * @param {Record<string, unknown>} [globals] - Any variables your MDX needs to have accessible when it runs\n * @return {React.FunctionComponent<MDXContentProps>}\n */\nfunction getMDXComponent(code, globals) {\n  const mdxExport = getMDXExport(code, globals);\n  return mdxExport.default;\n}\n\n/**\n * @template ExportedObject\n * @template Frontmatter\n * @type {import('./types').MDXExportFunction<ExportedObject, Frontmatter>}\n * @param {string} code - The string of code you got from bundleMDX\n * @param {Record<string, unknown>} [globals] - Any variables your MDX needs to have accessible when it runs\n *\n */\nfunction getMDXExport(code, globals) {\n  const scope = {\n    React,\n    ReactDOM,\n    _jsx_runtime,\n    ...globals\n  };\n  // eslint-disable-next-line\n  const fn = new Function(...Object.keys(scope), code);\n  return fn(...Object.values(scope));\n}", "module.exports = require('../dist/client')\n", "export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import { cssBundleHref } from \"@remix-run/css-bundle\";\nimport type { LinksFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const links: LinksFunction = () => [\n  ...(cssBundleHref ? [{ rel: \"stylesheet\", href: cssBundleHref }] : []),\n];\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "export default function CategoriesPage() {\n\treturn <article>Categories</article>;\n}\n", "export default function AboutPage() {\n\treturn <article>About</article>;\n}\n", "import { LoaderArgs } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\nimport { getMdxContent } from \"~/util/mdx.server\";\nimport { getMDXComponent } from \"mdx-bundler/client\";\n\nexport async function loader({ params }: LoaderArgs) {\n\tif (!params.slug) {\n\t\tthrow new Error(\"Slug not found\");\n\t}\n\n\tconst { code, frontmatter } = await getMdxContent(params.slug);\n\treturn { code, frontmatter };\n}\n\nexport default function BlogPostPage() {\n\tconst { code } = useLoaderData<typeof loader>();\n\n\tconst Component = useMemo(() => getMDXComponent(code), [code]);\n\n\treturn (\n\t\t<article>\n\t\t\t<Component />\n\t\t</article>\n\t);\n}\n", "import path from \"path\";\nimport remarkMdxImages from \"remark-mdx-images\";\n\nimport { bundleMDX } from \"mdx-bundler\";\n\nexport async function getMdxContent(slug: string) {\n\tconst pathToContent = `/content/posts/${slug}/index.mdx`;\n\tconst dir = path.dirname(pathToContent);\n\treturn bundleMDX({\n\t\tfile: path.join(process.cwd(), pathToContent),\n\t\tcwd: path.join(process.cwd(), dir),\n\t\tmdxOptions: options => {\n\t\t\toptions.remarkPlugins = [\n\t\t\t\t...(options.remarkPlugins ?? []),\n\t\t\t\tremarkMdxImages,\n\t\t\t];\n\t\t\treturn options;\n\t\t},\n\t\tesbuildOptions: options => {\n\t\t\toptions.loader = {\n\t\t\t\t...options.loader,\n\t\t\t\t\".png\": \"dataurl\",\n\t\t\t\t\".jpg\": \"dataurl\",\n\t\t\t};\n\n\t\t\treturn options;\n\t\t},\n\t});\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node\u2019s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node\u2019s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node\u2019s position in its parent.\n * @param parent\n *   The node\u2019s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you\u2019re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n", "/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node\u2019s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n", "import { visit } from 'unist-util-visit';\n// eslint-disable-next-line unicorn/no-unsafe-regex\nconst urlPattern = /^(https?:)?\\//;\nconst relativePathPattern = /\\.\\.?\\//;\n/**\n * A Remark plugin for converting Markdown images to MDX images using imports for the image source.\n */\nconst remarkMdxImages = ({ resolve = true } = {}) => (ast) => {\n    const imports = [];\n    const imported = new Map();\n    visit(ast, 'image', (node, index, parent) => {\n        let { alt = null, title, url } = node;\n        if (urlPattern.test(url)) {\n            return;\n        }\n        if (!relativePathPattern.test(url) && resolve) {\n            url = `./${url}`;\n        }\n        let name = imported.get(url);\n        if (!name) {\n            name = `__${imported.size}_${url.replace(/\\W/g, '_')}__`;\n            imports.push({\n                type: 'mdxjsEsm',\n                value: '',\n                data: {\n                    estree: {\n                        type: 'Program',\n                        sourceType: 'module',\n                        body: [\n                            {\n                                type: 'ImportDeclaration',\n                                source: { type: 'Literal', value: url, raw: JSON.stringify(url) },\n                                specifiers: [\n                                    {\n                                        type: 'ImportDefaultSpecifier',\n                                        local: { type: 'Identifier', name },\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                },\n            });\n            imported.set(url, name);\n        }\n        const textElement = {\n            type: 'mdxJsxTextElement',\n            name: 'img',\n            children: [],\n            attributes: [\n                { type: 'mdxJsxAttribute', name: 'alt', value: alt },\n                {\n                    type: 'mdxJsxAttribute',\n                    name: 'src',\n                    value: {\n                        type: 'mdxJsxAttributeValueExpression',\n                        value: name,\n                        data: {\n                            estree: {\n                                type: 'Program',\n                                sourceType: 'module',\n                                comments: [],\n                                body: [{ type: 'ExpressionStatement', expression: { type: 'Identifier', name } }],\n                            },\n                        },\n                    },\n                },\n            ],\n        };\n        if (title) {\n            textElement.attributes.push({ type: 'mdxJsxAttribute', name: 'title', value: title });\n        }\n        parent.children.splice(index, 1, textElement);\n    });\n    ast.children.unshift(...imports);\n};\nexport default remarkMdxImages;\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    { title: \"New Remix App\" },\n    { name: \"description\", content: \"Welcome to Remix!\" },\n  ];\n};\n\nexport default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.8\" }}>\n      <h1>Welcome to Remix</h1>\n      <ul>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/blog\"\n            rel=\"noreferrer\"\n          >\n            15m Quickstart Blog Tutorial\n          </a>\n        </li>\n        <li>\n          <a\n            target=\"_blank\"\n            href=\"https://remix.run/tutorials/jokes\"\n            rel=\"noreferrer\"\n          >\n            Deep Dive Jokes App Tutorial\n          </a>\n        </li>\n        <li>\n          <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n            Remix Docs\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n}\n", "import { Outlet } from \"@remix-run/react\";\n\nexport default function PagesLayout() {\n\treturn (\n\t\t<main>\n\t\t\t<Outlet />\n\t\t</main>\n\t);\n}\n", "import { LoaderArgs, redirect } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\n\nexport function loader({ params }: LoaderArgs) {\n\tif (!params.slug) {\n\t\treturn redirect(\"/\");\n\t}\n\n\treturn null;\n}\n\nexport default function BlogLayout() {\n\treturn (\n\t\t<main>\n\t\t\t<p>the layout</p>\n\t\t\t<Outlet />\n\t\t</main>\n\t);\n}\n", "\nimport * as entryServer from \"/Users/thitemple/src/templecoding-site/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/_pages.categories.tsx\";\nimport * as route2 from \"./routes/_pages.about.tsx\";\nimport * as route3 from \"./routes/blog.$slug.tsx\";\nimport * as route4 from \"./routes/_index.tsx\";\nimport * as route5 from \"./routes/_pages.tsx\";\nimport * as route6 from \"./routes/blog.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/_pages.categories\": {\n      id: \"routes/_pages.categories\",\n      parentId: \"routes/_pages\",\n      path: \"categories\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/_pages.about\": {\n      id: \"routes/_pages.about\",\n      parentId: \"routes/_pages\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/blog.$slug\": {\n      id: \"routes/blog.$slug\",\n      parentId: \"routes/blog\",\n      path: \":slug\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/_pages\": {\n      id: \"routes/_pages\",\n      parentId: \"root\",\n      path: undefined,\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/blog\": {\n      id: \"routes/blog\",\n      parentId: \"root\",\n      path: \"blog\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    }\n  };"],
  "mappings": "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",
  "names": ["cssBundleHref", "module", "value", "module", "formatter", "matter", "ok", "bufferIndex", "matter", "fence", "close", "pick", "value", "require_dist", "bundleMDX", "nodeInterop", "remarkFrontmatter", "matter", "value", "loader", "getMDXComponent", "nodeInterop", "require_client", "module", "isbot", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "index", "is", "value", "visit", "path", "import_jsx_dev_runtime", "frontmatter", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime"]
}
